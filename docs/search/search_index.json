{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\/\\s\\-\\.]+"},"docs":[{"location":"","text":"CloudEvents v1.0.3\uff08\u5236\u4f5c\u4e2d\uff09 \u00b6 \u8bf7\u53c2\u9605 CloudEvents \u89c4\u8303","title":"\u4e3b\u9875"},{"location":"#cloudevents-v103","text":"\u8bf7\u53c2\u9605 CloudEvents \u89c4\u8303","title":"CloudEvents v1.0.3\uff08\u5236\u4f5c\u4e2d\uff09"},{"location":"RELEASE_NOTES/","text":"CloudEvents Release Notes \u00b6 v1.0.2 - 2022/02/05 \u00b6 \u6dfb\u52a0 C# \u547d\u540d\u7a7a\u95f4\u9009\u9879\u5230 proto (#937) \u8c03\u6574 SDK \u9700\u6c42\u63aa\u8f9e (#915) \u91cd\u7ec4 repo \u76ee\u5f55\u7ed3\u6784 (#904/#905) \u5c06 CE \u89c4\u8303\u7ffb\u8bd1\u6210\u4e2d\u6587 (#899/#898) \u5e8f\u5217\u5316\u65f6\u660e\u786e\u58f0\u660e application/json \u9ed8\u8ba4\u503c (#881) \u6dfb\u52a0 PowerShell SDK \u5230 SDK \u5217\u8868 (#875) WebHook \"Origin\" header \u6982\u5ff5\u4e0e RFC6454 \u51b2\u7a81 (#870) \u4f7f\u7528 JSON \u6570\u636e\u5185\u5bb9\u7c7b\u578b\u6f84\u6e05 JSON \u683c\u5f0f\u7684\u6570\u636e\u7f16\u7801 (#861) Webhook-Allowed-Origin \u4ee3\u66ff Webhook-Request-Origin (#836) \u5c06 Sampling \u6269\u5c55\u4fee\u6539\u4e3a Sampled Rate (#832) \u79fb\u9664 Kafka Binding \u4e2d\u7684\u51b2\u7a81\u8bed\u53e5 (#823/#813) \u4fee\u590d Kafka Binding \u4e2d\u7684\u8bed\u53e5\u51b2\u7a81 (#814) \u9610\u660e HTTP header \u503c\u7f16\u7801\u548c\u89e3\u7801\u8981\u6c42 (#793) \u5728\u5165\u95e8\u6587\u6863\u4e2d\uff0c\u589e\u52a0\u7248\u672c\u63a7\u5236\u76f8\u5173\u5efa\u8bae (#799) \u6dfb\u52a0\u5bf9protobuf\u6279\u5904\u7406\u683c\u5f0f\u7684\u652f\u6301 (#801) \u9610\u660e HTTP header \u503c\u7f16\u7801\u548c\u89e3\u7801\u8981\u6c42 (#816) \u5904\u7406\u9519\u8bef\u7684\u5165\u95e8\u6307\u5357 (#763) \u4fe1\u606f\u5206\u7c7b\u6269\u5c55 (#785) \u9610\u660e\u5206\u533a\u6269\u5c55\u5728 Kafka \u4e2d\u7684\u4f5c\u7528 (#727) v1.0.1 - 2020/12/12 \u00b6 \u6dfb\u52a0 protobuf \u683c\u5f0f\u4f5c\u4e3a\u5b50\u534f\u8bae (#721) \u5141\u8bb8 JSON \u503c\u4e3a null\uff0c\u5373\u672a\u8bbe\u7f6e (#713) \u5728\u5165\u95e8\u6587\u6863\u4e2d\u5c06\u5b89\u5168\u6027\u76f8\u5173\u5185\u5bb9\u5b9a\u4e3a\u89c4\u8303\u7684\u975e\u76ee\u6807\u5185\u5bb9 (#712) WebSockets \u534f\u8bae\u7ed1\u5b9a (#697) \u9610\u660e\u6d88\u606f\u6a21\u5f0f\u548c HTTP \u5185\u5bb9\u6a21\u5f0f\u4e4b\u95f4\u7684\u533a\u522b (#672) \u6dfb\u52a0\u7f3a\u5c11\u7684 sdks \u5230 readme (#666) \u65b0\u7684 sdk \u7ef4\u62a4\u8005\u89c4\u5219 (#665) \u8f6c\u79fb sdk \u6cbb\u7406\u548c\u6e05\u7406 (#663) \u4f7f 'datadef' \u5b9a\u4e49\u7b26\u5408\u89c4\u8303 (#658) \u6dfb\u52a0 CoC \u5e76\u5c06\u4e00\u4e9b\u6cbb\u7406\u6587\u6863\u79fb\u52a8\u5230\u201c\u793e\u533a\u201d (#656) \u6dfb\u52a0\u6709\u5173\u7406\u89e3 Cloud Events \u4ea4\u4e92\u7684\u535a\u5ba2\u6587\u7ae0 (#651) SDK \u6cbb\u7406\u8349\u6848 (#649) docs:\u4e3a SDK \u7ef4\u62a4\u8005\u548c\u8d21\u732e\u8005\u6dfb\u52a0\u901a\u7528\u8fdb\u7a0b (#648) \u4e3a Cloud Events \u7f16\u6392\u6dfb\u52a0 Demo (#646) \u660e\u786e JSON \u683c\u5f0f\u7684 MUST \u8981\u6c42 (#644) \u91cd\u65b0\u5f15\u5165\u534f\u8bae\u7f13\u51b2\u533a\u8868\u793a (#626) \u5173\u95ed #615 (#616) \u91cd\u5199\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6269\u5c55 (#607) Cloud Events Primer \u7684\u5c0f\u66f4\u65b0 (#600) Kafka \u8bf4\u660e (#599) \u4e13\u6709\u7ed1\u5b9a\u89c4\u8303\u5305\u542b\u6307\u5357 (#595) \u6dfb\u52a0\u94fe\u63a5\u5230 Pub/Sub \u7ed1\u5b9a (#588) \u6dfb\u52a0\u4e00\u4e9b\u5173\u4e8e SDK \u91cc\u7a0b\u7891\u7684\u6e05\u6670\u5ea6 (#584) \u5982\u4f55\u786e\u5b9a\u4e8c\u8fdb\u5236 CE \u4e0e\u968f\u673a\u975e CE \u6d88\u606f (#577) \u6dfb\u52a0 Visual Studio Code \u6269\u5c55\u5230\u793e\u533a\u5f00\u6e90\u6587\u6863 (#573) \u6307\u5b9a kafka \u6807\u5934\u952e\u3001\u503c\u4ee5\u53ca\u6d88\u606f\u952e\u7684\u7f16\u7801 (#572) \u4fee\u590d\u5206\u5e03\u5f0f\u8ddf\u8e2a\u793a\u4f8b (#569) \u5173\u4e8e\u5165\u95e8\u5d4c\u5957\u4e8b\u4ef6\u7684\u6bb5\u843d (#567) \u6dfb\u52a0\u66f4\u6539\u7ba1\u7406\u5458\u7684\u89c4\u5219-#564 \u66f4\u65b0 JSON \u67b6\u6784 (#563) \u53ef\u4ee5\u5ffd\u7565\u975e\u5fc5\u987b\u7684\u5efa\u8bae - \u98ce\u9669\u81ea\u8d1f (#562) \u66f4\u65b0\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6269\u5c55\u89c4\u8303\u94fe\u63a5 (#550) \u5c06 Ruby SDK \u6dfb\u52a0\u5230 SDK \u5217\u8868 (#548) v1.0.0 - 2019/10/24 \u00b6 \u4f7f\u7528\u201c\u751f\u4ea7\u8005\u201d\u548c\u201c\u6d88\u8d39\u8005\u201d\u800c\u4e0d\u662f\u201c\u53d1\u9001\u8005\u201d\u548c\u201c\u63a5\u6536\u8005\u201d \u9610\u660e\u4e2d\u4ecb\u5e94\u8f6c\u53d1\u53ef\u9009\u5c5e\u6027 \u5220\u9664\u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u4ee5\u5b57\u6bcd\u5f00\u5934\u7684\u9650\u5236 \u5220\u9664\u5c5e\u6027\u540d\u79f0\u5e94\u5177\u6709\u63cf\u8ff0\u6027\u548c\u7b80\u6d01\u6027\u7684\u5efa\u8bae \u9610\u660e\u4e00\u6b21\u4e8b\u4ef6\u53ef\u80fd\u5bfc\u81f4\u591a\u4e2a\u4e8b\u4ef6 \u6dfb\u52a0 Event Data \u90e8\u5206\uff08\u66ff\u6362 data \uff09\uff0c\u4f7f\u4e8b\u4ef6\u6570\u636e\u6210\u4e3a\u9876\u7ea7\u6982\u5ff5\u800c\u4e0d\u662f\u5c5e\u6027 \u4ecb\u7ecd\u4e00\u4e2a\u4e8b\u4ef6\u683c\u5f0f\u90e8\u5206 \u5b9a\u4e49\u7ed3\u6784\u5316\u6a21\u5f0f\u548c\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6d88\u606f \u5b9a\u4e49\u534f\u8bae\u7ed1\u5b9a \u6dfb\u52a0\u6269\u5c55\u5c5e\u6027\u5230 \"context attributes\" \u63cf\u8ff0\u4e2d \u5c06\u5c5e\u6027\u5e8f\u5217\u5316\u673a\u5236\u7684\u63d0\u540d\u4ece \"context attributes\" \u63cf\u8ff0\u79fb\u81f3 \"type system\" \u5c06 \u201ctransport\u201d \u666e\u904d\u66f4\u6539\u4e3a \u201cprotocol\u201d \u4e3a\u5c5e\u6027\u5f15\u5165 Boolean \u3001URI \u548c URI-reference \u7c7b\u578b \u5220\u9664\u5c5e\u6027\u7684 Any \u548c Map \u7c7b\u578b \u660e\u786e\u5b57\u7b26\u4e32\u5c5e\u6027\u4e2d\u5141\u8bb8\u4f7f\u7528\u54ea\u4e9b Unicode \u5b57\u7b26 \u8981\u6c42\u6240\u6709 context attribute \u503c\u90fd\u662f\u5217\u51fa\u7684\u7c7b\u578b\u4e4b\u4e00\uff0c\u5e76\u58f0\u660e\u5b83\u4eec\u53ef\u4ee5\u663e\u793a\u4e3a\u539f\u751f\u7c7b\u578b\u6216\u5b57\u7b26\u4e32\u3002 \u8981\u6c42 source \u975e\u7a7a\uff1b\u63a8\u8350\u4e00\u4e2a\u7edd\u5bf9URI \u7248\u672c\u53f7\u4ece 0.3 \u66f4\u65b0\u5230 1.0 \u9610\u660e type \u4e0e \"the originating occurrence\" \u6709\u5173 \u5220\u9664 datacontentencoding \u90e8\u5206 \u9610\u660e\u7f3a\u5931 datacontenttype \u5c5e\u6027\u7684\u5904\u7406 \u91cd\u547d\u540d schemaurl \u4e3a dataschema , \u5e76\u5c06\u7c7b\u578b\u4ece URI-reference \u66f4\u6539\u4e3a URI \u9650\u5236 dataschema \u4e3a\u975e\u7a7a\uff08\u5982\u679c\u5b58\u5728\uff09 \u6dfb\u52a0\u4e00\u4e9b\u5173\u4e8e time \u5982\u4f55\u5728\u65e0\u6cd5\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u4ea7\u751f\u7684\u7ec6\u8282\uff0c \u7279\u522b\u662f\u5728\u4e00\u4e2a\u6e90\u5185\u7684\u4e00\u81f4\u6027 \u6dfb\u52a0\u6269\u5c55 context attribute \u5904\u7406\u7684\u7ec6\u8282 \u6dfb\u52a0 CloudEvent \u63a5\u6536\u5668\u4f20\u9012\u975e CloudEvent \u5143\u6570\u636e\u7684\u5efa\u8bae Sample CloudEvent \u4e0d\u518d\u4f7f\u7528JSON\u5bf9\u8c61\u4f5c\u4e3a\u793a\u4f8b\u6269\u5c55\u503c v0.3 - 2019/06/13 \u00b6 \u66f4\u65b0\u6807\u9898\u683c\u5f0f\u3002 (#447) \u5220\u9664\u7a7a\u767d\u90e8\u5206 Misc. \u6392\u7248\u9519\u8bef\u4fee\u590d \u6dfb\u52a0\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u6784\u5efa CloudEvents \u7684\u6307\u5bfc (#404) \u5c3a\u5bf8\u9650\u5236 (#405) \u7c7b\u578b\u7cfb\u7edf\u66f4\u6539 // \u89c4\u8303\u5b57\u7b26\u4e32\u8868\u793a (#432) \u4e3a ID \u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u8bbe\u8ba1\u70b9 (#403) \u6dfb\u52a0 \"Subject\" context attribute \u5b9a\u4e49 \u8865\u5145\u672f\u8bed Source, Consumer, Producer and Intermediary (#420) \u6dfb\u52a0\u4e86\u5206\u533a\u6269\u5c55 (#218) Issue #331: \u9610\u660e source and id \u552f\u4e00\u6027\u7684\u8303\u56f4 \u6dfb\u52a0\u4e86 dataref.md \u7684\u94fe\u63a5 \u5bf9\u5c5e\u6027\u90e8\u5206\u6392\u5e8f \u4e3a\u6211\u4eec\u7684\u56fe\u50cf\u4fee\u590d\u9519\u8bef\u7684 href (#424) Master\u8868\u793a\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\uff0c\u5728\u6587\u672c\u4e2d\u4f7f\u7528\u672a\u6765\u7248\u672c\u3002 (#415) \u8c03\u6574\u793a\u4f8b\u4ee5\u5305\u542b AWS CloudWatch \u4e8b\u4ef6\u3001\u6211\u4eec\u4e8b\u5b9e\u4e0a\u7684\u4e2d\u5fc3\u4e8b\u4ef6\u683c\u5f0f\uff0c\u5e76\u5220\u9664\u6709\u6548\u4f46\u4e0d\u662f\u975e\u5e38\u76f8\u5173\u7684 SNS \u548c Kinesis \u793a\u4f8b\u3002 \u6dfb\u52a0 dataref \u5c5e\u6027\u5e76\u63cf\u8ff0 Claim Check Pattern (#377) \u4e3a PR 406 \u505a\u4e00\u4e9b\u9057\u6f0f\u7684\u6e05\u7406\u9879\u76ee \u4ecb\u7ecd \"subject\" (#406) \u6dfb\u52a0\u4e86\u6570\u636e\u5185\u5bb9\u7f16\u7801 (#387) \u6dfb\u52a0\u4e0e cloudevents \u7684 Apache RocketMQ \u4e13\u6709\u7ed1\u5b9a \u5728\u6240\u6709markdown\u4e0a\u6267\u884c https://prettier.io/ \u547d\u4ee4\u3002 (#411) \u9690\u79c1\u4e0e\u5b89\u5168 (#399) \u9610\u660e OPTIONAL \u7684\u542b\u4e49 \u6269\u5c55\u9075\u5faa #321 \u4e2d\u5f15\u5165\u7684\u5c5e\u6027\u547d\u540d\u65b9\u6848 \u6dfb\u52a0 README \u4fee\u590d\u6392\u7248\u9519\u8bef inter \u4e0d\u80fd\u63a5\u53d7\u5360\u4f4d\u7b26\u94fe\u63a5 \ud83d\ude44 \u5728\u4e13\u7528\u6587\u4ef6\u4e2d\u6536\u96c6\u4e13\u6709\u7684\u89c4\u8303 \u5c06 \"extension attributes\" \u90e8\u5206\u4e0b\u79fb\u5230 context attributes \u7684\u672b\u5c3e \u4fee\u590d\u4e86\u5165\u95e8\u4e2d\u7684\u65ad\u5f00\u94fe\u63a5 \u4fee\u590d\u65ad\u5f00\u7684\u94fe\u63a5 \u4e00\u81f4\u6027\uff1aschemaurl \u4f7f\u7528 URI-reference\uff0cprotobuf \u4f7f\u7528 URI-reference \u7528\u4e8e\u6279\u5904\u7406 JSON \u7684 HTTP \u4f20\u8f93\u7ed1\u5b9a (#370) minLength \u7528\u4e8e\u975e\u7a7a\u5c5e\u6027\uff0c\u6dfb\u52a0 schemaurl (#372) \u4fee\u590d\u63cf\u8ff0\u4e2d\u7684\u7c7b\u578b\u5f15\u7528 \u6570\u636e\u683c\u5f0f\u4e0e\u4e0a\u8ff0\u6bb5\u843d\u4fdd\u6301\u4e00\u81f4 \u5220\u9664\u91cd\u590d\u6bb5\u843d \u5728\u53d8\u91cf\u7c7b\u578b\u7684\u63cf\u8ff0\u4e2d\u6dfb\u52a0\u4efb\u4f55\u5141\u8bb8\u7684\u6574\u6570 s/\u5185\u5bb9\u7c7b\u578b/\u6570\u636e\u7c7b\u578b/g \u5728\u6211\u4eec\u7684\u53d1\u7248\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u516c\u544a Transports \u8d1f\u8d23\u6279\u5904\u7406\u6d88\u606f (#360) \u51c6\u786e\u6307\u5b9a Integer \u7c7b\u578b\u7684\u8303\u56f4 (#361) \u4fee\u590d http \u4f20\u8f93\u4e2d\u7684 TOC \u6dfb\u52a0 KubeCon \u6f14\u793a\u4fe1\u606f v0.2 - 2018/12/06 \u00b6 \u6dfb\u52a0\u4e86 HTTP WebHook \u89c4\u8303 (#155) \u6dfb\u52a0\u4e86 AMQP 1.0 \u4f20\u8f93\u548c AMQP \u7c7b\u578b\u7cfb\u7edf\u6620\u5c04 (#157) \u6dfb\u52a0\u4e86 MQTT 3.1.1 \u548c 5.0 \u4f20\u8f93\u7ed1\u5b9a (#158) \u6dfb\u52a0\u4e86 NATS \u4f20\u8f93\u7ed1\u5b9a (#215) \u6dfb\u52a0\u4e86\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6269\u5c55 (#227) \u6dfb\u52a0\u4e86\u5165\u95e8 (#238) \u6dfb\u52a0\u4e86 Sampling \u6269\u5c55 (#243) \u4e3a\u65b0\u534f\u8bae/\u7f16\u7801\u5b9a\u4e49 minimum bar (#254) \u5220\u9664 eventTypeVersion (#256) \u5c06\u6269\u5c55\u7684\u5e8f\u5217\u5316\u66f4\u6539\u4e3a\u9876\u7ea7JSON\u5c5e\u6027 (#277) \u6dfb\u52a0\u4e86\u5e8f\u5217\u6269\u5c55 (#291) \u6dfb\u52a0\u4e86 Protobuf \u4f20\u8f93 (#295) \u4e3a\u65b0\u6269\u5c55\u5b9a\u4e49\u4e86 minimum bar (#308) \u8981\u6c42\u6240\u6709\u5c5e\u6027\u4e3a\u5c0f\u5199\u5e76\u9650\u5236\u5b57\u7b26\u96c6 (#321) \u7b80\u5316/\u7f29\u77ed\u5c5e\u6027\u540d\u79f0 (#339) \u6dfb\u52a0\u4e86 SDK \u8bbe\u8ba1\u6587\u6863\u7684\u521d\u7a3f (#356) v0.1 - 2018/04/20 \u00b6 \u89c4\u8303\u7684\u521d\u7a3f\u53d1\u5e03\uff01","title":"\u53d1\u5e03\u8bf4\u660e"},{"location":"RELEASE_NOTES/#cloudevents-release-notes","text":"","title":"CloudEvents Release Notes"},{"location":"RELEASE_NOTES/#v102-20220205","text":"\u6dfb\u52a0 C# \u547d\u540d\u7a7a\u95f4\u9009\u9879\u5230 proto (#937) \u8c03\u6574 SDK \u9700\u6c42\u63aa\u8f9e (#915) \u91cd\u7ec4 repo \u76ee\u5f55\u7ed3\u6784 (#904/#905) \u5c06 CE \u89c4\u8303\u7ffb\u8bd1\u6210\u4e2d\u6587 (#899/#898) \u5e8f\u5217\u5316\u65f6\u660e\u786e\u58f0\u660e application/json \u9ed8\u8ba4\u503c (#881) \u6dfb\u52a0 PowerShell SDK \u5230 SDK \u5217\u8868 (#875) WebHook \"Origin\" header \u6982\u5ff5\u4e0e RFC6454 \u51b2\u7a81 (#870) \u4f7f\u7528 JSON \u6570\u636e\u5185\u5bb9\u7c7b\u578b\u6f84\u6e05 JSON \u683c\u5f0f\u7684\u6570\u636e\u7f16\u7801 (#861) Webhook-Allowed-Origin \u4ee3\u66ff Webhook-Request-Origin (#836) \u5c06 Sampling \u6269\u5c55\u4fee\u6539\u4e3a Sampled Rate (#832) \u79fb\u9664 Kafka Binding \u4e2d\u7684\u51b2\u7a81\u8bed\u53e5 (#823/#813) \u4fee\u590d Kafka Binding \u4e2d\u7684\u8bed\u53e5\u51b2\u7a81 (#814) \u9610\u660e HTTP header \u503c\u7f16\u7801\u548c\u89e3\u7801\u8981\u6c42 (#793) \u5728\u5165\u95e8\u6587\u6863\u4e2d\uff0c\u589e\u52a0\u7248\u672c\u63a7\u5236\u76f8\u5173\u5efa\u8bae (#799) \u6dfb\u52a0\u5bf9protobuf\u6279\u5904\u7406\u683c\u5f0f\u7684\u652f\u6301 (#801) \u9610\u660e HTTP header \u503c\u7f16\u7801\u548c\u89e3\u7801\u8981\u6c42 (#816) \u5904\u7406\u9519\u8bef\u7684\u5165\u95e8\u6307\u5357 (#763) \u4fe1\u606f\u5206\u7c7b\u6269\u5c55 (#785) \u9610\u660e\u5206\u533a\u6269\u5c55\u5728 Kafka \u4e2d\u7684\u4f5c\u7528 (#727)","title":"v1.0.2 - 2022/02/05"},{"location":"RELEASE_NOTES/#v101-20201212","text":"\u6dfb\u52a0 protobuf \u683c\u5f0f\u4f5c\u4e3a\u5b50\u534f\u8bae (#721) \u5141\u8bb8 JSON \u503c\u4e3a null\uff0c\u5373\u672a\u8bbe\u7f6e (#713) \u5728\u5165\u95e8\u6587\u6863\u4e2d\u5c06\u5b89\u5168\u6027\u76f8\u5173\u5185\u5bb9\u5b9a\u4e3a\u89c4\u8303\u7684\u975e\u76ee\u6807\u5185\u5bb9 (#712) WebSockets \u534f\u8bae\u7ed1\u5b9a (#697) \u9610\u660e\u6d88\u606f\u6a21\u5f0f\u548c HTTP \u5185\u5bb9\u6a21\u5f0f\u4e4b\u95f4\u7684\u533a\u522b (#672) \u6dfb\u52a0\u7f3a\u5c11\u7684 sdks \u5230 readme (#666) \u65b0\u7684 sdk \u7ef4\u62a4\u8005\u89c4\u5219 (#665) \u8f6c\u79fb sdk \u6cbb\u7406\u548c\u6e05\u7406 (#663) \u4f7f 'datadef' \u5b9a\u4e49\u7b26\u5408\u89c4\u8303 (#658) \u6dfb\u52a0 CoC \u5e76\u5c06\u4e00\u4e9b\u6cbb\u7406\u6587\u6863\u79fb\u52a8\u5230\u201c\u793e\u533a\u201d (#656) \u6dfb\u52a0\u6709\u5173\u7406\u89e3 Cloud Events \u4ea4\u4e92\u7684\u535a\u5ba2\u6587\u7ae0 (#651) SDK \u6cbb\u7406\u8349\u6848 (#649) docs:\u4e3a SDK \u7ef4\u62a4\u8005\u548c\u8d21\u732e\u8005\u6dfb\u52a0\u901a\u7528\u8fdb\u7a0b (#648) \u4e3a Cloud Events \u7f16\u6392\u6dfb\u52a0 Demo (#646) \u660e\u786e JSON \u683c\u5f0f\u7684 MUST \u8981\u6c42 (#644) \u91cd\u65b0\u5f15\u5165\u534f\u8bae\u7f13\u51b2\u533a\u8868\u793a (#626) \u5173\u95ed #615 (#616) \u91cd\u5199\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6269\u5c55 (#607) Cloud Events Primer \u7684\u5c0f\u66f4\u65b0 (#600) Kafka \u8bf4\u660e (#599) \u4e13\u6709\u7ed1\u5b9a\u89c4\u8303\u5305\u542b\u6307\u5357 (#595) \u6dfb\u52a0\u94fe\u63a5\u5230 Pub/Sub \u7ed1\u5b9a (#588) \u6dfb\u52a0\u4e00\u4e9b\u5173\u4e8e SDK \u91cc\u7a0b\u7891\u7684\u6e05\u6670\u5ea6 (#584) \u5982\u4f55\u786e\u5b9a\u4e8c\u8fdb\u5236 CE \u4e0e\u968f\u673a\u975e CE \u6d88\u606f (#577) \u6dfb\u52a0 Visual Studio Code \u6269\u5c55\u5230\u793e\u533a\u5f00\u6e90\u6587\u6863 (#573) \u6307\u5b9a kafka \u6807\u5934\u952e\u3001\u503c\u4ee5\u53ca\u6d88\u606f\u952e\u7684\u7f16\u7801 (#572) \u4fee\u590d\u5206\u5e03\u5f0f\u8ddf\u8e2a\u793a\u4f8b (#569) \u5173\u4e8e\u5165\u95e8\u5d4c\u5957\u4e8b\u4ef6\u7684\u6bb5\u843d (#567) \u6dfb\u52a0\u66f4\u6539\u7ba1\u7406\u5458\u7684\u89c4\u5219-#564 \u66f4\u65b0 JSON \u67b6\u6784 (#563) \u53ef\u4ee5\u5ffd\u7565\u975e\u5fc5\u987b\u7684\u5efa\u8bae - \u98ce\u9669\u81ea\u8d1f (#562) \u66f4\u65b0\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6269\u5c55\u89c4\u8303\u94fe\u63a5 (#550) \u5c06 Ruby SDK \u6dfb\u52a0\u5230 SDK \u5217\u8868 (#548)","title":"v1.0.1 - 2020/12/12"},{"location":"RELEASE_NOTES/#v100-20191024","text":"\u4f7f\u7528\u201c\u751f\u4ea7\u8005\u201d\u548c\u201c\u6d88\u8d39\u8005\u201d\u800c\u4e0d\u662f\u201c\u53d1\u9001\u8005\u201d\u548c\u201c\u63a5\u6536\u8005\u201d \u9610\u660e\u4e2d\u4ecb\u5e94\u8f6c\u53d1\u53ef\u9009\u5c5e\u6027 \u5220\u9664\u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u4ee5\u5b57\u6bcd\u5f00\u5934\u7684\u9650\u5236 \u5220\u9664\u5c5e\u6027\u540d\u79f0\u5e94\u5177\u6709\u63cf\u8ff0\u6027\u548c\u7b80\u6d01\u6027\u7684\u5efa\u8bae \u9610\u660e\u4e00\u6b21\u4e8b\u4ef6\u53ef\u80fd\u5bfc\u81f4\u591a\u4e2a\u4e8b\u4ef6 \u6dfb\u52a0 Event Data \u90e8\u5206\uff08\u66ff\u6362 data \uff09\uff0c\u4f7f\u4e8b\u4ef6\u6570\u636e\u6210\u4e3a\u9876\u7ea7\u6982\u5ff5\u800c\u4e0d\u662f\u5c5e\u6027 \u4ecb\u7ecd\u4e00\u4e2a\u4e8b\u4ef6\u683c\u5f0f\u90e8\u5206 \u5b9a\u4e49\u7ed3\u6784\u5316\u6a21\u5f0f\u548c\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6d88\u606f \u5b9a\u4e49\u534f\u8bae\u7ed1\u5b9a \u6dfb\u52a0\u6269\u5c55\u5c5e\u6027\u5230 \"context attributes\" \u63cf\u8ff0\u4e2d \u5c06\u5c5e\u6027\u5e8f\u5217\u5316\u673a\u5236\u7684\u63d0\u540d\u4ece \"context attributes\" \u63cf\u8ff0\u79fb\u81f3 \"type system\" \u5c06 \u201ctransport\u201d \u666e\u904d\u66f4\u6539\u4e3a \u201cprotocol\u201d \u4e3a\u5c5e\u6027\u5f15\u5165 Boolean \u3001URI \u548c URI-reference \u7c7b\u578b \u5220\u9664\u5c5e\u6027\u7684 Any \u548c Map \u7c7b\u578b \u660e\u786e\u5b57\u7b26\u4e32\u5c5e\u6027\u4e2d\u5141\u8bb8\u4f7f\u7528\u54ea\u4e9b Unicode \u5b57\u7b26 \u8981\u6c42\u6240\u6709 context attribute \u503c\u90fd\u662f\u5217\u51fa\u7684\u7c7b\u578b\u4e4b\u4e00\uff0c\u5e76\u58f0\u660e\u5b83\u4eec\u53ef\u4ee5\u663e\u793a\u4e3a\u539f\u751f\u7c7b\u578b\u6216\u5b57\u7b26\u4e32\u3002 \u8981\u6c42 source \u975e\u7a7a\uff1b\u63a8\u8350\u4e00\u4e2a\u7edd\u5bf9URI \u7248\u672c\u53f7\u4ece 0.3 \u66f4\u65b0\u5230 1.0 \u9610\u660e type \u4e0e \"the originating occurrence\" \u6709\u5173 \u5220\u9664 datacontentencoding \u90e8\u5206 \u9610\u660e\u7f3a\u5931 datacontenttype \u5c5e\u6027\u7684\u5904\u7406 \u91cd\u547d\u540d schemaurl \u4e3a dataschema , \u5e76\u5c06\u7c7b\u578b\u4ece URI-reference \u66f4\u6539\u4e3a URI \u9650\u5236 dataschema \u4e3a\u975e\u7a7a\uff08\u5982\u679c\u5b58\u5728\uff09 \u6dfb\u52a0\u4e00\u4e9b\u5173\u4e8e time \u5982\u4f55\u5728\u65e0\u6cd5\u786e\u5b9a\u7684\u60c5\u51b5\u4e0b\u4ea7\u751f\u7684\u7ec6\u8282\uff0c \u7279\u522b\u662f\u5728\u4e00\u4e2a\u6e90\u5185\u7684\u4e00\u81f4\u6027 \u6dfb\u52a0\u6269\u5c55 context attribute \u5904\u7406\u7684\u7ec6\u8282 \u6dfb\u52a0 CloudEvent \u63a5\u6536\u5668\u4f20\u9012\u975e CloudEvent \u5143\u6570\u636e\u7684\u5efa\u8bae Sample CloudEvent \u4e0d\u518d\u4f7f\u7528JSON\u5bf9\u8c61\u4f5c\u4e3a\u793a\u4f8b\u6269\u5c55\u503c","title":"v1.0.0 - 2019/10/24"},{"location":"RELEASE_NOTES/#v03-20190613","text":"\u66f4\u65b0\u6807\u9898\u683c\u5f0f\u3002 (#447) \u5220\u9664\u7a7a\u767d\u90e8\u5206 Misc. \u6392\u7248\u9519\u8bef\u4fee\u590d \u6dfb\u52a0\u4e00\u4e9b\u5173\u4e8e\u5982\u4f55\u6784\u5efa CloudEvents \u7684\u6307\u5bfc (#404) \u5c3a\u5bf8\u9650\u5236 (#405) \u7c7b\u578b\u7cfb\u7edf\u66f4\u6539 // \u89c4\u8303\u5b57\u7b26\u4e32\u8868\u793a (#432) \u4e3a ID \u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u8bbe\u8ba1\u70b9 (#403) \u6dfb\u52a0 \"Subject\" context attribute \u5b9a\u4e49 \u8865\u5145\u672f\u8bed Source, Consumer, Producer and Intermediary (#420) \u6dfb\u52a0\u4e86\u5206\u533a\u6269\u5c55 (#218) Issue #331: \u9610\u660e source and id \u552f\u4e00\u6027\u7684\u8303\u56f4 \u6dfb\u52a0\u4e86 dataref.md \u7684\u94fe\u63a5 \u5bf9\u5c5e\u6027\u90e8\u5206\u6392\u5e8f \u4e3a\u6211\u4eec\u7684\u56fe\u50cf\u4fee\u590d\u9519\u8bef\u7684 href (#424) Master\u8868\u793a\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\uff0c\u5728\u6587\u672c\u4e2d\u4f7f\u7528\u672a\u6765\u7248\u672c\u3002 (#415) \u8c03\u6574\u793a\u4f8b\u4ee5\u5305\u542b AWS CloudWatch \u4e8b\u4ef6\u3001\u6211\u4eec\u4e8b\u5b9e\u4e0a\u7684\u4e2d\u5fc3\u4e8b\u4ef6\u683c\u5f0f\uff0c\u5e76\u5220\u9664\u6709\u6548\u4f46\u4e0d\u662f\u975e\u5e38\u76f8\u5173\u7684 SNS \u548c Kinesis \u793a\u4f8b\u3002 \u6dfb\u52a0 dataref \u5c5e\u6027\u5e76\u63cf\u8ff0 Claim Check Pattern (#377) \u4e3a PR 406 \u505a\u4e00\u4e9b\u9057\u6f0f\u7684\u6e05\u7406\u9879\u76ee \u4ecb\u7ecd \"subject\" (#406) \u6dfb\u52a0\u4e86\u6570\u636e\u5185\u5bb9\u7f16\u7801 (#387) \u6dfb\u52a0\u4e0e cloudevents \u7684 Apache RocketMQ \u4e13\u6709\u7ed1\u5b9a \u5728\u6240\u6709markdown\u4e0a\u6267\u884c https://prettier.io/ \u547d\u4ee4\u3002 (#411) \u9690\u79c1\u4e0e\u5b89\u5168 (#399) \u9610\u660e OPTIONAL \u7684\u542b\u4e49 \u6269\u5c55\u9075\u5faa #321 \u4e2d\u5f15\u5165\u7684\u5c5e\u6027\u547d\u540d\u65b9\u6848 \u6dfb\u52a0 README \u4fee\u590d\u6392\u7248\u9519\u8bef inter \u4e0d\u80fd\u63a5\u53d7\u5360\u4f4d\u7b26\u94fe\u63a5 \ud83d\ude44 \u5728\u4e13\u7528\u6587\u4ef6\u4e2d\u6536\u96c6\u4e13\u6709\u7684\u89c4\u8303 \u5c06 \"extension attributes\" \u90e8\u5206\u4e0b\u79fb\u5230 context attributes \u7684\u672b\u5c3e \u4fee\u590d\u4e86\u5165\u95e8\u4e2d\u7684\u65ad\u5f00\u94fe\u63a5 \u4fee\u590d\u65ad\u5f00\u7684\u94fe\u63a5 \u4e00\u81f4\u6027\uff1aschemaurl \u4f7f\u7528 URI-reference\uff0cprotobuf \u4f7f\u7528 URI-reference \u7528\u4e8e\u6279\u5904\u7406 JSON \u7684 HTTP \u4f20\u8f93\u7ed1\u5b9a (#370) minLength \u7528\u4e8e\u975e\u7a7a\u5c5e\u6027\uff0c\u6dfb\u52a0 schemaurl (#372) \u4fee\u590d\u63cf\u8ff0\u4e2d\u7684\u7c7b\u578b\u5f15\u7528 \u6570\u636e\u683c\u5f0f\u4e0e\u4e0a\u8ff0\u6bb5\u843d\u4fdd\u6301\u4e00\u81f4 \u5220\u9664\u91cd\u590d\u6bb5\u843d \u5728\u53d8\u91cf\u7c7b\u578b\u7684\u63cf\u8ff0\u4e2d\u6dfb\u52a0\u4efb\u4f55\u5141\u8bb8\u7684\u6574\u6570 s/\u5185\u5bb9\u7c7b\u578b/\u6570\u636e\u7c7b\u578b/g \u5728\u6211\u4eec\u7684\u53d1\u7248\u8fc7\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u516c\u544a Transports \u8d1f\u8d23\u6279\u5904\u7406\u6d88\u606f (#360) \u51c6\u786e\u6307\u5b9a Integer \u7c7b\u578b\u7684\u8303\u56f4 (#361) \u4fee\u590d http \u4f20\u8f93\u4e2d\u7684 TOC \u6dfb\u52a0 KubeCon \u6f14\u793a\u4fe1\u606f","title":"v0.3 - 2019/06/13"},{"location":"RELEASE_NOTES/#v02-20181206","text":"\u6dfb\u52a0\u4e86 HTTP WebHook \u89c4\u8303 (#155) \u6dfb\u52a0\u4e86 AMQP 1.0 \u4f20\u8f93\u548c AMQP \u7c7b\u578b\u7cfb\u7edf\u6620\u5c04 (#157) \u6dfb\u52a0\u4e86 MQTT 3.1.1 \u548c 5.0 \u4f20\u8f93\u7ed1\u5b9a (#158) \u6dfb\u52a0\u4e86 NATS \u4f20\u8f93\u7ed1\u5b9a (#215) \u6dfb\u52a0\u4e86\u5206\u5e03\u5f0f\u8ddf\u8e2a\u6269\u5c55 (#227) \u6dfb\u52a0\u4e86\u5165\u95e8 (#238) \u6dfb\u52a0\u4e86 Sampling \u6269\u5c55 (#243) \u4e3a\u65b0\u534f\u8bae/\u7f16\u7801\u5b9a\u4e49 minimum bar (#254) \u5220\u9664 eventTypeVersion (#256) \u5c06\u6269\u5c55\u7684\u5e8f\u5217\u5316\u66f4\u6539\u4e3a\u9876\u7ea7JSON\u5c5e\u6027 (#277) \u6dfb\u52a0\u4e86\u5e8f\u5217\u6269\u5c55 (#291) \u6dfb\u52a0\u4e86 Protobuf \u4f20\u8f93 (#295) \u4e3a\u65b0\u6269\u5c55\u5b9a\u4e49\u4e86 minimum bar (#308) \u8981\u6c42\u6240\u6709\u5c5e\u6027\u4e3a\u5c0f\u5199\u5e76\u9650\u5236\u5b57\u7b26\u96c6 (#321) \u7b80\u5316/\u7f29\u77ed\u5c5e\u6027\u540d\u79f0 (#339) \u6dfb\u52a0\u4e86 SDK \u8bbe\u8ba1\u6587\u6863\u7684\u521d\u7a3f (#356)","title":"v0.2 - 2018/12/06"},{"location":"RELEASE_NOTES/#v01-20180420","text":"\u89c4\u8303\u7684\u521d\u7a3f\u53d1\u5e03\uff01","title":"v0.1 - 2018/04/20"},{"location":"http-webhook/","text":"\u7528\u4e8e\u4e8b\u4ef6\u4f20\u8f93\u7684 HTTP 1.1 Web Hooks - 1.0.3\uff08\u5236\u4f5c\u4e2d\uff09 \u00b6 \u6458\u8981 \u00b6 \"Webhooks\"\u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u5e94\u7528\u548cHTTP\u7ec8\u7aef\u95f4\u4f20\u8f93\u901a\u77e5\u6d88\u606f\u7684\u6a21\u5f0f\u3002\u5c3d\u7ba1\u8fd9\u79cd\u6a21\u5f0f\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f46\u76ee\u524d\u4ecd\u7136\u6ca1\u6709\u4e00\u4e2a\u5bf9Web Hooks\u7684\u6b63\u5f0f\u5b9a\u4e49\u3002\u672c\u89c4\u8303\u65e8\u5728\u5236\u5b9a\u4e00\u4e2a\u7528\u4e8e CNCF CloudEvents \u7684Web Hooks\u7684\u5b9a\u4e49\uff0c\u4f46\u672c\u5b9a\u4e49\u4ec5\u4f5c\u7528\u4e8eCloudEvents\u8303\u56f4\u5185\u3002 \u76ee\u5f55 \u00b6 \u7b80\u4ecb 1.1. \u4e00\u81f4\u6027 1.2. \u4e0eHTTP\u7684\u5173\u7cfb \u4f20\u8f93\u901a\u77e5 \u8ba4\u8bc1 \u6ee5\u7528\u4fdd\u62a4 \u5f15\u7528 1. Introduction/\u7b80\u4ecb \u00b6 \"Webhooks\" \u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u5e94\u7528\u548cHTTP\u7ec8\u7aef\u95f4\u4f20\u8f93\u901a\u77e5\u6d88\u606f\u7684\u6a21\u5f0f\u3002\u8fd9\u4e9bWebhook\u5e94\u7528\uff0c\u5141\u8bb8\u5176\u5b83\u5e94\u7528\u7a0b\u5e8f\u6ce8\u518c\u6210\u4e3a\u4e00\u4e2a\u63a5\u6536\u5f53\u524d\u6709\u6548\u901a\u77e5\u7684HTTP\u7ec8\u7aef\u3002 \u672c\u89c4\u8303\u6839\u636e\u4ee5\u4e0b\u5185\u5bb9\u5236\u5b9a\u4e86\u4e00\u5957HTTP\u65b9\u6cd5\uff1a\u53d1\u9001\u8005\u4e0b\u53d1\u901a\u77e5\u7684\u8fc7\u7a0b\u3001\u5728\u4e8b\u4ef6\u4f20\u8f93\u4e2d\u4fdd\u62a4\u4f20\u8f93\u76ee\u6807\u7684\u8ba4\u8bc1\u6a21\u578b\u4ee5\u53ca\u4e00\u4e2a\u4fdd\u62a4\u53d1\u9001\u8005\u4e0d\u88ab\u6ee5\u7528\u6210\u4e3aHTTP\u6d2a\u6c34\u653b\u51fb\u53d1\u8d77\u8005\u7684\u6ce8\u518c\u63e1\u624b\u673a\u5236\u3002 1.1. Conformance/\u4e00\u81f4\u6027 \u00b6 \u672c\u6587\u6863\u4e2d\u7684\u5173\u952e\u8bcd \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\",\"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" \u9700\u8981\u6309\u7167 RFC2119 \u4e2d\u7684\u63cf\u8ff0\u6765\u7406\u89e3\u3002 1.2. Relation to HTTP/\u4e0eHTTP\u7684\u5173\u7cfb \u00b6 \u672c\u89c4\u8303\u89c4\u5b9a\u4e86\u4e00\u7cfb\u5217\u89c4\u5219\uff0c\u4ee5\u9650\u5236\u5177\u4f53 HTTP \u65b9\u6cd5 \u548c\u5934\u90e8\u7684\u4f7f\u7528\u4ee5\u53ca\u5904\u7406\u3002 \u672c\u89c4\u8303\u540c\u6837\u9002\u7528\u4e8eHTTP/2 ( RFC7540 ),\u56e0\u4e3a\u5b83\u672c\u8eab\u5c31\u4e0eHTTP 1.1 \u7684\u8bed\u4e49\u517c\u5bb9\u3002 2. Delivering notifications/\u4f20\u8f93\u901a\u77e5 \u00b6 2.1. \u4f20\u8f93\u8bf7\u6c42 \u00b6 \u901a\u77e5\u662f\u901a\u8fc7HTTP\u8bf7\u6c42\u7684\u65b9\u5f0f\u4f20\u8f93\u7684\uff0c\u5728\u54cd\u5e94\u4e2d\u643a\u5e26\u4e86\u8be5\u4f20\u8f93\u7684\u72b6\u6001\u3002 \u5728\u8fde\u63a5\u4e2d\u5fc5\u987b\u4f7f\u7528HTTP-over-TLS (HTTPS) RFC2818 \u3002 \u7528\u6765\u4f20\u8f93\u8bf7\u6c42\u7684HTTP\u65b9\u6cd5\u5fc5\u987b\u662f POST\u7c7b\u578b . \u5728HTTP \u5934\u90e8\u4e2d Content-Type \u5fc5\u987b\u88ab\u6307\u5b9a\uff0c\u540c\u65f6\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u5fc5\u987b\u8981\u643a\u5e26\u8be5\u5185\u5bb9\u7c7b\u578b\u4e0b\u7684\u6709\u6548\u8d1f\u8f7d(\u5373\u6709\u6548\u5185\u5bb9)\u3002\u672c\u89c4\u8303\u4e0d\u5141\u8bb8\u6ca1\u6709\u643a\u5e26\u6709\u6548\u8d1f\u8f7d\u7684\u8bf7\u6c42\uff08\u6bd4\u5982\u67d0\u4e9b\u901a\u77e5\u8bf7\u6c42\u7684\u5168\u90e8\u6570\u636e\u90fd\u5728HTTP\u5934\u90e8\u800c\u6ca1\u6709\u5185\u5bb9\u6570\u636e\uff09\u3002 \u9664\u4e0a\u8ff0\u9650\u5236\u5916\uff0c\u672c\u89c4\u8303\u4e0d\u4f1a\u66f4\u591a\u5730\u9650\u5236\u901a\u77e5\u7684\u5185\u5bb9\uff0c\u540c\u6837\u4e0d\u4f1a\u5f3a\u5236\u7528\u6765\u4f20\u8f93\u7684 HTTP \u76ee\u6807\u8d44\u6e90 \u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u652f\u6301\u5e76\u8981\u6c42 \u6ee5\u7528\u4fdd\u62a4 \u673a\u5236\uff0c\u5219\u4f20\u8f93\u7684\u8bf7\u6c42\u5fc5\u987b\u5305\u542b WebHook-Request-Origin \u5934\u90e8\u3002 WebHook-Request-Origin \u5934\u90e8\u7684\u503c\u662f\u4e00\u4e2a\u80fd\u6807\u8bc6\u51fa\u53d1\u9001\u8005\u7684DNS\u57df\u540d\u8868\u8fbe\u5f62\u5f0f\u3002 2.2. \u4f20\u8f93\u54cd\u5e94 \u00b6 \u4f20\u8f93\u54cd\u5e94\u53ef\u80fd\u4f1a\u5305\u542b\u4e00\u79cd\u63d0\u4f9b\u5177\u4f53\u72b6\u6001\u4fe1\u606f\u7684\u8d1f\u8f7d\uff0c\u8fd9\u4e9b\u4fe1\u606f\u662f\u7528\u6765\u5904\u7406\u9519\u8bef\u7684\u3002\u672c\u89c4\u8303\u4e0d\u4f1a\u53bb\u5b9a\u4e49\u8fd9\u79cd\u8d1f\u8f7d\u3002 \u670d\u52a1\u7aef\u7684\u54cd\u5e94\u5fc5\u987b\u4e0d\u80fd\u5305\u542b 3xx HTTP \u72b6\u6001\u7801 \u540c\u65f6\u5ba2\u6237\u7aef\u4e5f\u4e0d\u80fd\u4f7f\u7528\u6b64\u7c7b\u72b6\u6001\u7801\u8fdb\u884c\u8df3\u8f6c\u3002 \u4e00\u65e6\u8bf7\u6c42\u88ab\u63a5\u6536\u3001\u5904\u7406\u4e86\u4e14\u5728\u54cd\u5e94\u4e2d\u5305\u542b\u4e86\u5904\u7406\u7ec6\u8282\u7684\u8d1f\u8f7d\uff0c\u5219\u54cd\u5e94\u5fc5\u987b\u8981\u5305\u542b 200 OK \u6216\u662f 201 Created \u72b6\u6001\u7801\u3002\u5728\u8fd9\u79cd\u60c5\u5f62\u4e0b\uff0c\u8be5\u54cd\u5e94\u5fc5\u987b\u8981\u5305\u542b Content-Type \u5934\u90e8\u3002 \u5982\u679c\u8bf7\u6c42\u88ab\u63a5\u6536\u3001\u5904\u7406\u4e86\uff0c\u4f46\u662f\u8bf7\u6c42\u4e2d\u6ca1\u6709\u6709\u6548\u8d1f\u8f7d\uff0c\u5219\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b 201 Created or 204 No Content \u72b6\u6001\u7801\u3002 \u5982\u679c\u8bf7\u6c42\u88ab\u63a5\u6536\u4e86\uff0c\u4f46\u5c1a\u672a\u88ab\u5904\u7406\u6216\u662f\u5904\u7406\u72b6\u6001\u4ecd\u662f\u672a\u77e5\u7684\uff0c\u5219\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b 202 Accepted \u72b6\u6001\u7801\u3002 \u5982\u679c\u4e00\u4e2a\u4f20\u8f93\u76ee\u6807\u5df2\u7ecf\u8fc7\u671f\u4e86\uff0c\u4f46HTTP\u7ad9\u70b9\u4ecd\u7136\u5b58\u5728\uff0c\u5219HTTP\u7ad9\u70b9\u5e94\u5f53\u8fd4\u56de\u4e00\u4e2a 410 Gone \u72b6\u6001\u7801\uff0c\u540c\u65f6\u53d1\u9001\u8005\u5e94\u5f53\u4e0d\u518d\u5411\u8be5\u76ee\u6807\u53d1\u9001\u66f4\u591a\u7684\u901a\u77e5\u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u56e0\u4e3a\u8d85\u8fc7\u8bf7\u6c42\u9650\u5236\u800c\u65e0\u6cd5\u5904\u7406\u8bf7\u6c42\uff0c\u5b83\u5e94\u5f53\u8fd4\u56de\u4e00\u4e2a 429 Too Many Requests \u72b6\u6001\u7801\uff0c\u540c\u65f6\u5fc5\u987b\u5305\u542b Retry-After \u5934\u90e8\u3002\u53d1\u9001\u8005\u5fc5\u987b\u89c2\u5bdfRetry-After\u7684\u503c\uff0c\u76f4\u5230\u6307\u5b9a\u65f6\u95f4\u540e\u518d\u53d1\u9001\u540e\u7eed\u8bf7\u6c42\u3002 \u5982\u679c\u4f20\u8f93\u56e0\u4e3a\u901a\u77e5\u683c\u5f0f\u4e0d\u80fd\u88ab\u7406\u89e3\u800c\u88ab\u62d2\u7edd\u63a5\u6536\uff0c\u5219\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b 415 Unsupported Media Type \u72b6\u6001\u7801\u3002 \u5176\u5b83\u7684\u6240\u6709\u9519\u8bef\u5904\u7406\u60c5\u5f62\u90fd\u9700\u8981\u53c2\u7167 RFC7231 \u7684\u8868\u8ff0\u3002 3. Authorization/\u8ba4\u8bc1 \u00b6 \u4f20\u8f93\u8bf7\u6c42\u5fc5\u987b\u8981\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u8fdb\u884c\u8ba4\u8bc1\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u4f9d\u8d56OAuth 2.0 Bearer \u4ee4\u724c RFC6750 \u6a21\u578b\u3002 \u4f20\u8f93\u76ee\u6807\u5fc5\u987b\u540c\u65f6\u652f\u6301\u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f\u3002 \u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u57fa\u4e8e\u4ee4\u724c\u7684\u8ba4\u8bc1\u65b9\u6848\u3002\u4ee4\u724c\u53ef\u4ee5\u91c7\u53d6\u4efb\u610f\u5f62\u5f0f\uff0c\u53ef\u4ee5\u662f\u6807\u51c6\u5316\u7684\u4ee4\u724c\u683c\u5f0f\u6216\u662f\u7b80\u5355\u7684key\u8868\u8fbe\u5f0f\u3002 \u7981\u6b62\u4f7f\u7528\u4efb\u4f55\u57fa\u4e8e\u6311\u6218\u7684\u8ba4\u8bc1\u65b9\u6848\u3002 3.1. \u5934\u90e8\u8bf7\u6c42\u8ba4\u8bc1\u5b57\u6bb5 \u00b6 \u8bbf\u95ee\u4ee4\u724c\u662f\u5728HTTP/1.1\u4e2d\u5b9a\u4e49\u7684\u5934\u90e8 Authorization \u5b57\u6bb5\u4e2d\u643a\u5e26\u7684\u3002 \u5bf9\u4e8e OAuth 2.0 Bearer \u4ee4\u724c\u800c\u8a00\uff0c\"Bearer\"\u65b9\u6848\u5fc5\u987b\u88ab\u4f7f\u7528\u3002 \u793a\u4f8b\uff1a POST /resource HTTP/1.1 Host: server.example.com Authorization: Bearer mF_9.B5f-4.1JqM 3.2 URI \u67e5\u8be2\u53c2\u6570 \u00b6 \u5f53\u901a\u8fc7HTTP\u8bf7\u6c42URI\u53d1\u9001\u8bbf\u95ee\u4ee4\u724c\u65f6\uff0c\u5ba2\u6237\u9700\u8981\u6309\u7167\"\u7edf\u4e00\u8d44\u6e90\u6807\u5fd7\u7b26 (URI): \u901a\u7528\u53e5\u6cd5\" RFC3986 \u4e2d\u5b9a\u4e49\u7684\u65b9\u5f0f\uff0c\u5c06\"access_token\"\u53c2\u6570\u5f53\u4f5c\u8bf7\u6c42URI\u7684\u67e5\u8be2\u5185\u5bb9\u8fdb\u884c\u53d1\u9001\u3002 \u4f8b\u5982\uff0c\u5ba2\u6237\u7aef\u751f\u6210\u5982\u4e0b\u7684HTTP\u8bf7\u6c42\uff1a POST /resource?access_token=mF_9.B5f-4.1JqM HTTP/1.1 Host: server.example.com HTTP\u8bf7\u6c42URI\u53ef\u80fd\u4f1a\u5305\u542b\u5176\u5b83\u7279\u5b9a\u7684\u53c2\u6570\uff0c\u6b64\u65f6\u5fc5\u987b\u6b63\u786e\u5730\u4f7f\u7528\"&\"(ASCII code 38)\u5b57\u7b26\uff0c\u5c06\"access_token\"\u53c2\u6570\u4e0e\u5176\u5b83\u7279\u5b9a\u7684\u53c2\u6570\u5206\u5272\u5f00\u6765\u3002 \u4f8b\u5982: https://server.example.com/resource?access_token=mF_9.B5f-4.1JqM&p=q \u4f7f\u7528URI\u67e5\u8be2\u67e5\u8be2\u53c2\u6570\u8fd9\u79cd\u5f62\u5f0f\u7684\u5ba2\u6237\u7aef\uff0c\u5fc5\u987b\u8981\u53d1\u9001\u4e00\u4e2a\u7f13\u5b58\u63a7\u5236\u7684\u5934\u90e8\u5e76\u5305\u542b\"no-store\"\u9009\u9879\u3002\u670d\u52a1\u7aef\u6210\u529f(2XX \u72b6\u6001)\u7684\u54cd\u5e94\u5fc5\u987b\u5305\u542b\u58f0\u660e\u4e86\"private\"\u9009\u9879\u7684\u7f13\u5b58\u63a7\u5236\u5934\u90e8\u3002 \u56e0\u4e3aURI\u65b9\u6cd5\u5929\u7136\u7684\u5b89\u5168\u5f31\u70b9(\u53c2\u7167 RFC6750, Section 5 )\uff0c\u6bd4\u5982\u5305\u542b\u8bbf\u95ee\u4ee4\u724c\u7684URI\u6781\u6709\u53ef\u80fd\u88ab\u8bb0\u5f55\uff0c\u9664\u4e86\u5728\u65e0\u6cd5\u4f7f\u7528\"Authorization\"\u5b57\u6bb5\u7684\u573a\u666f\u4e0b\uff0c\u4f60\u90fd\u4e0d\u5e94\u8be5\u8fd9\u79cd\u65b9\u5f0f\u6765\u53d1\u9001\u53d1\u9001\u8bbf\u95ee\u4ee4\u724c\u3002\u5176\u5b83\u5728 RFC6750 \u4e2d\u544a\u8beb\u5728\u6b64\u5904\u540c\u6837\u9002\u7528\u3002 4. Abuse Protection/\u6ee5\u7528\u4fdd\u62a4\u673a\u5236 \u00b6 \u4efb\u4f55\u5141\u8bb8\u4efb\u610fHTTP\u7ec8\u7aef\u6ce8\u518c\u6216\u662f\u4f20\u8f93\u901a\u77e5\u7684\u7cfb\u7edf\u90fd\u53ef\u80fd\u53d7\u5230\u6f5c\u5728\u7684\u6ee5\u7528\u653b\u51fb\uff0c\u6bd4\u5982\u4e00\u4e9b\u4eba\u6076\u610f\u6216\u662f\u65e0\u610f\u7684\u6ce8\u518c\u4e00\u4e9b\u4e0d\u671f\u671b\u6536\u5230\u8bf7\u6c42\u7684\u7cfb\u7edf\u5730\u5740\u6216\u662f\u4e00\u4e9b\u6ce8\u518c\u65b9\u65e0\u6cd5\u88ab\u8ba4\u8bc1\u7684\u5730\u5740\u3002\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u5b9e\u73b0\u901a\u77e5\u7684\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u53ef\u80fd\u4f1a\u88ab\u6ee5\u7528\u6210\u4e3aDoS\u653b\u51fb\u7684\u53d1\u8d77\u65b9\u3002 \u4e3a\u4e86\u4fdd\u62a4\u53d1\u9001\u4e0d\u53d7\u6076\u610f\u6ee5\u7528\u4f24\u5bb3\uff0c\u5408\u6cd5\u7684\u4f20\u8f93\u76ee\u6807\u9700\u8981\u8868\u660e\u5b83\u540c\u610f\u63a5\u6536\u8fd9\u6761\u4f20\u8f93\u7ed9\u5b83\u7684\u901a\u77e5\u3002 \u4e0a\u8ff0\u7684\u4f20\u8f93\u540c\u610f\u6a21\u5f0f\u662f\u901a\u8fc7\u4e0b\u9762\u7684\u9a8c\u8bc1\u63e1\u624b\u673a\u5236\u5b9e\u73b0\u7684\u3002\u63e1\u624b\u53ef\u4ee5\u5728\u6ce8\u518c\u65f6\u6267\u884c\u6216\u662f\u88ab\u5f53\u4f5c\u4e00\u4e2a\u88ab\u4f20\u8f93\u524d\u7684\u8bf7\u6c42\u5728\u4f20\u8f93\u524d\u6267\u884c\u3002 \u5728\u8fd9\u91cc\uff0c\u7406\u89e3\u63e1\u624b\u673a\u5236\u5e76\u4e0d\u662f\u4e3a\u4e86\u5efa\u7acb\u4e00\u4e2a\u8ba4\u8bc1\u4e0a\u4e0b\u6587\u662f\u5c24\u4e3a\u91cd\u8981\u7684\u3002\u63e1\u624b\u673a\u5236\u53ea\u662f\u7528\u6765\u4fdd\u62a4\u53d1\u9001\u65b9\u4e0d\u4f1a\u5c06\u901a\u77e5\u53d1\u9001\u5230\u5e76\u4e0d\u60f3\u63a5\u6536\u7684\u63a5\u53d7\u8005\u90a3\u91cc\u53bb\u3002\u5c3d\u7ba1\u5728\u672c\u89c4\u8303\u4e2d\u5f3a\u5236\u4f7f\u7528\u4e86\u8ba4\u8bc1\u6a21\u578b\uff0c\u4f46\u8fd9\u79cd\u6a21\u578b\u65e0\u6cd5\u4fdd\u62a4\u90a3\u4e9b\u6ca1\u6709\u5b9e\u73b0\u8bbf\u95ee\u63a7\u5236\u4f46\u53c8\u4e0d\u60f3\u63a5\u6536\u4e0d\u9700\u8981\u6d41\u91cf\u7684\u7f51\u7ad9\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc Authorization \u662f\u6ca1\u6709\u7528\u7684\u3002 \u4f20\u8f93\u76ee\u6807\u5e94\u8be5\u652f\u6301\u6ee5\u7528\u4fdd\u62a4\u7279\u6027\u3002\u5982\u679c\u4e00\u4e2a\u76ee\u6807\u7aef\u4e0d\u652f\u6301\u6b64\u7279\u6027\uff0c\u53d1\u9001\u65b9\u53ef\u80fd\u4f1a\u9009\u62e9\u4e0d\u53d1\u9001\u5230\u8fd9\u4e2a\u76ee\u6807\u7aef\uff0c\u6216\u662f\u4ee5\u4e00\u4e2a\u7279\u522b\u4f4e\u901f\u7387\u53bb\u53d1\u9001\u8bf7\u6c42\u3002 4.1. \u9a8c\u8bc1\u8bf7\u6c42 \u00b6 \u9a8c\u8bc1\u8bf7\u6c42\u4f7f\u7528\u4e86HTTP\u7684 OPTIONS \u65b9\u6cd5\u3002\u8bf7\u6c42\u4f1a\u88ab\u91cd\u5b9a\u5411\u5230\u6ce8\u518c\u65f6\u6307\u5b9a\u7684URI\u8d44\u6e90\u4e0a\u53bb\u3002 \u6709\u4e86\u9a8c\u8bc1\u8bf7\u6c42\uff0c\u53d1\u9001\u65b9\u5411\u76ee\u6807\u7aef\u7d22\u8981\u53d1\u9001\u901a\u77e5\u7684\u6743\u9650\uff0c\u9a8c\u8bc1\u8bf7\u6c42\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u5e0c\u671b\u7684\u8bf7\u6c42\u901f\u7387\uff08\u5982\u6bcf\u5206\u949f\u6536\u5230\u591a\u5c11\u8bf7\u6c42\uff09\u3002 \u4f20\u8f93\u76ee\u6807\u5c06\u4f1a\u54cd\u5e94\u4e00\u4e2a\u6743\u9650\u58f0\u660e\u4ee5\u53ca\u5141\u8bb8\u7684\u8bf7\u6c42\u901f\u7387\u3002 \u4e0b\u9762\u5c31\u662f\u5728\u9a8c\u8bc1\u8bf7\u6c42\u4e2d\u4f7f\u7528\u7684\u5934\u90e8\u5b57\u6bb5\u3002 4.1.2. WebHook-Request-Origin \u00b6 \u5e0c\u671b\u53d1\u9001\u901a\u77e5\u7684\u53d1\u9001\u8005\u5fc5\u987b\u8981\u5728\u9a8c\u8bc1\u8bf7\u6c42\u548c\u8bf7\u6c42\u6743\u9650\u4e2d\u5305\u542b WebHook-Request-Origin \u5b57\u6bb5\u3002\u8fd9\u4e2a\u5b57\u6bb5\u5fc5\u987b\u8981\u5305\u542b\u4e00\u4e2a\u80fd\u6807\u8bc6\u53d1\u9001\u7cfb\u7edf\u7684DNS\u8868\u8fbe\u5f0f\uff08\u5982eventemitter.example.com\uff09\u3002\u8fd9\u4e2a\u5b57\u6bb5\u7684\u503c\u662f\u7528\u6765\u6807\u8bc6\u6240\u6709\u53d1\u9001\u65b9\u7684\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u4e3b\u673a\u3002 \u4e00\u65e6\u63e1\u624b\u548c\u6743\u9650\u88ab\u627f\u8ba4\uff0c\u53d1\u9001\u8005\u5fc5\u987b\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u90fd\u5305\u542b WebHook-Request-Origin \u8fd9\u4e2a\u5b57\u6bb5\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u503c\u3002 \u793a\u4f8b\uff1a WebHook-Request-Origin: eventemitter.example.com 4.1.3. WebHook-\u8bf7\u6c42\u56de\u8c03 \u00b6 WebHook-Request-Callback \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u7528\u6765\u8865\u5145 WebHook-Request-Origin \u7684\u5b57\u6bb5\u3002\u5b83\u5141\u8bb8\u4f20\u8f93\u76ee\u6807\u901a\u8fc7HTTPs\u56de\u8c03\u7684\u65b9\u5f0f\u5f02\u6b65\u5730\u540c\u610f\u6743\u9650\u8bf7\u6c42\u3002 \u5982\u679c\u63a5\u6536\u7a0b\u5e8f\u6ca1\u6709\u6e05\u695a\u5730\u8868\u660e\u652f\u6301\u63e1\u624b\u673a\u5236\uff0c\u7ba1\u7406\u5458\u4ecd\u7136\u53ef\u4ee5\u5728\u65e5\u5fd7\u4e2d\u627e\u5230\u56de\u8c03\u7684URL\uff0c\u518d\u624b\u52a8\u8c03\u7528\u5b83\u6765\u6388\u6743\u8bbf\u95ee\u3002 \u4f20\u8f93\u76ee\u6807\u901a\u8fc7\u53d1\u5e03\u4e00\u4e2a\u7ed9\u5b9aURL\u7684HTTPS GET \u6216 POST\u8bf7\u6c42\u6765\u6388\u6743\u8bbf\u95ee\u3002HTTP GET\u8bf7\u6c42\u901a\u8fc7\u6d4f\u89c8\u5668\u6765\u624b\u52a8\u6267\u884c\u3002 \u4f20\u8f93\u76ee\u6807\u53ef\u80fd\u4f1a\u5728\u56de\u8c03\u4e2d\u5305\u542b WebHook-Allowed-Rate \u5b57\u6bb5\u3002 \u8fd9\u4e2aURL\u6ca1\u6709\u6b63\u5f0f\u7684\u9650\u5236\u6761\u4ef6\uff0c\u4f46\u5b83\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u80fd\u6807\u8bc6\u51fa\u4f20\u8f93\u76ee\u6807\u7684\u6807\u8bc6\u7b26\uff0c\u540c\u65f6\u5b83\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u5bc6\u94a5\u6765\u4f7fURL\u66f4\u52a0\u96be\u731c\uff0c\u4ece\u800c\u4f7f\u7b2c\u4e09\u65b9\u5c31\u65e0\u6cd5\u8f7b\u677e\u5730\u5192\u5145\u4f20\u8f93\u76ee\u6807\u3002 \u793a\u4f8b: WebHook-Request-Callback: https://example.com/confirm?id=12345&key=...base64... 4.1.4. WebHook-\u8bf7\u6c42\u901f\u7387 \u00b6 \u53d1\u9001\u8005\u53ef\u80fd\u901a\u8fc7 WebHook-Request-Rate \u5b57\u6bb5\u6765\u5411\u63a5\u53d7\u8005\u8bf7\u6c42\u4e00\u4e2a\u5408\u9002\u7684\u53d1\u9001\u8bf7\u6c42\u901f\u7387\u3002\u8fd9\u4e2a\u503c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6765\u8868\u793a\u4e00\u4e2a\u5927\u4e8e0\u7684\u6574\u6570\uff0c\u5b83\u4ee3\u8868\u7740\u6bcf\u5206\u949f\u53d1\u9001\u591a\u5c11\u4e2a\u8bf7\u6c42\u3002 \u6bd4\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u7d22\u8981\u4e00\u4e2a\u6bcf\u5206\u949f\u53d1\u9001120\u6b21\u8bf7\u6c42\u7684\u6743\u9650\uff1a WebHook-Request-Rate: 120 4.2. \u9a8c\u8bc1\u54cd\u5e94 \u00b6 \u5f53\u4e14\u4ec5\u5728\u4f20\u8f93\u76ee\u6807\u5141\u8bb8\u4e8b\u4ef6\u4f20\u8f93\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5fc5\u987b\u8981\u901a\u8fc7 WebHook-Allowed-Origin \u548c WebHook-Allowed-Rate \u5b57\u6bb5\u6765\u54cd\u5e94\u8bf7\u6c42\u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u9009\u62e9\u56de\u8c03\u7684\u65b9\u5f0f\u6765\u6388\u6743\uff0c\u5219\u5b83\u4e0d\u4f1a\u4f7f\u7528\u54cd\u5e94\u5b57\u6bb5\u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u4e0d\u5141\u8bb8\u4e8b\u4ef6\u4f20\u8f93\u6216\u662f\u4e0d\u671f\u671b\u6536\u5230\u4e8b\u4ef6\u4f46\u4ecd\u60f3\u5904\u7406HTTP OPTIONS \u65b9\u6cd5\uff0c\u5f53\u524d\u7684\u54cd\u5e94\u5219\u4e0d\u5e94\u8be5\u88ab\u5f53\u4f5c\u6279\u51c6\u6388\u6743\uff0c\u63e1\u624b\u673a\u5236\u6b64\u65f6\u4e0d\u5e94\u8be5\u4f9d\u9760\u72b6\u6001\u7801\u6765\u5224\u65ad\u3002\u5982\u679c\u4f20\u8f93\u76ee\u6807\u4e0d\u5e0c\u671b\u5904\u7406HTTP OPTIONS\u65b9\u6cd5\uff0c\u5b83\u5e94\u8be5\u4ee5405\u72b6\u6001\u7801\u6765\u54cd\u5e94\uff0c\u5c31\u50cf\u5b83\u4e0d\u652f\u6301HTTP OPTIONS\u4e00\u6837\u3002 OPTIONS\u54cd\u5e94\u5e94\u8be5\u5305\u542b Allow \u5b57\u6bb5\u6765\u8868\u660e POST \u65b9\u6cd5\u5df2\u7ecf\u88ab\u5141\u8bb8\u4e86\u3002\u5176\u5b83\u65b9\u6cd5\u7c7b\u578b\u53ef\u80fd\u4e5f\u88ab\u5141\u8bb8\u4e86\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u5728\u672c\u89c4\u8303\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002 4.2.1. WebHook-\u5141\u8bb8\u6e90\u5934 \u00b6 \u5f53\u4f20\u8f93\u76ee\u6807\u540c\u610f\u901a\u77e5\u4e8b\u4ef6\u7684\u4f20\u8f93\u65f6\uff0c\u5fc5\u987b\u8981\u8fd4\u56de WebHook-Allowed-Origin \u5b57\u6bb5\u3002\u8be5\u5b57\u6bb5\u7684\u503c\u5fc5\u987b\u662f\u8bf7\u6c42\u4e2d WebHook-Request-Origin \u5b57\u6bb5\u4e2d\u53d1\u9001\u65b9\u7684\u540d\u79f0\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u661f\u53f7\uff08*\uff09\u8868\u660e\u4f20\u8f93\u76ee\u6807\u540c\u610f\u6765\u81ea\u4efb\u610f\u6e90\u5934\u7684\u901a\u77e5\u3002 WebHook-Allowed-Origin: eventemitter.example.com \u6216 WebHook-Allowed-Origin: * 4.2.2. WebHook-\u5141\u8bb8\u901f\u7387 \u00b6 \u5f53\u8bf7\u6c42\u4e2d\u5305\u542b WebHook-Request-Rate \u5b57\u6bb5\u65f6\uff0c\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b WebHook-Allowed-Rate \u5b57\u6bb5\u3002\u5176\u5b83\u60c5\u51b5\u4e0b WebHook-Allowed-Rate \u5b57\u6bb5\u5e94\u5f53\u88ab\u8fd4\u56de\u3002 \u672c\u5b57\u6bb5\u7684\u503c\u7528\u6765\u8868\u793a\u540c\u610f\u53d1\u9001\u901a\u77e5\u7684\u901f\u7387\u3002\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u661f\u53f7\uff08*\uff09\u6216\u662f\u5b57\u7b26\u4e32\u5f62\u5f0f\u6765\u8868\u793a\u4e00\u4e2a\u5927\u4e8e0\u7684\u6574\u6570\u3002\u661f\u53f7\u4ee3\u8868\u5bf9\u901f\u7387\u6ca1\u6709\u9650\u5236\u3002\u6574\u6570\u4ee3\u8868\u7740\u6bcf\u5206\u949f\u63a5\u6536\u591a\u5c11\u4e2a\u8bf7\u6c42\u3002\u5bf9\u4e8e\u8bf7\u6c42\u901f\u7387\u5927\u4e8e\u5141\u8bb8\u63a5\u6536\u901f\u7387\u7684\u60c5\u5f62\uff0c\u53d1\u9001\u65b9\u5e94\u5f53\u8003\u8651\u9650\u6d41\u3002\u901a\u8fc7\u62d2\u7edd\u8bf7\u6c42\u6765\u9650\u6d41\u53ef\u4ee5\u53c2\u8003HTTP\u7684 429 \u8fc7\u591a\u8bf7\u6c42 \u72b6\u6001\u7801\u3002 \u793a\u4f8b\uff1a \u4e0b\u9762\u7684HTTP\u5934\u90e8\u5141\u8bb8\u6bcf\u5206\u949f100\u6b21\u8bf7\u6c42\u7684\u53d1\u9001\u901f\u7387: WebHook-Allowed-Rate: 100 5. References/\u5f15\u7528 \u00b6 RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC2818 HTTP over TLS RFC6750 The OAuth 2.0 Authorization Framework: Bearer Token Usage RFC6585 Additional HTTP Status Codes RFC7230 Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing RFC7231 Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content RFC7235 Hypertext Transfer Protocol (HTTP/1.1): Authentication RFC7540 Hypertext Transfer Protocol Version 2 (HTTP/2)","title":"\u7f51\u7edc\u94a9\u5b50"},{"location":"http-webhook/#http-11-web-hooks-103","text":"","title":"\u7528\u4e8e\u4e8b\u4ef6\u4f20\u8f93\u7684 HTTP 1.1 Web Hooks - 1.0.3\uff08\u5236\u4f5c\u4e2d\uff09"},{"location":"http-webhook/#_1","text":"\"Webhooks\"\u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u5e94\u7528\u548cHTTP\u7ec8\u7aef\u95f4\u4f20\u8f93\u901a\u77e5\u6d88\u606f\u7684\u6a21\u5f0f\u3002\u5c3d\u7ba1\u8fd9\u79cd\u6a21\u5f0f\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f46\u76ee\u524d\u4ecd\u7136\u6ca1\u6709\u4e00\u4e2a\u5bf9Web Hooks\u7684\u6b63\u5f0f\u5b9a\u4e49\u3002\u672c\u89c4\u8303\u65e8\u5728\u5236\u5b9a\u4e00\u4e2a\u7528\u4e8e CNCF CloudEvents \u7684Web Hooks\u7684\u5b9a\u4e49\uff0c\u4f46\u672c\u5b9a\u4e49\u4ec5\u4f5c\u7528\u4e8eCloudEvents\u8303\u56f4\u5185\u3002","title":"\u6458\u8981"},{"location":"http-webhook/#_2","text":"\u7b80\u4ecb 1.1. \u4e00\u81f4\u6027 1.2. \u4e0eHTTP\u7684\u5173\u7cfb \u4f20\u8f93\u901a\u77e5 \u8ba4\u8bc1 \u6ee5\u7528\u4fdd\u62a4 \u5f15\u7528","title":"\u76ee\u5f55"},{"location":"http-webhook/#1-introduction","text":"\"Webhooks\" \u662f\u4e00\u79cd\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u5e94\u7528\u548cHTTP\u7ec8\u7aef\u95f4\u4f20\u8f93\u901a\u77e5\u6d88\u606f\u7684\u6a21\u5f0f\u3002\u8fd9\u4e9bWebhook\u5e94\u7528\uff0c\u5141\u8bb8\u5176\u5b83\u5e94\u7528\u7a0b\u5e8f\u6ce8\u518c\u6210\u4e3a\u4e00\u4e2a\u63a5\u6536\u5f53\u524d\u6709\u6548\u901a\u77e5\u7684HTTP\u7ec8\u7aef\u3002 \u672c\u89c4\u8303\u6839\u636e\u4ee5\u4e0b\u5185\u5bb9\u5236\u5b9a\u4e86\u4e00\u5957HTTP\u65b9\u6cd5\uff1a\u53d1\u9001\u8005\u4e0b\u53d1\u901a\u77e5\u7684\u8fc7\u7a0b\u3001\u5728\u4e8b\u4ef6\u4f20\u8f93\u4e2d\u4fdd\u62a4\u4f20\u8f93\u76ee\u6807\u7684\u8ba4\u8bc1\u6a21\u578b\u4ee5\u53ca\u4e00\u4e2a\u4fdd\u62a4\u53d1\u9001\u8005\u4e0d\u88ab\u6ee5\u7528\u6210\u4e3aHTTP\u6d2a\u6c34\u653b\u51fb\u53d1\u8d77\u8005\u7684\u6ce8\u518c\u63e1\u624b\u673a\u5236\u3002","title":"1. Introduction/\u7b80\u4ecb"},{"location":"http-webhook/#11-conformance","text":"\u672c\u6587\u6863\u4e2d\u7684\u5173\u952e\u8bcd \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\",\"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" \u9700\u8981\u6309\u7167 RFC2119 \u4e2d\u7684\u63cf\u8ff0\u6765\u7406\u89e3\u3002","title":"1.1. Conformance/\u4e00\u81f4\u6027"},{"location":"http-webhook/#12-relation-to-httphttp","text":"\u672c\u89c4\u8303\u89c4\u5b9a\u4e86\u4e00\u7cfb\u5217\u89c4\u5219\uff0c\u4ee5\u9650\u5236\u5177\u4f53 HTTP \u65b9\u6cd5 \u548c\u5934\u90e8\u7684\u4f7f\u7528\u4ee5\u53ca\u5904\u7406\u3002 \u672c\u89c4\u8303\u540c\u6837\u9002\u7528\u4e8eHTTP/2 ( RFC7540 ),\u56e0\u4e3a\u5b83\u672c\u8eab\u5c31\u4e0eHTTP 1.1 \u7684\u8bed\u4e49\u517c\u5bb9\u3002","title":"1.2. Relation to HTTP/\u4e0eHTTP\u7684\u5173\u7cfb"},{"location":"http-webhook/#2-delivering-notifications","text":"","title":"2. Delivering notifications/\u4f20\u8f93\u901a\u77e5"},{"location":"http-webhook/#21","text":"\u901a\u77e5\u662f\u901a\u8fc7HTTP\u8bf7\u6c42\u7684\u65b9\u5f0f\u4f20\u8f93\u7684\uff0c\u5728\u54cd\u5e94\u4e2d\u643a\u5e26\u4e86\u8be5\u4f20\u8f93\u7684\u72b6\u6001\u3002 \u5728\u8fde\u63a5\u4e2d\u5fc5\u987b\u4f7f\u7528HTTP-over-TLS (HTTPS) RFC2818 \u3002 \u7528\u6765\u4f20\u8f93\u8bf7\u6c42\u7684HTTP\u65b9\u6cd5\u5fc5\u987b\u662f POST\u7c7b\u578b . \u5728HTTP \u5934\u90e8\u4e2d Content-Type \u5fc5\u987b\u88ab\u6307\u5b9a\uff0c\u540c\u65f6\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u5fc5\u987b\u8981\u643a\u5e26\u8be5\u5185\u5bb9\u7c7b\u578b\u4e0b\u7684\u6709\u6548\u8d1f\u8f7d(\u5373\u6709\u6548\u5185\u5bb9)\u3002\u672c\u89c4\u8303\u4e0d\u5141\u8bb8\u6ca1\u6709\u643a\u5e26\u6709\u6548\u8d1f\u8f7d\u7684\u8bf7\u6c42\uff08\u6bd4\u5982\u67d0\u4e9b\u901a\u77e5\u8bf7\u6c42\u7684\u5168\u90e8\u6570\u636e\u90fd\u5728HTTP\u5934\u90e8\u800c\u6ca1\u6709\u5185\u5bb9\u6570\u636e\uff09\u3002 \u9664\u4e0a\u8ff0\u9650\u5236\u5916\uff0c\u672c\u89c4\u8303\u4e0d\u4f1a\u66f4\u591a\u5730\u9650\u5236\u901a\u77e5\u7684\u5185\u5bb9\uff0c\u540c\u6837\u4e0d\u4f1a\u5f3a\u5236\u7528\u6765\u4f20\u8f93\u7684 HTTP \u76ee\u6807\u8d44\u6e90 \u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u652f\u6301\u5e76\u8981\u6c42 \u6ee5\u7528\u4fdd\u62a4 \u673a\u5236\uff0c\u5219\u4f20\u8f93\u7684\u8bf7\u6c42\u5fc5\u987b\u5305\u542b WebHook-Request-Origin \u5934\u90e8\u3002 WebHook-Request-Origin \u5934\u90e8\u7684\u503c\u662f\u4e00\u4e2a\u80fd\u6807\u8bc6\u51fa\u53d1\u9001\u8005\u7684DNS\u57df\u540d\u8868\u8fbe\u5f62\u5f0f\u3002","title":"2.1. \u4f20\u8f93\u8bf7\u6c42"},{"location":"http-webhook/#22","text":"\u4f20\u8f93\u54cd\u5e94\u53ef\u80fd\u4f1a\u5305\u542b\u4e00\u79cd\u63d0\u4f9b\u5177\u4f53\u72b6\u6001\u4fe1\u606f\u7684\u8d1f\u8f7d\uff0c\u8fd9\u4e9b\u4fe1\u606f\u662f\u7528\u6765\u5904\u7406\u9519\u8bef\u7684\u3002\u672c\u89c4\u8303\u4e0d\u4f1a\u53bb\u5b9a\u4e49\u8fd9\u79cd\u8d1f\u8f7d\u3002 \u670d\u52a1\u7aef\u7684\u54cd\u5e94\u5fc5\u987b\u4e0d\u80fd\u5305\u542b 3xx HTTP \u72b6\u6001\u7801 \u540c\u65f6\u5ba2\u6237\u7aef\u4e5f\u4e0d\u80fd\u4f7f\u7528\u6b64\u7c7b\u72b6\u6001\u7801\u8fdb\u884c\u8df3\u8f6c\u3002 \u4e00\u65e6\u8bf7\u6c42\u88ab\u63a5\u6536\u3001\u5904\u7406\u4e86\u4e14\u5728\u54cd\u5e94\u4e2d\u5305\u542b\u4e86\u5904\u7406\u7ec6\u8282\u7684\u8d1f\u8f7d\uff0c\u5219\u54cd\u5e94\u5fc5\u987b\u8981\u5305\u542b 200 OK \u6216\u662f 201 Created \u72b6\u6001\u7801\u3002\u5728\u8fd9\u79cd\u60c5\u5f62\u4e0b\uff0c\u8be5\u54cd\u5e94\u5fc5\u987b\u8981\u5305\u542b Content-Type \u5934\u90e8\u3002 \u5982\u679c\u8bf7\u6c42\u88ab\u63a5\u6536\u3001\u5904\u7406\u4e86\uff0c\u4f46\u662f\u8bf7\u6c42\u4e2d\u6ca1\u6709\u6709\u6548\u8d1f\u8f7d\uff0c\u5219\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b 201 Created or 204 No Content \u72b6\u6001\u7801\u3002 \u5982\u679c\u8bf7\u6c42\u88ab\u63a5\u6536\u4e86\uff0c\u4f46\u5c1a\u672a\u88ab\u5904\u7406\u6216\u662f\u5904\u7406\u72b6\u6001\u4ecd\u662f\u672a\u77e5\u7684\uff0c\u5219\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b 202 Accepted \u72b6\u6001\u7801\u3002 \u5982\u679c\u4e00\u4e2a\u4f20\u8f93\u76ee\u6807\u5df2\u7ecf\u8fc7\u671f\u4e86\uff0c\u4f46HTTP\u7ad9\u70b9\u4ecd\u7136\u5b58\u5728\uff0c\u5219HTTP\u7ad9\u70b9\u5e94\u5f53\u8fd4\u56de\u4e00\u4e2a 410 Gone \u72b6\u6001\u7801\uff0c\u540c\u65f6\u53d1\u9001\u8005\u5e94\u5f53\u4e0d\u518d\u5411\u8be5\u76ee\u6807\u53d1\u9001\u66f4\u591a\u7684\u901a\u77e5\u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u56e0\u4e3a\u8d85\u8fc7\u8bf7\u6c42\u9650\u5236\u800c\u65e0\u6cd5\u5904\u7406\u8bf7\u6c42\uff0c\u5b83\u5e94\u5f53\u8fd4\u56de\u4e00\u4e2a 429 Too Many Requests \u72b6\u6001\u7801\uff0c\u540c\u65f6\u5fc5\u987b\u5305\u542b Retry-After \u5934\u90e8\u3002\u53d1\u9001\u8005\u5fc5\u987b\u89c2\u5bdfRetry-After\u7684\u503c\uff0c\u76f4\u5230\u6307\u5b9a\u65f6\u95f4\u540e\u518d\u53d1\u9001\u540e\u7eed\u8bf7\u6c42\u3002 \u5982\u679c\u4f20\u8f93\u56e0\u4e3a\u901a\u77e5\u683c\u5f0f\u4e0d\u80fd\u88ab\u7406\u89e3\u800c\u88ab\u62d2\u7edd\u63a5\u6536\uff0c\u5219\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b 415 Unsupported Media Type \u72b6\u6001\u7801\u3002 \u5176\u5b83\u7684\u6240\u6709\u9519\u8bef\u5904\u7406\u60c5\u5f62\u90fd\u9700\u8981\u53c2\u7167 RFC7231 \u7684\u8868\u8ff0\u3002","title":"2.2. \u4f20\u8f93\u54cd\u5e94"},{"location":"http-webhook/#3-authorization","text":"\u4f20\u8f93\u8bf7\u6c42\u5fc5\u987b\u8981\u4f7f\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u8fdb\u884c\u8ba4\u8bc1\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u4f9d\u8d56OAuth 2.0 Bearer \u4ee4\u724c RFC6750 \u6a21\u578b\u3002 \u4f20\u8f93\u76ee\u6807\u5fc5\u987b\u540c\u65f6\u652f\u6301\u4e24\u79cd\u8ba4\u8bc1\u65b9\u5f0f\u3002 \u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u57fa\u4e8e\u4ee4\u724c\u7684\u8ba4\u8bc1\u65b9\u6848\u3002\u4ee4\u724c\u53ef\u4ee5\u91c7\u53d6\u4efb\u610f\u5f62\u5f0f\uff0c\u53ef\u4ee5\u662f\u6807\u51c6\u5316\u7684\u4ee4\u724c\u683c\u5f0f\u6216\u662f\u7b80\u5355\u7684key\u8868\u8fbe\u5f0f\u3002 \u7981\u6b62\u4f7f\u7528\u4efb\u4f55\u57fa\u4e8e\u6311\u6218\u7684\u8ba4\u8bc1\u65b9\u6848\u3002","title":"3. Authorization/\u8ba4\u8bc1"},{"location":"http-webhook/#31","text":"\u8bbf\u95ee\u4ee4\u724c\u662f\u5728HTTP/1.1\u4e2d\u5b9a\u4e49\u7684\u5934\u90e8 Authorization \u5b57\u6bb5\u4e2d\u643a\u5e26\u7684\u3002 \u5bf9\u4e8e OAuth 2.0 Bearer \u4ee4\u724c\u800c\u8a00\uff0c\"Bearer\"\u65b9\u6848\u5fc5\u987b\u88ab\u4f7f\u7528\u3002 \u793a\u4f8b\uff1a POST /resource HTTP/1.1 Host: server.example.com Authorization: Bearer mF_9.B5f-4.1JqM","title":"3.1. \u5934\u90e8\u8bf7\u6c42\u8ba4\u8bc1\u5b57\u6bb5"},{"location":"http-webhook/#32-uri","text":"\u5f53\u901a\u8fc7HTTP\u8bf7\u6c42URI\u53d1\u9001\u8bbf\u95ee\u4ee4\u724c\u65f6\uff0c\u5ba2\u6237\u9700\u8981\u6309\u7167\"\u7edf\u4e00\u8d44\u6e90\u6807\u5fd7\u7b26 (URI): \u901a\u7528\u53e5\u6cd5\" RFC3986 \u4e2d\u5b9a\u4e49\u7684\u65b9\u5f0f\uff0c\u5c06\"access_token\"\u53c2\u6570\u5f53\u4f5c\u8bf7\u6c42URI\u7684\u67e5\u8be2\u5185\u5bb9\u8fdb\u884c\u53d1\u9001\u3002 \u4f8b\u5982\uff0c\u5ba2\u6237\u7aef\u751f\u6210\u5982\u4e0b\u7684HTTP\u8bf7\u6c42\uff1a POST /resource?access_token=mF_9.B5f-4.1JqM HTTP/1.1 Host: server.example.com HTTP\u8bf7\u6c42URI\u53ef\u80fd\u4f1a\u5305\u542b\u5176\u5b83\u7279\u5b9a\u7684\u53c2\u6570\uff0c\u6b64\u65f6\u5fc5\u987b\u6b63\u786e\u5730\u4f7f\u7528\"&\"(ASCII code 38)\u5b57\u7b26\uff0c\u5c06\"access_token\"\u53c2\u6570\u4e0e\u5176\u5b83\u7279\u5b9a\u7684\u53c2\u6570\u5206\u5272\u5f00\u6765\u3002 \u4f8b\u5982: https://server.example.com/resource?access_token=mF_9.B5f-4.1JqM&p=q \u4f7f\u7528URI\u67e5\u8be2\u67e5\u8be2\u53c2\u6570\u8fd9\u79cd\u5f62\u5f0f\u7684\u5ba2\u6237\u7aef\uff0c\u5fc5\u987b\u8981\u53d1\u9001\u4e00\u4e2a\u7f13\u5b58\u63a7\u5236\u7684\u5934\u90e8\u5e76\u5305\u542b\"no-store\"\u9009\u9879\u3002\u670d\u52a1\u7aef\u6210\u529f(2XX \u72b6\u6001)\u7684\u54cd\u5e94\u5fc5\u987b\u5305\u542b\u58f0\u660e\u4e86\"private\"\u9009\u9879\u7684\u7f13\u5b58\u63a7\u5236\u5934\u90e8\u3002 \u56e0\u4e3aURI\u65b9\u6cd5\u5929\u7136\u7684\u5b89\u5168\u5f31\u70b9(\u53c2\u7167 RFC6750, Section 5 )\uff0c\u6bd4\u5982\u5305\u542b\u8bbf\u95ee\u4ee4\u724c\u7684URI\u6781\u6709\u53ef\u80fd\u88ab\u8bb0\u5f55\uff0c\u9664\u4e86\u5728\u65e0\u6cd5\u4f7f\u7528\"Authorization\"\u5b57\u6bb5\u7684\u573a\u666f\u4e0b\uff0c\u4f60\u90fd\u4e0d\u5e94\u8be5\u8fd9\u79cd\u65b9\u5f0f\u6765\u53d1\u9001\u53d1\u9001\u8bbf\u95ee\u4ee4\u724c\u3002\u5176\u5b83\u5728 RFC6750 \u4e2d\u544a\u8beb\u5728\u6b64\u5904\u540c\u6837\u9002\u7528\u3002","title":"3.2 URI \u67e5\u8be2\u53c2\u6570"},{"location":"http-webhook/#4-abuse-protection","text":"\u4efb\u4f55\u5141\u8bb8\u4efb\u610fHTTP\u7ec8\u7aef\u6ce8\u518c\u6216\u662f\u4f20\u8f93\u901a\u77e5\u7684\u7cfb\u7edf\u90fd\u53ef\u80fd\u53d7\u5230\u6f5c\u5728\u7684\u6ee5\u7528\u653b\u51fb\uff0c\u6bd4\u5982\u4e00\u4e9b\u4eba\u6076\u610f\u6216\u662f\u65e0\u610f\u7684\u6ce8\u518c\u4e00\u4e9b\u4e0d\u671f\u671b\u6536\u5230\u8bf7\u6c42\u7684\u7cfb\u7edf\u5730\u5740\u6216\u662f\u4e00\u4e9b\u6ce8\u518c\u65b9\u65e0\u6cd5\u88ab\u8ba4\u8bc1\u7684\u5730\u5740\u3002\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a\u5b9e\u73b0\u901a\u77e5\u7684\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u53ef\u80fd\u4f1a\u88ab\u6ee5\u7528\u6210\u4e3aDoS\u653b\u51fb\u7684\u53d1\u8d77\u65b9\u3002 \u4e3a\u4e86\u4fdd\u62a4\u53d1\u9001\u4e0d\u53d7\u6076\u610f\u6ee5\u7528\u4f24\u5bb3\uff0c\u5408\u6cd5\u7684\u4f20\u8f93\u76ee\u6807\u9700\u8981\u8868\u660e\u5b83\u540c\u610f\u63a5\u6536\u8fd9\u6761\u4f20\u8f93\u7ed9\u5b83\u7684\u901a\u77e5\u3002 \u4e0a\u8ff0\u7684\u4f20\u8f93\u540c\u610f\u6a21\u5f0f\u662f\u901a\u8fc7\u4e0b\u9762\u7684\u9a8c\u8bc1\u63e1\u624b\u673a\u5236\u5b9e\u73b0\u7684\u3002\u63e1\u624b\u53ef\u4ee5\u5728\u6ce8\u518c\u65f6\u6267\u884c\u6216\u662f\u88ab\u5f53\u4f5c\u4e00\u4e2a\u88ab\u4f20\u8f93\u524d\u7684\u8bf7\u6c42\u5728\u4f20\u8f93\u524d\u6267\u884c\u3002 \u5728\u8fd9\u91cc\uff0c\u7406\u89e3\u63e1\u624b\u673a\u5236\u5e76\u4e0d\u662f\u4e3a\u4e86\u5efa\u7acb\u4e00\u4e2a\u8ba4\u8bc1\u4e0a\u4e0b\u6587\u662f\u5c24\u4e3a\u91cd\u8981\u7684\u3002\u63e1\u624b\u673a\u5236\u53ea\u662f\u7528\u6765\u4fdd\u62a4\u53d1\u9001\u65b9\u4e0d\u4f1a\u5c06\u901a\u77e5\u53d1\u9001\u5230\u5e76\u4e0d\u60f3\u63a5\u6536\u7684\u63a5\u53d7\u8005\u90a3\u91cc\u53bb\u3002\u5c3d\u7ba1\u5728\u672c\u89c4\u8303\u4e2d\u5f3a\u5236\u4f7f\u7528\u4e86\u8ba4\u8bc1\u6a21\u578b\uff0c\u4f46\u8fd9\u79cd\u6a21\u578b\u65e0\u6cd5\u4fdd\u62a4\u90a3\u4e9b\u6ca1\u6709\u5b9e\u73b0\u8bbf\u95ee\u63a7\u5236\u4f46\u53c8\u4e0d\u60f3\u63a5\u6536\u4e0d\u9700\u8981\u6d41\u91cf\u7684\u7f51\u7ad9\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc Authorization \u662f\u6ca1\u6709\u7528\u7684\u3002 \u4f20\u8f93\u76ee\u6807\u5e94\u8be5\u652f\u6301\u6ee5\u7528\u4fdd\u62a4\u7279\u6027\u3002\u5982\u679c\u4e00\u4e2a\u76ee\u6807\u7aef\u4e0d\u652f\u6301\u6b64\u7279\u6027\uff0c\u53d1\u9001\u65b9\u53ef\u80fd\u4f1a\u9009\u62e9\u4e0d\u53d1\u9001\u5230\u8fd9\u4e2a\u76ee\u6807\u7aef\uff0c\u6216\u662f\u4ee5\u4e00\u4e2a\u7279\u522b\u4f4e\u901f\u7387\u53bb\u53d1\u9001\u8bf7\u6c42\u3002","title":"4. Abuse Protection/\u6ee5\u7528\u4fdd\u62a4\u673a\u5236"},{"location":"http-webhook/#41","text":"\u9a8c\u8bc1\u8bf7\u6c42\u4f7f\u7528\u4e86HTTP\u7684 OPTIONS \u65b9\u6cd5\u3002\u8bf7\u6c42\u4f1a\u88ab\u91cd\u5b9a\u5411\u5230\u6ce8\u518c\u65f6\u6307\u5b9a\u7684URI\u8d44\u6e90\u4e0a\u53bb\u3002 \u6709\u4e86\u9a8c\u8bc1\u8bf7\u6c42\uff0c\u53d1\u9001\u65b9\u5411\u76ee\u6807\u7aef\u7d22\u8981\u53d1\u9001\u901a\u77e5\u7684\u6743\u9650\uff0c\u9a8c\u8bc1\u8bf7\u6c42\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u5e0c\u671b\u7684\u8bf7\u6c42\u901f\u7387\uff08\u5982\u6bcf\u5206\u949f\u6536\u5230\u591a\u5c11\u8bf7\u6c42\uff09\u3002 \u4f20\u8f93\u76ee\u6807\u5c06\u4f1a\u54cd\u5e94\u4e00\u4e2a\u6743\u9650\u58f0\u660e\u4ee5\u53ca\u5141\u8bb8\u7684\u8bf7\u6c42\u901f\u7387\u3002 \u4e0b\u9762\u5c31\u662f\u5728\u9a8c\u8bc1\u8bf7\u6c42\u4e2d\u4f7f\u7528\u7684\u5934\u90e8\u5b57\u6bb5\u3002","title":"4.1. \u9a8c\u8bc1\u8bf7\u6c42"},{"location":"http-webhook/#412-webhook-request-origin","text":"\u5e0c\u671b\u53d1\u9001\u901a\u77e5\u7684\u53d1\u9001\u8005\u5fc5\u987b\u8981\u5728\u9a8c\u8bc1\u8bf7\u6c42\u548c\u8bf7\u6c42\u6743\u9650\u4e2d\u5305\u542b WebHook-Request-Origin \u5b57\u6bb5\u3002\u8fd9\u4e2a\u5b57\u6bb5\u5fc5\u987b\u8981\u5305\u542b\u4e00\u4e2a\u80fd\u6807\u8bc6\u53d1\u9001\u7cfb\u7edf\u7684DNS\u8868\u8fbe\u5f0f\uff08\u5982eventemitter.example.com\uff09\u3002\u8fd9\u4e2a\u5b57\u6bb5\u7684\u503c\u662f\u7528\u6765\u6807\u8bc6\u6240\u6709\u53d1\u9001\u65b9\u7684\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u4e3b\u673a\u3002 \u4e00\u65e6\u63e1\u624b\u548c\u6743\u9650\u88ab\u627f\u8ba4\uff0c\u53d1\u9001\u8005\u5fc5\u987b\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u90fd\u5305\u542b WebHook-Request-Origin \u8fd9\u4e2a\u5b57\u6bb5\u4ee5\u53ca\u5b83\u5bf9\u5e94\u7684\u503c\u3002 \u793a\u4f8b\uff1a WebHook-Request-Origin: eventemitter.example.com","title":"4.1.2. WebHook-Request-Origin"},{"location":"http-webhook/#413-webhook-","text":"WebHook-Request-Callback \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u7528\u6765\u8865\u5145 WebHook-Request-Origin \u7684\u5b57\u6bb5\u3002\u5b83\u5141\u8bb8\u4f20\u8f93\u76ee\u6807\u901a\u8fc7HTTPs\u56de\u8c03\u7684\u65b9\u5f0f\u5f02\u6b65\u5730\u540c\u610f\u6743\u9650\u8bf7\u6c42\u3002 \u5982\u679c\u63a5\u6536\u7a0b\u5e8f\u6ca1\u6709\u6e05\u695a\u5730\u8868\u660e\u652f\u6301\u63e1\u624b\u673a\u5236\uff0c\u7ba1\u7406\u5458\u4ecd\u7136\u53ef\u4ee5\u5728\u65e5\u5fd7\u4e2d\u627e\u5230\u56de\u8c03\u7684URL\uff0c\u518d\u624b\u52a8\u8c03\u7528\u5b83\u6765\u6388\u6743\u8bbf\u95ee\u3002 \u4f20\u8f93\u76ee\u6807\u901a\u8fc7\u53d1\u5e03\u4e00\u4e2a\u7ed9\u5b9aURL\u7684HTTPS GET \u6216 POST\u8bf7\u6c42\u6765\u6388\u6743\u8bbf\u95ee\u3002HTTP GET\u8bf7\u6c42\u901a\u8fc7\u6d4f\u89c8\u5668\u6765\u624b\u52a8\u6267\u884c\u3002 \u4f20\u8f93\u76ee\u6807\u53ef\u80fd\u4f1a\u5728\u56de\u8c03\u4e2d\u5305\u542b WebHook-Allowed-Rate \u5b57\u6bb5\u3002 \u8fd9\u4e2aURL\u6ca1\u6709\u6b63\u5f0f\u7684\u9650\u5236\u6761\u4ef6\uff0c\u4f46\u5b83\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u80fd\u6807\u8bc6\u51fa\u4f20\u8f93\u76ee\u6807\u7684\u6807\u8bc6\u7b26\uff0c\u540c\u65f6\u5b83\u5e94\u8be5\u5305\u542b\u4e00\u4e2a\u5bc6\u94a5\u6765\u4f7fURL\u66f4\u52a0\u96be\u731c\uff0c\u4ece\u800c\u4f7f\u7b2c\u4e09\u65b9\u5c31\u65e0\u6cd5\u8f7b\u677e\u5730\u5192\u5145\u4f20\u8f93\u76ee\u6807\u3002 \u793a\u4f8b: WebHook-Request-Callback: https://example.com/confirm?id=12345&key=...base64...","title":"4.1.3. WebHook-\u8bf7\u6c42\u56de\u8c03"},{"location":"http-webhook/#414-webhook-","text":"\u53d1\u9001\u8005\u53ef\u80fd\u901a\u8fc7 WebHook-Request-Rate \u5b57\u6bb5\u6765\u5411\u63a5\u53d7\u8005\u8bf7\u6c42\u4e00\u4e2a\u5408\u9002\u7684\u53d1\u9001\u8bf7\u6c42\u901f\u7387\u3002\u8fd9\u4e2a\u503c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u6765\u8868\u793a\u4e00\u4e2a\u5927\u4e8e0\u7684\u6574\u6570\uff0c\u5b83\u4ee3\u8868\u7740\u6bcf\u5206\u949f\u53d1\u9001\u591a\u5c11\u4e2a\u8bf7\u6c42\u3002 \u6bd4\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u7d22\u8981\u4e00\u4e2a\u6bcf\u5206\u949f\u53d1\u9001120\u6b21\u8bf7\u6c42\u7684\u6743\u9650\uff1a WebHook-Request-Rate: 120","title":"4.1.4. WebHook-\u8bf7\u6c42\u901f\u7387"},{"location":"http-webhook/#42","text":"\u5f53\u4e14\u4ec5\u5728\u4f20\u8f93\u76ee\u6807\u5141\u8bb8\u4e8b\u4ef6\u4f20\u8f93\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u5fc5\u987b\u8981\u901a\u8fc7 WebHook-Allowed-Origin \u548c WebHook-Allowed-Rate \u5b57\u6bb5\u6765\u54cd\u5e94\u8bf7\u6c42\u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u9009\u62e9\u56de\u8c03\u7684\u65b9\u5f0f\u6765\u6388\u6743\uff0c\u5219\u5b83\u4e0d\u4f1a\u4f7f\u7528\u54cd\u5e94\u5b57\u6bb5\u3002 \u5982\u679c\u4f20\u8f93\u76ee\u6807\u4e0d\u5141\u8bb8\u4e8b\u4ef6\u4f20\u8f93\u6216\u662f\u4e0d\u671f\u671b\u6536\u5230\u4e8b\u4ef6\u4f46\u4ecd\u60f3\u5904\u7406HTTP OPTIONS \u65b9\u6cd5\uff0c\u5f53\u524d\u7684\u54cd\u5e94\u5219\u4e0d\u5e94\u8be5\u88ab\u5f53\u4f5c\u6279\u51c6\u6388\u6743\uff0c\u63e1\u624b\u673a\u5236\u6b64\u65f6\u4e0d\u5e94\u8be5\u4f9d\u9760\u72b6\u6001\u7801\u6765\u5224\u65ad\u3002\u5982\u679c\u4f20\u8f93\u76ee\u6807\u4e0d\u5e0c\u671b\u5904\u7406HTTP OPTIONS\u65b9\u6cd5\uff0c\u5b83\u5e94\u8be5\u4ee5405\u72b6\u6001\u7801\u6765\u54cd\u5e94\uff0c\u5c31\u50cf\u5b83\u4e0d\u652f\u6301HTTP OPTIONS\u4e00\u6837\u3002 OPTIONS\u54cd\u5e94\u5e94\u8be5\u5305\u542b Allow \u5b57\u6bb5\u6765\u8868\u660e POST \u65b9\u6cd5\u5df2\u7ecf\u88ab\u5141\u8bb8\u4e86\u3002\u5176\u5b83\u65b9\u6cd5\u7c7b\u578b\u53ef\u80fd\u4e5f\u88ab\u5141\u8bb8\u4e86\uff0c\u4f46\u5b83\u4eec\u5e76\u4e0d\u5728\u672c\u89c4\u8303\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002","title":"4.2. \u9a8c\u8bc1\u54cd\u5e94"},{"location":"http-webhook/#421-webhook-","text":"\u5f53\u4f20\u8f93\u76ee\u6807\u540c\u610f\u901a\u77e5\u4e8b\u4ef6\u7684\u4f20\u8f93\u65f6\uff0c\u5fc5\u987b\u8981\u8fd4\u56de WebHook-Allowed-Origin \u5b57\u6bb5\u3002\u8be5\u5b57\u6bb5\u7684\u503c\u5fc5\u987b\u662f\u8bf7\u6c42\u4e2d WebHook-Request-Origin \u5b57\u6bb5\u4e2d\u53d1\u9001\u65b9\u7684\u540d\u79f0\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u661f\u53f7\uff08*\uff09\u8868\u660e\u4f20\u8f93\u76ee\u6807\u540c\u610f\u6765\u81ea\u4efb\u610f\u6e90\u5934\u7684\u901a\u77e5\u3002 WebHook-Allowed-Origin: eventemitter.example.com \u6216 WebHook-Allowed-Origin: *","title":"4.2.1. WebHook-\u5141\u8bb8\u6e90\u5934"},{"location":"http-webhook/#422-webhook-","text":"\u5f53\u8bf7\u6c42\u4e2d\u5305\u542b WebHook-Request-Rate \u5b57\u6bb5\u65f6\uff0c\u54cd\u5e94\u4e2d\u5fc5\u987b\u5305\u542b WebHook-Allowed-Rate \u5b57\u6bb5\u3002\u5176\u5b83\u60c5\u51b5\u4e0b WebHook-Allowed-Rate \u5b57\u6bb5\u5e94\u5f53\u88ab\u8fd4\u56de\u3002 \u672c\u5b57\u6bb5\u7684\u503c\u7528\u6765\u8868\u793a\u540c\u610f\u53d1\u9001\u901a\u77e5\u7684\u901f\u7387\u3002\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u661f\u53f7\uff08*\uff09\u6216\u662f\u5b57\u7b26\u4e32\u5f62\u5f0f\u6765\u8868\u793a\u4e00\u4e2a\u5927\u4e8e0\u7684\u6574\u6570\u3002\u661f\u53f7\u4ee3\u8868\u5bf9\u901f\u7387\u6ca1\u6709\u9650\u5236\u3002\u6574\u6570\u4ee3\u8868\u7740\u6bcf\u5206\u949f\u63a5\u6536\u591a\u5c11\u4e2a\u8bf7\u6c42\u3002\u5bf9\u4e8e\u8bf7\u6c42\u901f\u7387\u5927\u4e8e\u5141\u8bb8\u63a5\u6536\u901f\u7387\u7684\u60c5\u5f62\uff0c\u53d1\u9001\u65b9\u5e94\u5f53\u8003\u8651\u9650\u6d41\u3002\u901a\u8fc7\u62d2\u7edd\u8bf7\u6c42\u6765\u9650\u6d41\u53ef\u4ee5\u53c2\u8003HTTP\u7684 429 \u8fc7\u591a\u8bf7\u6c42 \u72b6\u6001\u7801\u3002 \u793a\u4f8b\uff1a \u4e0b\u9762\u7684HTTP\u5934\u90e8\u5141\u8bb8\u6bcf\u5206\u949f100\u6b21\u8bf7\u6c42\u7684\u53d1\u9001\u901f\u7387: WebHook-Allowed-Rate: 100","title":"4.2.2. WebHook-\u5141\u8bb8\u901f\u7387"},{"location":"http-webhook/#5-references","text":"RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC2818 HTTP over TLS RFC6750 The OAuth 2.0 Authorization Framework: Bearer Token Usage RFC6585 Additional HTTP Status Codes RFC7230 Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing RFC7231 Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content RFC7235 Hypertext Transfer Protocol (HTTP/1.1): Authentication RFC7540 Hypertext Transfer Protocol Version 2 (HTTP/2)","title":"5. References/\u5f15\u7528"},{"location":"primer/","text":"CloudEvents \u5165\u95e8\u6587\u6863 - 1.0.3 \u7248\u672c\uff08\u5236\u4f5c\u4e2d\uff09 \u00b6 \u6458\u8981 \u00b6 \u8fd9\u4efd\u975e\u6280\u672f\u89c4\u8303\u6587\u6863\u7528\u6765\u4e3a\u4f60\u63d0\u4f9b\u5173\u4e8e CloudEvents \u89c4\u8303\u7684\u603b\u4f53\u6982\u89c8\u3002\u5b83\u8865\u5145\u4e86 CloudEvents \u89c4\u8303\u7684\u76f8\u5173\u80cc\u666f\u4ee5\u53ca\u5728\u5236\u5b9a\u672c\u89c4\u8303\u65f6\u7684\u5386\u53f2\u548c\u8bbe\u8ba1\u7406\u5ff5\u3002\u8fd9\u6837\uff0cCloudEvents \u7684\u6838\u5fc3\u89c4\u8303\u5c31\u53ea\u9700\u8981\u5173\u6ce8 Events \u89c4\u8303\u7684\u6280\u672f\u7ec6\u8282\uff0c\u800c\u4e0d\u7528\u8fc7\u591a\u5730\u5173\u5fc3\u80cc\u666f\u76f8\u5173\u5185\u5bb9\u3002 \u6587\u6863\u72b6\u6001 \u00b6 \u8fd9\u4efd\u6587\u6863\u662f\u4e00\u4efd\u4ecd\u5728\u5236\u4f5c\u4e2d\u7684\u5de5\u4f5c\u8349\u6848\u3002 \u76ee\u5f55 \u00b6 \u5386\u53f2 CloudEvents \u6982\u5ff5 \u8bbe\u8ba1\u76ee\u6807 \u67b6\u6784 \u5c5e\u6027\u7248\u672c\u63a7\u5236 CloudEvent \u5c5e\u6027 CloudEvent \u5c5e\u6027\u6269\u5c55 \u751f\u4ea7 CloudEvents \u5408\u683c\u7684\u534f\u8bae\u4e0e\u7f16\u7801 \u4e13\u6709\u7684\u534f\u8bae\u548c\u7f16\u7801 \u73b0\u6709\u6280\u672f \u89d2\u8272 \u4ef7\u503c\u4e3b\u5f20 \u73b0\u6709\u7684\u6570\u636e\u683c\u5f0f History/\u5386\u53f2 \u00b6 CNCF Serverless \u5de5\u4f5c\u7ec4 \u662f\u7531 CNCF \u7684 \u6280\u672f\u76d1\u7ba1\u59d4\u5458\u4f1a \u6210\u7acb\uff0c\u7528\u4e8e\u7814\u7a76 Serverless \u76f8\u5173\u6280\u672f\u5e76\u4e3a CNCF \u63a8\u8350\u76f8\u5173\u9886\u57df\u7684\u672a\u6765\u53d1\u5c55\u8ba1\u5212\u7684\u5de5\u4f5c\u7ec4\u3002\u5de5\u4f5c\u7ec4\u5176\u4e2d\u4e00\u9879\u5efa\u8bae\u5c31\u662f\u7814\u7a76\u521b\u5efa\u4e00\u79cd\u901a\u7528\u4e8b\u4ef6\u683c\u5f0f\uff0c\u7528\u4e8e\u63d0\u5347\u4e0d\u540c\u4e91\u5382\u5546\u95f4\u51fd\u6570\u7684\u53ef\u79fb\u690d\u6027\u548c\u4e8b\u4ef6\u6d41\u5904\u7406\u7684\u4e92\u64cd\u4f5c\u6027\u3002\u5c31\u6b64\uff0cCloudEvents \u5e94\u8fd0\u800c\u751f\u3002 \u5c3d\u7ba1 CloudEvents \u8d77\u521d\u662f\u4f5c\u4e3a Serverless \u5de5\u4f5c\u7ec4\u7684\u9879\u76ee\u8fdb\u884c\u7684\uff0c\u4f46\u968f\u7740 CloudEvents \u89c4\u8303\u5b8c\u6210\u5b83 v0.1 \u7248\u672c\u7684\u91cc\u7a0b\u7891\uff0c\u6280\u672f\u76d1\u7ba1\u59d4\u5458\u4f1a\u6279\u51c6\u4e86 CloudEvents \u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u72ec\u7acb\u7684 CNCF \u6c99\u7bb1\u7ea7\u9879\u76ee\u3002 Cloudevents Concepts/\u6982\u5ff5 \u00b6 \u4e00\u4e2a \u4e8b\u4ef6 \u5305\u542b\u4e86 \u4e8b\u4ef6\u53d1\u751f \u7684\u4e0a\u4e0b\u6587\u548c\u76f8\u5173\u6570\u636e\u3002 \u4e8b\u4ef6\u7684\u76f8\u5173\u6570\u636e\u53ef\u4ee5\u7528\u6765\u552f\u4e00\u6807\u8bc6\u4e00\u4ef6\u4e8b\u4ef6\u7684\u53d1\u751f\u3002 \u4e8b\u4ef6\u4ee3\u8868\u4e86\u5df2\u53d1\u751f\u7684\u4e8b\u5b9e\uff0c\u56e0\u6b64\u5b83\u5e76\u4e0d\u5305\u542b\u4efb\u4f55\u76ee\u7684\u5730\u76f8\u5173\u4fe1\u606f\uff0c\u4f46\u6d88\u606f\u80fd\u591f\u4f20\u8fbe\u4e8b\u4ef6\u5185\u5bb9\uff0c\u4ece\u800c\u5c06\u4e8b\u4ef6\u6570\u636e \u4ece\u6e90\u5934\u4f20\u8f93\u5230\u6307\u5b9a\u7684\u76ee\u7684\u5730\u3002 Eventing/\u4e8b\u4ef6 \u00b6 \u4e8b\u4ef6\u901a\u5e38\u5728\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u4e2d\u4f7f\u7528\u6765\u8fde\u63a5\u4e0d\u540c\u7684\u7cfb\u7edf\uff0c\u5176\u4e2d\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7684\u72b6\u6001\u53d8\u5316\u4f1a\u5bfc\u81f4\u4ee3\u7801\u5728\u53e6\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6267\u884c\u3002 \u6bd4\u5982\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u6e90\uff0c\u53ef\u80fd\u4f1a\u5728\u6536\u5230\u67d0\u4e2a\u5916\u90e8\u4fe1\u53f7(\u5982 HTTP \u6216 RPC )\u6216\u89c2\u5bdf\u5230\u72b6\u6001\u53d8\u5316(\u5982 IoT/ \u7269\u8054\u7f51\u4f20\u611f\u5668\u6570\u636e\u53d8\u5316\u6216\u4e0d\u6d3b\u8dc3) \u65f6\uff0c\u751f\u4ea7\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u4e3a\u4e86\u66f4\u597d\u5730\u89e3\u91ca\u4e00\u4e2a\u7cfb\u7edf\u5982\u4f55\u4f7f\u7528 CloudEvents\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u4ece\u4e8b\u4ef6\u6e90\u751f\u4ea7\u7684\u4e8b\u4ef6\u662f\u5982\u4f55\u89e6\u53d1\u4e00\u4e2a\u884c\u4e3a\u7684\u3002 \u4e8b\u4ef6\u6e90\u751f\u4ea7\u4e86\u4e00\u6761\u5c01\u88c5\u4e86\u57fa\u4e8e\u67d0\u79cd\u534f\u8bae\u7684\u4e8b\u4ef6\u6570\u636e\u7684\u6d88\u606f\u3002 \u5f53\u8f7d\u6709\u4e8b\u4ef6\u7684\u6d88\u606f\u5230\u8fbe\u76ee\u7684\u5730\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a\u4f7f\u7528\u4e86\u4e8b\u4ef6\u6570\u636e\u7684\u884c\u4e3a\u51fd\u6570\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u6e90\u662f\u90a3\u4e9b\u5141\u8bb8\u6682\u5b58\u548c\u6d4b\u8bd5\u5b9e\u4f8b\u7684\u6e90\u7c7b\u578b\u7684\u7279\u5b9a\u5b9e\u4f8b\u3002 \u67d0\u4e2a\u7279\u5b9a\u6e90\u7c7b\u578b\u7684\u5f00\u6e90\u8f6f\u4ef6\u53ef\u80fd\u7531\u591a\u4e2a\u516c\u53f8\u6216\u63d0\u4f9b\u5546\u90e8\u7f72\u3002 \u4e8b\u4ef6\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u884c\u4e1a\u6807\u51c6\u534f\u8bae\uff08\u5982 HTTP\u3001AMQP\u3001MQTT\u3001SMTP\uff09\u3001\u5f00\u6e90\u534f\u8bae\uff08\u4f8b\u5982 Kafka\u3001NATS\uff09\u6216 \u5e73\u53f0/\u4f9b\u5e94\u5546\u4e13\u6709\u534f\u8bae\uff08AWS Kinesis\u3001Azure Event Grid\uff09\u4f20\u8f93\u3002 \u4e00\u4e2a\u64cd\u4f5c\u51fd\u6570\u80fd\u591f\u5904\u7406\u90a3\u4e9b\u5b9a\u4e49\u4e86\u884c\u4e3a\u6216\u5f71\u54cd\u7684\u4e8b\u4ef6\uff0c\u8fd9\u4e9b\u884c\u4e3a\u548c\u6548\u679c\u7531\u6765\u81ea\u7279\u5b9a\u6e90\u7684\u7279\u5b9a\u4e8b\u4ef6\u89e6\u53d1\u800c\u6765\u3002 \u867d\u7136\u8d85\u51fa\u4e86\u89c4\u8303\u7684\u8303\u56f4\uff0c\u4f46\u751f\u6210\u4e8b\u4ef6\u7684\u76ee\u7684\u901a\u5e38\u662f\u8ba9\u5176\u4ed6\u7cfb\u7edf\u80fd\u591f\u8f7b\u677e\u5730\u5bf9\u5b83\u4eec\u65e0\u6cd5\u63a7\u5236\u7684\u6e90\u4e2d\u7684\u66f4\u6539\u505a\u51fa\u53cd\u5e94\u3002 \u6e90\u548c\u64cd\u4f5c\u901a\u5e38\u7531\u4e0d\u540c\u7684\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u3002 \u901a\u5e38\uff0c\u6e90\u662f\u6258\u7ba1\u670d\u52a1\uff0c\u800c\u64cd\u4f5c\u662f serverless \u51fd\u6570\uff08\u5982 AWS Lambda \u6216 Google Cloud Functions\uff09\u4e2d \u7684\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002 Design Goals/\u8bbe\u8ba1\u76ee\u6807 \u00b6 CloudEvents \u901a\u5e38\u7528\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u4ee5\u5141\u8bb8\u670d\u52a1\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u677e\u8026\u5408\uff0c\u72ec\u7acb\u90e8\u7f72\uff0c\u65b9\u4fbf\u4e4b\u540e\u8fde\u63a5\u4ee5\u521b\u5efa\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 CloudEvents \u89c4\u8303\u7684\u76ee\u6807\u662f\u5b9a\u4e49\u5141\u8bb8\u670d\u52a1\u751f\u4ea7\u6216\u6d88\u8d39\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u7cfb\u7edf\u7684\u4e92\u64cd\u4f5c\u6027\uff0c \u5176\u4e2d\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u53ef\u4ee5\u72ec\u7acb\u5f00\u53d1\u548c\u90e8\u7f72\u3002 \u751f\u4ea7\u8005\u53ef\u4ee5\u5728\u6ca1\u6709\u6d88\u8d39\u8005\u76d1\u542c\u65f6\u5c31\u751f\u6210\u4e8b\u4ef6\uff0c \u6d88\u8d39\u8005\u4e5f\u53ef\u4ee5\u8868\u8fbe\u5bf9\u5c1a\u672a\u751f\u6210\u7684\u4e8b\u4ef6\u6216\u4e8b\u4ef6\u7c7b\u7684\u5174\u8da3\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u9879\u5de5\u4f5c\u4ea7\u751f\u7684\u89c4\u8303\u4fa7\u91cd\u4e8e\u4e8b\u4ef6\u683c\u5f0f\u7684\u4e92\u64cd\u4f5c\u6027 \u4ee5\u53ca\u5b83\u5728\u901a\u8fc7\u5404\u79cd\u534f\u8bae\uff08\u4f8b\u5982 HTTP\uff09\u53d1\u9001\u65f6\u7684\u663e\u793a\u65b9\u5f0f\u3002\u6211\u4eec\u4e0d\u5173\u6ce8\u4e8b\u4ef6\u751f\u4ea7\u8005\u6216\u4e8b\u4ef6\u6d88\u8d39\u8005\u7684\u5904\u7406\u6a21\u578b\u3002 CloudEvents \u7684\u6838\u5fc3\u89c4\u8303\u4e2d\u5b9a\u4e49\u4e86\u4e00\u7ec4\u79f0\u4e4b\u4e3a\u5c5e\u6027\u7684\u5143\u6570\u636e\uff0c \u5b83\u4eec\u63cf\u8ff0\u4e86\u5728\u7cfb\u7edf\u4e4b\u95f4\u4f20\u8f93\u7684\u4e8b\u4ef6\u4ee5\u53ca\u8fd9\u4e9b\u5143\u6570\u636e\u7247\u6bb5\u5e94\u5982\u4f55\u663e\u793a\u5728\u8be5\u6d88\u606f\u4e2d\u3002 \u8fd9\u4e9b\u5143\u6570\u636e\u662f\uff0c\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u9002\u5f53\u7ec4\u4ef6\u5e76\u5e2e\u52a9\u8be5\u7ec4\u4ef6\u6b63\u786e\u5904\u7406\u4e8b\u4ef6\u6240\u9700\u7684\u6700\u5c0f\u4fe1\u606f\u96c6\u3002 \u56e0\u6b64\uff0c\u67d0\u4e9b\u4e8b\u4ef6\u672c\u8eab\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u4f5c\u4e3a CloudEvent \u5c5e\u6027\u96c6\u7684\u4e00\u90e8\u5206\u800c\u88ab\u590d\u5236\uff0c \u4f46\u8fd9\u6837\u505a\u4ec5\u662f\u4e3a\u4e86\u80fd\u591f\u6b63\u786e\u4f20\u9012\u548c\u5904\u7406\u6d88\u606f\u3002\u90a3\u4e9b\u4e0d\u7528\u4e8e\u8be5\u76ee\u7684\u7684\u6570\u636e\u5e94\u653e\u7f6e\u5728\u4e8b\u4ef6\uff08\u6570\u636e\uff09\u672c\u8eab\u4e2d\u3002 \u6b64\u5916\uff0c\u672c\u89c4\u8303\u4e2d\u5047\u8bbe\u534f\u8bae\u5c42\u6240\u9700\u7684\u7528\u6765\u5c06\u6d88\u606f\u4f20\u9012\u5230\u76ee\u6807\u7cfb\u7edf\u7684\u5143\u6570\u636e\u5e94\u5b8c\u5168\u7531\u534f\u8bae\u5904\u7406\uff0c \u56e0\u6b64\u4e0d\u5305\u542b\u5728 CloudEvents \u5c5e\u6027\u4e2d\u3002 \u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u975e\u76ee\u6807 \u90e8\u5206\u3002 \u9664\u4e86\u8fd9\u4e9b\u5c5e\u6027\u7684\u5b9a\u4e49\u4e4b\u5916\uff0c\u89c4\u8303\u8fd8\u63cf\u8ff0\u4e86\u5173\u4e8e\u5982\u4f55\u5e8f\u5217\u5316 \u4e0d\u540c\u683c\u5f0f\uff08\u4f8b\u5982 JSON\uff09\u548c\u534f\u8bae\uff08\u4f8b\u5982 HTTP\u3001AMQP\u3001Kafka\uff09\u7684\u4e8b\u4ef6\u3002 \u4e00\u4e9b\u534f\u8bae\u672c\u8eab\u652f\u6301\u5c06\u591a\u4e2a\u4e8b\u4ef6\u6279\u5904\u7406\u5230\u5355\u4e2a API \u7684\u8c03\u7528\u4e2d\u3002 \u4e3a\u4e86\u63d0\u5347\u7cfb\u7edf\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\uff0c\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u6279\u5904\u7406\u5c06\u7531\u534f\u8bae\u81ea\u5df1\u51b3\u5b9a\u3002 \u76f8\u5173\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728\u534f\u8bae\u7ed1\u5b9a\u6216\u534f\u8bae\u89c4\u8303\u4e2d\u627e\u5230\u3002 \u6210\u6279\u7684 CloudEvents \u5e76\u6ca1\u6709\u8bed\u4e49\uff0c\u4e5f\u6ca1\u6709\u6392\u5e8f\u3002 \u4e2d\u95f4\u4eba \u53ef\u4ee5\u6dfb\u52a0\u6216\u5220\u9664\u6279\u5904\u7406\u4ee5\u53ca\u5c06\u4e8b\u4ef6\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u6279\u5904\u7406\u3002 \u4e8b\u4ef6\u7684\u76ee\u7684\u6216\u8bed\u4e49\u542b\u4e49\u8d85\u51fa\u4e86 CloudEvents \u89c4\u8303\u7684\u8303\u56f4\u3002 \u53ea\u8981\u53d1\u9001\u7684\u6d88\u606f\u7b26\u5408\u89c4\u8303\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u4e00\u4e2a\u6709\u6548\u7684 CloudEvent\u3002 \u5f88\u591a\u4eba\u4e0d\u5bb9\u6613\u610f\u8bc6\u5230\u4e00\u4ef6\u4e8b\uff0c\u9519\u8bef\u548c\u5f02\u5e38\u662f\u53ef\u4ee5\u4f5c\u4e3a CloudEvents \u6765\u4f20\u8f93\u7684\u3002 \u63a5\u4e0b\u6765\u5e94\u7531\u4e8b\u4ef6\u751f\u4ea7\u8005\u5b9a\u4e49\u5c06\u4f7f\u7528\u7684 CloudEvents \u5c5e\u6027\u503c\uff0c\u5c31\u50cf\u5b83\u53ef\u80fd\u751f\u6210\u7684\u4efb\u4f55\u5176\u4ed6\u4e8b\u4ef6\u4e00\u6837\u3002 \u7531\u4e8e\u5e76\u975e\u6240\u6709\u4e8b\u4ef6\u751f\u4ea7\u8005\u90fd\u5c06\u5176\u4e8b\u4ef6\u4ee5 CloudEvents \u7684\u5f62\u5f0f\u53d1\u5e03\uff0c \u56e0\u6b64\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u7ec4 \u9002\u914d\u5668 \u6765\u5c55\u793a\u5982\u4f55\u5c06\u4e8b\u4ef6\u4ece\u4e00\u4e9b\u6d41\u884c\u7684\u4e8b\u4ef6\u751f\u4ea7\u8005\u6620\u5c04\u5230 CloudEvents\u3002 \u8fd9\u4e9b\u9002\u914d\u5668\u662f\u975e\u89c4\u8303\u7684\uff0c \u4f46\u5b83\u4eec\u662f\u89c4\u8303\u4f5c\u8005\u5bf9 CloudEvents \u5c5e\u6027\u5982\u4f55\u5728\u5176\u5b83\u751f\u4ea7\u8005\u672c\u5730\u751f\u6210\u4e8b\u4ef6\u5e76\u6620\u5c04\u5230 CloudEvents \u65f6\u7684\u6700\u4f73\u731c\u6d4b\u3002 Non Goals/\u975e\u76ee\u6807 \u00b6 \u4ee5\u4e0b\u5185\u5bb9\u4e0d\u5728\u672c\u89c4\u8303\u7684\u8303\u56f4\u4e4b\u5185\uff1a \u51fd\u6570\u7684\u6784\u5efa\u548c\u8c03\u7528\u8fc7\u7a0b \u7279\u5b9a\u8bed\u8a00\u7684\u8fd0\u884c\u65f6 APIs \u9009\u62e9\u5355\u4e00\u8eab\u4efd\u8ba4\u8bc1\u6216\u8bbf\u95ee\u63a7\u5236\u7684\u7cfb\u7edf \u5305\u542b\u534f\u8bae\u7ea7\u8def\u7531\u4fe1\u606f \u4e8b\u4ef6\u6301\u4e45\u5316\u8fc7\u7a0b \u6388\u6743\u3001\u6570\u636e\u5b8c\u6574\u6027\u548c\u4fdd\u5bc6\u673a\u5236 \u5c31\u8fde\u90a3\u4e9b\u521a\u63a5\u89e6 CloudEvents \u6982\u5ff5\u7684\u4eba\u90fd\u4f1a\u5efa\u8bae CloudEvents \u89c4\u8303\u4e0d\u5e94\u5305\u62ec\u534f\u8bae\u7ea7\u8def\u7531\u4fe1\u606f\uff08\u4f8b\u5982\uff0c\u5c06\u4e8b\u4ef6\u53d1\u9001\u5230\u7684\u76ee\u6807\u7684 URL\uff09\u3002 \u7ecf\u8fc7\u6df1\u601d\u719f\u8651\uff0c\u5de5\u4f5c\u7ec4\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0cCloudEvents \u89c4\u8303\u4e2d\u4e0d\u9700\u8981\u8def\u7531\u4fe1\u606f\uff1a \u56e0\u4e3a\u4efb\u4f55\u73b0\u6709\u7684\u534f\u8bae\uff08\u4f8b\u5982 HTTP\u3001MQTT\u3001XMPP \u6216 Pub/Sub \u603b\u7ebf\uff09\u90fd\u5df2\u7ecf\u5b9a\u4e49\u4e86\u8def\u7531\u8bed\u4e49\u3002 \u4f8b\u5982\uff0cCloudEvents HTTP \u7ed1\u5b9a \u89c4\u5b9a\u4e86\u5934\u90e8\u548c\u8bf7\u6c42\u6b63\u6587\u5185\u5bb9\u3002 CloudEvents \u4e0d\u9700\u8981\u5728\u89c4\u8303\u4e2d\u5305\u542b\u76ee\u6807 URL \u5373\u53ef\u4e0e HTTP \u517c\u5bb9\uff1bHTTP \u89c4\u8303\u5df2\u7ecf\u5728 \u8bf7\u6c42\u884c \u4e2d\u5305\u542b\u4e86\u6240\u9700\u7684\u76ee\u6807 URL\u3002 \u8def\u7531\u4fe1\u606f\u4e0d\u4ec5\u662f\u591a\u4f59\u7684\uff0c\u800c\u4e14\u662f\u6709\u5bb3\u7684\u3002 CloudEvents \u5e94\u8be5\u589e\u52a0\u4e92\u64cd\u4f5c\u6027\u5e76\u89e3\u8026\u4e8b\u4ef6\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u3002 \u7981\u6b62\u6765\u81ea\u4e8b\u4ef6\u683c\u5f0f\u7684\u8def\u7531\u4fe1\u606f\u5141\u8bb8\u5c06 CloudEvents \u91cd\u65b0\u4f20\u9001\u5230\u65b0\u7684\u884c\u4e3a\uff0c\u6216\u901a\u8fc7\u5305\u542b\u591a\u4e2a\u901a\u9053\u7684\u590d\u6742\u4e2d\u7ee7\u4f20\u9001\u3002 \u4f8b\u5982\uff0c\u5982\u679c Webhook \u5730\u5740\u4e0d\u53ef\u7528\uff0c\u5219\u7528\u4e8e Webhook \u7684 CloudEvent \u5e94\u53ef\u4f20\u9001\u5230\u6b7b\u4fe1\u961f\u5217\u3002 \u6b7b\u4fe1\u961f\u5217\u5e94\u8be5\u80fd\u591f\u5c06\u4e8b\u4ef6\u4f20\u9001\u7ed9\u539f\u59cb\u4e8b\u4ef6\u53d1\u5c04\u8005\u4ece\u672a\u60f3\u8c61\u8fc7\u7684\u65b0\u7684\u884c\u4e3a\u4e0a\u3002 \u5728\u7cfb\u7edf\u5185\u548c\u8de8\u7cfb\u7edf\u751f\u4ea7\u548c\u6d88\u8d39\u7684 CloudEvent \u80fd\u591f\u89e6\u53d1\u4ea7\u751f\u4ef7\u503c\u7684\u884c\u4e3a\u3002 \u56e0\u6b64\uff0c\u5bf9\u4e8e\u8c03\u8bd5\u6216\u590d\u5236\u7684\u76ee\u7684\u800c\u8a00\uff0c\u5b58\u6863\u548c\u6216\u91cd\u653e\u4e8b\u4ef6\u53ef\u80fd\u5f88\u6709\u4ef7\u503c\u3002 \u4f46\u662f\uff0c\u6301\u4e45\u5316\u4e8b\u4ef6\u4f1a\u5220\u9664\u4f20\u8f93\u671f\u95f4\u53ef\u7528\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u4f8b\u5982\u751f\u4ea7\u8005\u7684\u8eab\u4efd\u548c\u6743\u5229\u3001\u4fdd\u771f\u9a8c\u8bc1\u673a\u5236\u6216\u673a\u5bc6\u6027\u4fdd\u62a4\u3002 \u6b64\u5916\uff0c\u6301\u4e45\u5316\u4f1a\u589e\u52a0\u6ee1\u8db3\u7528\u6237\u9700\u6c42\u7684\u590d\u6742\u6027\u548c\u6311\u6218\u3002 \u4f8b\u5982\uff0c\u51fa\u4e8e\u52a0\u5bc6\u6216\u7b7e\u540d\u76ee\u7684\u91cd\u590d\u4f7f\u7528\u79c1\u94a5\u4f1a\u589e\u52a0\u653b\u51fb\u8005\u53ef\u7528\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u964d\u4f4e\u5b89\u5168\u6027\u3002 \u56e0\u6b64\u6211\u4eec\u63a8\u6d4b\uff0c\u53ef\u4ee5\u5b9a\u4e49\u6709\u52a9\u4e8e\u6ee1\u8db3\u6301\u4e45\u6027\u8981\u6c42\u7684\u5c5e\u6027\uff0c\u4f46\u8fd9\u4e9b\u5c5e\u6027\u53ef\u80fd\u968f\u7740\u884c\u4e1a\u6700\u4f73\u5b9e\u8df5\u548c\u8fdb\u6b65\u800c\u4e0d\u65ad\u53d1\u5c55\u3002 CloudEvents \u89c4\u8303\u76ee\u524d\u4e0d\u5f3a\u5236\u6216\u63d0\u5021\u4efb\u4f55\u6709\u5173\u6388\u6743\u3001\u6570\u636e\u5b8c\u6574\u6027\u548c\u4fdd\u5bc6\u7684\u4e13\u6709\u673a\u5236\u548c\u539f\u5219\uff0c \u56e0\u4e3a\u5f53\u524d\u89c4\u8303\u7684\u76ee\u7684\u4e0d\u662f\u5b9a\u4e49\u6709\u5173 CloudEvents \u7684\u5b89\u5168\u539f\u5219\u3002 \u6bcf\u4e2a\u5b9e\u73b0\u8005\u90fd\u6709\u4e00\u4e2a\u589e\u5f3a\u5176\u5b89\u5168\u6a21\u578b\u7684\u4e0d\u540c\u539f\u5219\u3002 \u6211\u4eec\u628a\u5b83\u7559\u7ed9\u89c4\u8303\u7684\u5b9e\u73b0\u8005\u53bb\u63d0\u4f9b\u989d\u5916\u7684\u7ec6\u8282\u6765\u901a\u8fc7\u6269\u5c55\u5b57\u6bb5\u7684\u65b9\u5f0f\u5f3a\u5316\u4ed6\u4eec\u7684\u5b89\u5168\u6a21\u578b\uff0c \u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u5730\u88ab\u5b9e\u73b0\u8005\u4e3a\u89c4\u8303\u800c\u81ea\u5df1\u5b9e\u73b0\u7684\u7ec4\u4ef6\u6240\u89e3\u91ca\u3002 \u4f46\u662f\uff0c\u5982\u679c\u793e\u533a\u89c2\u5bdf\u5230\u4e00\u79cd\u6269\u5c55\u5b57\u6bb5\u7684\u6a21\u5f0f\uff0c\u4f5c\u4e3a\u5904\u7406\u6570\u636e\u5b8c\u6574\u6027\u4e3b\u9898\u7684\u6807\u51c6\u65b9\u6cd5\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6b64\u7c7b\u6269\u5c55\u5b57\u6bb5\u53ef\u80fd\u88ab\u58f0\u660e\u4e3a\u5bf9 CloudEvent \u89c4\u8303\u7684\u5b98\u65b9\u6269\u5c55\u3002 Architecture/\u67b6\u6784 \u00b6 CloudEvents \u89c4\u8303\u96c6\u5b9a\u4e49\u4e86\u56db\u79cd\u6709\u52a9\u4e8e\u5f62\u6210\u5206\u5c42\u67b6\u6784\u6a21\u578b\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u534f\u8bae\u5143\u7d20\u3002 \u57fa\u672c\u89c4\u8303 \u5b9a\u4e49\u4e86\u4e00\u4e2a\u62bd\u8c61\u4fe1\u606f\u6a21\u578b\uff0c \u8be5\u6a21\u578b\u7531\u5c5e\u6027\uff08\u952e\u503c\u5bf9\uff09\u548c\u6784\u6210 CloudEvent \u7684\u76f8\u5173\u89c4\u5219\u7ec4\u6210\u3002\u6b64\u89c4\u8303\u5305\u542b\u4e86 \u6838\u5fc3\u5c5e\u6027 \u7684\u5b9a\u4e49\u3002\u6709\u4e9b\u6838\u5fc3\u5c5e\u6027\u5fc5\u987b\u51fa\u73b0\u5728\u6240\u6709\u7684 CloudEvents \u4e2d\uff0c\u6709\u4e9b\u5219\u662f\u53ef\u9009\u7684\u3002 \u6269\u5c55\u5c5e\u6027 \u6dfb\u52a0\u4e86\u7279\u5b9a\u4e8e\u7528\u4f8b\u4e14\u53ef\u80fd\u91cd\u53e0\u7684\u6269\u5c55\u5c5e\u6027\u96c6\u548c\u76f8\u5173\u89c4\u5219\uff0c\u5982\u652f\u6301\u4e0d\u540c\u7684\u8ffd\u8e2a\u6807\u51c6\u7684\u89c4\u5219\u3002 \u4e8b\u4ef6\u683c\u5f0f\u7f16\u7801,\u5982 JSON , \u5b9a\u4e49\u4e86\u57fa\u672c\u89c4\u8303\u7684\u4fe1\u606f\u6a21\u578b\u4e0e\u6240\u9009\u6269\u5c55\u7684\u7f16\u7801\u65b9\u5f0f\uff0c \u4ee5\u5c06\u5176\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f\u534f\u8bae\u7684\u5934\u90e8\u548c\u8d1f\u8f7d\u5143\u7d20\u3002 \u534f\u8bae\u7ed1\u5b9a, \u5982. HTTP \u534f\u8bae\u7ed1\u5b9a , \u5728 HTTP to HTTP \u7684\u60c5\u51b5\u4e0b\uff0c \u5b9a\u4e49\u4e86 CloudEvent \u5982\u4f55\u7ed1\u5b9a\u5230\u5e94\u7528\u7a0b\u5e8f\u534f\u8bae\u7684\u4f20\u8f93\u5c42\u3002 \u534f\u8bae\u7ed1\u5b9a\u4e0d\u9650\u5236\u4f20\u8f93\u5c42\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u8fd9\u610f\u5473\u7740 HTTP \u7ed1\u5b9a\u53ef\u7528\u4e8e\u4efb\u4f55 HTTP \u65b9\u6cd5\u4ee5\u53ca\u8bf7\u6c42\u548c\u54cd\u5e94\u6d88\u606f\u3002 \u4e3a\u4e86\u786e\u4fdd\u66f4\u5e7f\u6cdb\u7684\u4e92\u64cd\u4f5c\u6027\uff0cCloudEvents \u89c4\u8303\u96c6\u4e3a\u4f7f\u7528\u4e13\u6709\u5e94\u7528\u534f\u8bae\u7684\u4e8b\u4ef6\u4f20\u8f93\u63d0\u4f9b\u4e86\u7279\u5b9a\u7ea6\u675f\u3002 HTTP Webhook \u89c4\u8303\u5e76\u975e\u7279\u5b9a\u4e8e CloudEvents\uff0c \u800c\u662f\u53ef\u7528\u4e8e\u5c06\u4efb\u4f55\u7c7b\u578b\u7684\u5355\u5411\u4e8b\u4ef6\u548c\u901a\u77e5\u53d1\u5e03\u5230\u7b26\u5408\u6807\u51c6\u7684 HTTP \u7aef\u70b9\u3002 \u4f46\u662f\uff0c\u7531\u4e8e\u5176\u4ed6\u5730\u65b9\u7f3a\u4e4f\u6b64\u7c7b\u89c4\u8303\uff0c\u56e0\u6b64 CloudEvents \u9700\u8981\u5bf9\u5176\u8fdb\u884c\u5b9a\u4e49\u3002 Interoperability Constraints/\u4e92\u64cd\u4f5c\u6027\u7ea6\u675f\u6761\u4ef6 \u00b6 \u5982 \u8bbe\u8ba1\u76ee\u6807 \u90e8\u5206\u6240\u8ff0\uff0c\u4e92\u64cd\u4f5c\u6027\u662f\u672c\u89c4\u8303\u7684\u4e00\u4e2a\u5173\u952e\u76ee\u6807\u3002 \u56e0\u6b64\uff0c\u672c\u534f\u8bae\u4e2d\u6709\u5730\u65b9\u88ab\u5efa\u8bae\u6709\u6240\u7ea6\u675f\u6761\u4ef6\u3002 \u4f8b\u5982\uff0c\u5728 \u5927\u5c0f\u9650\u5236 \u90e8\u5206\u63d0\u793a\u4e8b\u4ef6\u5927\u5c0f\u5e94\u8be5\u4e0d\u8d85\u8fc7 64KB\u3002 \u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u8bf8\u5982\u8fd9\u4e9b\u7ea6\u675f\uff0c\u5728\u6ca1\u6709\u901a\u8fc7\u201c\u5fc5\u987b\u201d\u5f3a\u5236\u6267\u884c\u7684\u60c5\u51b5\u4e0b\uff0c \u662f\u5bf9\u589e\u52a0\u591a\u4e2a\u5b9e\u73b0\u548c\u90e8\u7f72\u4e4b\u95f4\u4e92\u64cd\u4f5c\u6027\u7684\u53ef\u80fd\u6027\u7684\u4e00\u79cd\u5efa\u8bae\u3002 \u5177\u4f53\u4f7f\u7528\u89c4\u8303\u53ef\u4ee5\u968f\u610f\u5ffd\u7565\u8fd9\u4e9b\u5efa\u8bae\uff0c \u4f46\u8fd9\u4e9b\u73af\u5883\u6709\u8d23\u4efb\u786e\u4fdd\u6240\u6709\u53c2\u4e0e CloudEvents \u4f20\u8f93\u7684\u7ec4\u4ef6\u80fd\u591f\u8fdc\u79bb\u8fd9\u4e9b\u5efa\u8bae\u7684\u8fb9\u754c\u3002 Protocol Error Handling/\u534f\u8bae\u9519\u8bef\u5904\u7406 \u00b6 CloudEvents \u89c4\u8303\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5e76\u672a\u89c4\u5b9a\u4e0e CloudEvents \u7684\u521b\u5efa\u6216\u5904\u7406\u76f8\u5173\u8054\u7684\u5904\u7406\u6a21\u578b\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u5728\u5904\u7406 CloudEvent \u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\uff0c \u8bf7\u4f7f\u7528\u6b63\u5e38\u7684\u534f\u8bae\u7ea7\u9519\u8bef\u5904\u7406\u673a\u5236\u8fdb\u884c\u5904\u7406\u3002 Versioning of CloudEvents/\u5c5e\u6027\u7248\u672c\u63a7\u5236 \u00b6 \u5bf9\u4e8e\u67d0\u4e9b CloudEvents \u5c5e\u6027\uff0c\u7531\u5176\u503c\u5f15\u7528\u7684\u5b9e\u4f53\u6216\u6570\u636e\u6a21\u578b\u53ef\u80fd\u4f1a\u968f\u65f6\u95f4\u53d8\u5316\u3002 CloudEvents \u89c4\u8303\u4e0d\u5f3a\u5236\u8981\u6c42\u8981\u4f7f\u7528\u7684\u7279\u5b9a\u6a21\u5f0f\uff0c\u751a\u81f3\u4e0d\u8981\u6c42\u5fc5\u987b\u8003\u8651\u7528\u5230\u7248\u672c\u63a7\u5236\u3002 \u8fd9\u4e2a\u51b3\u5b9a\u53d6\u51b3\u4e8e\u6bcf\u4e2a\u4e8b\u4ef6\u751f\u4ea7\u8005\u3002 \u7136\u800c\uff0c\u9f13\u52b1\u4e8b\u4ef6\u751f\u4ea7\u8005\u8003\u8651\u4ed6\u4eec\u5982\u4f55\u5728\u4e0d\u7834\u574f\u6d88\u8d39\u8005\u7684\u60c5\u51b5\u4e0b\u53d1\u5c55\u4ed6\u4eec\u7684 scheme\u3002 \u4e24\u4e2a\u5177\u4f53\u7684\u4e0a\u4e0b\u6587\u5c5e\u6027 type \u548c dataschema \u5728\u8fd9\u65b9\u9762\u5c24\u4e3a\u91cd\u8981\uff0c\u4f46\u662f\u9884\u671f\u7528\u6cd5\u6709\u6240\u4e0d\u540c\u3002 \u4e24\u8005\u95f4\u5728\u7248\u672c\u63a7\u5236\u65b9\u9762\u7684\u5dee\u5f02\u5728\u4e0b\u9762\u4ecb\u7ecd\u3002 \u9f13\u52b1\u4e8b\u4ef6\u751f\u4ea7\u8005\u4ece\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u7248\u672c\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u7279\u5b9a\u7684 CloudEvent \u662f\u201c\u7a33\u5b9a\u7684\u201d\u4e4b\u524d\u3002 \u6240\u9009\u7248\u672c\u63a7\u5236\u65b9\u6848\u7684\u6587\u6863\uff0c\u5305\u62ec\u5176\u80cc\u540e\u7684\u539f\u7406\uff0c\u90fd\u4f1a\u662f\u6d88\u8d39\u8005\u6240\u559c\u6b22\u7684\u3002 type \u5c5e\u6027\u5728\u7248\u672c\u63a7\u5236\u65b9\u9762\u7684\u4f5c\u7528 \u00b6 type \u5c5e\u6027\u5e94\u8be5\u662f\u6d88\u8d39\u8005\u8bc6\u522b\u4ed6\u4eec\u6536\u5230\u7684\u4e8b\u4ef6\u7c7b\u578b\u7684\u4e3b\u8981\u65b9\u5f0f\u3002 \u8fd9\u53ef\u4ee5\u901a\u8fc7\u8ba2\u9605\u7279\u5b9a\u7684 CloudEvent \u7c7b\u578b\u6765\u5b9e\u73b0\uff0c\u6216\u8005\u901a\u8fc7\u672c\u5730\u8fc7\u6ee4\u6240\u6709\u6536\u5230\u7684 CloudEvent \u5b9e\u73b0\u3002 \u4f46\u786e\u5b9a\u4e86 CloudEvent \u7c7b\u578b\u7684\u6d88\u8d39\u8005\u901a\u5e38\u4f1a\u671f\u671b\u8be5\u7c7b\u578b\u7684\u6570\u636e \u4ec5\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\uff0c\u9664\u975e\u53e6\u6709\u660e\u786e\u8bf4\u660e\u3002 \u201c\u5411\u540e\u517c\u5bb9\u201d\u7684\u786e\u5207\u542b\u4e49\u5c06\u56e0\u6570\u636e\u5185\u5bb9\u7c7b\u578b\u800c\u5f02\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c type \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u4fdd\u6301\u4e0d\u53d8\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u4e0d\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c type \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u66f4\u6539\u3002 \u6211\u4eec\u9f13\u52b1\u4e8b\u4ef6\u751f\u4ea7\u8005\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff08\u53ef\u80fd\u6c38\u8fdc\uff09\u540c\u65f6\u751f\u4ea7\u65e7\u4e8b\u4ef6\u548c\u65b0\u4e8b\u4ef6\uff0c\u4ee5\u907f\u514d\u5e72\u6270\u6d88\u8d39\u8005\u3002 \u5728\u8003\u8651 type \u5c5e\u6027\u7684\u503c\u65f6\uff0c\u4e8b\u4ef6\u751f\u4ea7\u8005\u53ef\u4ee5\u9009\u62e9\u4ed6\u4eec\u5e0c\u671b\u7684\u4efb\u4f55\u7248\u672c\u63a7\u5236\u65b9\u6848\uff0c \u4f8b\u5982\u7248\u672c\u53f7 (v1, v2) \u6216\u65e5\u671f (2018-01-01) \u4f5c\u4e3a\u503c\u7684\u4e00\u90e8\u5206\u3002 \u4ed6\u4eec\u8fd8\u53ef\u80fd\u4f7f\u7528 type \u5c5e\u6027\u6765\u8868\u793a\u7279\u5b9a\u7248\u672c\u5c1a\u672a\u7a33\u5b9a\uff0c\u53ef\u80fd\u4f1a\u7ecf\u5386\u91cd\u5927\u66f4\u6539\u3002 \u6216\u8005\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9009\u62e9\u6839\u672c\u4e0d\u5728\u7c7b\u578b\u503c\u4e2d\u5305\u542b\u7248\u672c\u3002 dataschema \u5c5e\u6027\u5728\u7248\u672c\u63a7\u5236\u65b9\u9762\u7684\u4f5c\u7528 \u00b6 \u6211\u4eec\u9884\u8ba1 dataschema \u5c5e\u6027\u662f\u4fe1\u606f\u6027\u7684\uff0c\u4e3b\u8981\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4f7f\u7528\uff0c\u5e76\u901a\u8fc7\u5de5\u5177\u4f7f\u7528\u65f6\uff0c \u8be5\u5de5\u5177\u80fd\u591f\u901a\u8fc7\u5176\u7406\u89e3\u7684\u6570\u636e\u5185\u5bb9\u7c7b\u578b\u63d0\u4f9b\u4efb\u610f CloudEvents \u7684\u8bca\u65ad\u4fe1\u606f\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c dataschema \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u66f4\u6539\u4ee5\u53cd\u6620\u8fd9\u4e00\u70b9\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8ba9 URI \u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u4ece\u8be5 URI \u63d0\u4f9b\u7684\u5185\u5bb9\u8981\u66f4\u6539\u4ee5\u53cd\u6620\u66f4\u65b0\u7684\u67b6\u6784\u3002 \u540e\u4e00\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u4e8b\u4ef6\u751f\u4ea7\u8005\u6765\u8bf4\u53ef\u80fd\u66f4\u5bb9\u6613\u5b9e\u73b0\uff0c \u4f46\u5bf9\u4e8e\u5e0c\u671b\u901a\u8fc7 URI \u7f13\u5b58 schema \u5185\u5bb9\u7684\u6d88\u8d39\u8005\u6765\u8bf4\u4e0d\u592a\u65b9\u4fbf\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u4e0d\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c dataschema \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u66f4\u6539\uff0c \u5c31\u50cf\u4e0a\u8ff0\u7684 type \u5c5e\u6027\u7684\u60c5\u51b5\u4e00\u6837\u3002 CloudEvent Core Attributes/\u6838\u5fc3\u5c5e\u6027 \u00b6 \u672c\u8282\u4ecb\u7ecd\u4e86\u4e0e CloudEvent \u6838\u5fc3\u5c5e\u6027\u76f8\u5173\u7684\u5176\u5b83\u80cc\u666f\u548c\u8bbe\u8ba1\u8981\u70b9\u3002 id \u00b6 id \u5c5e\u6027\u662f\u4e00\u4e2a\u5728\u540c\u4e00\u4e8b\u4ef6\u6e90\u4e0b\u6240\u6709\u4e8b\u4ef6\u4e2d\u7528\u6765\u6807\u8bc6\u4e8b\u4ef6\u552f\u4e00\u7684\u503c \uff08\u5176\u4e2d\u6bcf\u4e2a\u4e8b\u4ef6\u6e90\u7531\u5176 CloudEvents source \u5c5e\u6027\u552f\u4e00\u6807\u8bc6\uff09\u3002 \u867d\u7136 id \u4f7f\u7528\u7684\u786e\u5207\u503c\u662f\u751f\u4ea7\u8005\u5b9a\u4e49\u7684\uff0c \u4f46\u5fc5\u987b\u8981\u786e\u4fdd\u6765\u81ea\u5355\u4e2a\u4e8b\u4ef6\u6e90\u7684 CloudEvents \u6d88\u8d39\u8005\u4e0d\u4f1a\u6709\u4e24\u4e2a\u4e8b\u4ef6\u5171\u4eab\u76f8\u540c\u7684 id \u503c\u3002 \u6211\u4eec\u5728\u8fd9\u91cc\u9690\u542b\u5730\u58f0\u660e\u6ca1\u6709\u4e24\u4e2a\u4e8b\u4ef6\u5c06\u5171\u4eab\u76f8\u540c\u7684 id \u503c\uff0c\u4f46\u4e0d\u63d0\u4f9b\u5173\u4e8e\u5982\u4f55\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u7684\u89e3\u91ca\uff0c \u56e0\u4e3a\u8fd9\u8d85\u51fa\u4e86\u672c\u89c4\u8303\u7684\u8303\u56f4\u3002 \u552f\u4e00\u7684\u4f8b\u5916\u662f\u5982\u679c\u652f\u6301\u4e8b\u4ef6\u7684\u91cd\u64ad\uff0c\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 id \u6765\u68c0\u6d4b\u8fd9\u4e00\u70b9\u3002 \u7531\u4e8e\u4e00\u6b21\u4e8b\u4ef6\u7684\u53d1\u751f\u53ef\u80fd\u5bfc\u81f4\u751f\u6210\u591a\u4e2a\u4e8b\u4ef6\uff0c \u5728\u6240\u6709\u8fd9\u4e9b\u4e8b\u4ef6\u90fd\u6765\u81ea\u540c\u4e00\u4e8b\u4ef6\u6e90\u7684\u60c5\u51b5\u4e0b\uff0c \u751f\u6210\u7684\u6bcf\u4e2a CloudEvent \u5c06\u5177\u6709\u552f\u4e00\u7684 id \u3002 \u4ee5\u521b\u5efa\u6570\u636e\u5e93\u6761\u76ee\u4e3a\u4f8b\uff0c\u8fd9\u4e00\u4e8b\u4ef6\u7684\u53d1\u751f\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e2a\u7c7b\u578b\u4e3a create \u7684 CloudEvent \u548c\u4e00\u4e2a\u7c7b\u578b\u4e3a write \u7684 CloudEvent\u3002 \u8fd9\u4e24\u4e2a CloudEvents \u5404\u81ea\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ID\u3002 \u5982\u679c\u9700\u8981\u5728\u8fd9\u4e24\u4e2a CloudEvent \u4e4b\u95f4\u5efa\u7acb\u67d0\u79cd\u5173\u8054\u4ee5\u8868\u660e\u5b83\u4eec\u90fd\u4e0e\u540c\u4e00\u4e8b\u4ef6\u76f8\u5173\uff0c \u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 CloudEvent \u4e2d\u7684\u4e00\u4e9b\u9644\u52a0\u6570\u636e\u6765\u5b9e\u73b0\u8be5\u76ee\u7684\u3002 \u4ece\u8fd9\u65b9\u9762\u6765\u770b\uff0c\u867d\u7136\u4e8b\u4ef6\u751f\u4ea7\u8005\u5bf9 id \u7684\u4f7f\u7528\u53ef\u80fd\u662f\u67d0\u4e2a\u968f\u673a\u5b57\u7b26\u4e32\uff0c \u6216\u8005\u5728\u5176\u5b83\u4e0a\u4e0b\u6587\u4e2d\u5177\u6709\u67d0\u79cd\u8bed\u4e49\u7684\u5b57\u7b26\u4e32\uff0c \u4f46\u5bf9\u4e8e\u6b64 CloudEvent \u5c5e\u6027\u800c\u8a00\uff0c\u8fd9\u4e9b\u542b\u4e49\u5e76\u4e0d\u6210\u7acb\uff0c \u56e0\u6b64\u672c\u89c4\u8303\u4e0d\u5efa\u8bae\u5c06 id \u7528\u4e8e\u9664\u4e86\u552f\u4e00\u6027\u68c0\u67e5\u4e4b\u5916\u7684\u5176\u5b83\u76ee\u7684\u3002 CloudEvent Attribute Extensions/\u5c5e\u6027\u6269\u5c55 \u00b6 \u4e3a\u4e86\u5b9e\u73b0\u89c4\u8303\u7684\u8bbe\u8ba1\u76ee\u6807\uff0c \u89c4\u8303\u4f5c\u8005\u5c06\u5c1d\u8bd5\u9650\u5236\u4ed6\u4eec\u5728 CloudEvents \u4e2d\u5b9a\u4e49\u7684\u5143\u6570\u636e\u5c5e\u6027\u7684\u6570\u91cf\u3002 \u4e3a\u6b64\uff0c\u8be5\u9879\u76ee\u5b9a\u4e49\u7684\u5c5e\u6027\u5c06\u5206\u4e3a\u4ee5\u4e0b\u4e24\u7c7b\uff1a \u6838\u5fc3\u5c5e\u6027 \u6269\u5c55\u5c5e\u6027 \u672c\u89c4\u8303\u4e2d\u5b9a\u4e49\u4e86\u6838\u5fc3\u5c5e\u6027\u3002\u6838\u5fc3\u5c5e\u6027\u53c8\u88ab\u5206\u4e3a\u5fc5\u8981\u548c\u53ef\u9009\u4e24\u79cd\u3002 \u6b63\u5982\u7c7b\u522b\u540d\u79f0\u6240\u6697\u793a\u7684\u90a3\u6837\uff0c\u201c\u5fc5\u8981\u201d\u5c5e\u6027\u662f\u5de5\u4f5c\u7ec4\u8ba4\u4e3a\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5bf9\u6240\u6709\u4e8b\u4ef6\u90fd\u81f3\u5173\u91cd\u8981\u7684\u5c5e\u6027\uff0c \u800c\u201c\u53ef\u9009\u201d\u5c5e\u6027\u5c06\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002 \u5de5\u4f5c\u7ec4\u8003\u8651\u5230\u67d0\u4e9b\u5c5e\u6027\u4e0d\u591f\u5e38\u89c1\u800c\u4e0d\u80fd\u5f52\u5165\u4e0a\u8ff0\u4e24\u4e2a\u7c7b\u522b\uff0c \u4f46\u6b64\u7c7b\u5c5e\u6027\u7684\u826f\u597d\u5b9a\u4e49\u4ecd\u4f1a\u4f7f\u7cfb\u7edf\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\u7ea7\u522b\u53d7\u76ca\uff0c \u56e0\u6b64\u5c06\u8fd9\u4e9b\u5c5e\u6027\u653e\u5165\u4e86\u201c\u6269\u5c55\u201d\u7c7b\u522b\u5e76\u8bb0\u5f55\u5728 \u6269\u5c55\u6587\u6863 \u4e2d\uff0c \u672c\u89c4\u8303\u5b9a\u4e49\u4e86\u8fd9\u4e9b\u6269\u5c55\u5c5e\u6027\u5728 CloudEvent \u4e2d\u7684\u663e\u793a\u65b9\u5f0f\u3002 \u5728\u786e\u5b9a\u63d0\u8bae\u7684\u5c5e\u6027\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u65f6\uff0c \u5de5\u4f5c\u7ec4\u4f7f\u7528\u73b0\u6709\u7684\u7528\u4f8b\u548c\u7528\u6237\u6545\u4e8b\u6765\u89e3\u91ca\u5b83\u4eec\u7684\u57fa\u672c\u539f\u7406\u548c\u9700\u6c42\u3002 \u76f8\u5173\u4fe1\u606f\u5c06\u6dfb\u52a0\u5230\u672c\u6587\u6863\u7684 \u73b0\u6709\u6280\u672f \u90e8\u5206\u3002 CloudEvent \u89c4\u8303\u7684\u6269\u5c55\u5c5e\u6027\u662f\u9700\u8981\u5305\u542b\u7684\u9644\u52a0\u5143\u6570\u636e\uff0c\u5b83\u4eec\u80fd\u786e\u4fdd\u6b63\u786e\u7684\u8def\u7531\u548c\u6b63\u786e\u5904\u7406 CloudEvent\u3002 \u7528\u4e8e\u5176\u5b83\u76ee\u7684\u7684\u9644\u52a0\u5143\u6570\u636e\uff0c \u5373\u90a3\u4e9b\u4e0e\u4e8b\u4ef6\u672c\u8eab\u76f8\u4f46\u5728 CloudEvent \u7684\u4f20\u8f93\u6216\u5904\u7406\u4e2d\u4e0d\u9700\u8981\u7684\u5143\u6570\u636e\uff0c \u5e94\u6539\u4e3a\u653e\u7f6e\u5728\u4e8b\u4ef6 ( data )\u7684\u6269\u5c55\u70b9\u5185\u3002 \u6269\u5c55\u5c5e\u6027\u5e94\u4fdd\u6301\u6700\u5c11\uff0c\u4ee5\u786e\u4fdd CloudEvent \u53ef\u4ee5\u6b63\u786e\u5e8f\u5217\u5316\u548c\u4f20\u8f93\u3002 \u4e8b\u4ef6\u751f\u4ea7\u8005\u5e94\u8be5\u8003\u8651\u5728\u5411 CloudEvent \u6dfb\u52a0\u6269\u5c55\u65f6\u53ef\u80fd\u9047\u5230\u7684\u6280\u672f\u9650\u5236\u3002 \u4f8b\u5982\uff0c HTTP Binary Mode \u4f7f\u7528 HTTP \u5934\u6765\u4f20\u8f93\u5143\u6570\u636e\uff1b \u5927\u591a\u6570 HTTP \u670d\u52a1\u5668\u4f1a\u62d2\u7edd\u5305\u542b\u8fc7\u591a HTTP \u5934\u90e8\u6570\u636e\u7684\u8bf7\u6c42\uff0c\u8981\u6c42\u9650\u5236\u5176\u4f4e\u81f3 8kb\u3002 \u56e0\u6b64\uff0c\u6269\u5c55\u5c5e\u6027\u7684\u5927\u5c0f\u548c\u6570\u91cf\u5e94\u4fdd\u6301\u6700\u5c0f\u3002 \u5982\u679c\u6269\u5c55\u53d8\u5f97\u6d41\u884c\uff0c\u90a3\u4e48\u89c4\u8303\u4f5c\u8005\u53ef\u80fd\u4f1a\u8003\u8651\u5c06\u5176\u4f5c\u4e3a\u6838\u5fc3\u5c5e\u6027\u79fb\u5165\u89c4\u8303\u3002 \u8fd9\u610f\u5473\u7740\u5728\u6b63\u5f0f\u5c06\u65b0\u5c5e\u6027\u6dfb\u52a0\u5230\u89c4\u8303\u4e4b\u524d\uff0c\u6269\u5c55\u673a\u5236/\u8fc7\u7a0b\u53ef\u7528\u4f5c\u5ba1\u67e5\u65b0\u5c5e\u6027\u7684\u4e00\u79cd\u65b9\u5f0f\u3002 JSON Extensions/JSON \u6269\u5c55 \u00b6 \u5982 CloudEvents JSON \u4e8b\u4ef6\u683c\u5f0f \u4e2d \u5c5e\u6027 \u90e8\u5206\u6240\u8ff0\uff0c CloudEvent \u6269\u5c55\u5c5e\u6027\u4e0e\u5df2\u5b9a\u4e49\u5c5e\u6027(\u5fc5\u8981\u5c5e\u6027\u3001\u53ef\u9009\u5c5e\u6027)\u5728\u5e8f\u5217\u5316\u65f6\u5904\u4e8e\u540c\u4e00\u7b49\u7ea7 - \u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u90fd\u662f JSON \u5bf9\u8c61\u7684\u9876\u5c42\u5c5e\u6027\u3002 CloudEvent \u7684\u4f5c\u8005\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u8003\u8651\u6240\u6709\u9009\u9879\uff0c\u5e76\u8ba4\u4e3a\u8fd9\u662f\u6700\u597d\u7684\u9009\u62e9\u3002 \u7406\u7531\u5982\u4e0b\uff1a \u7531\u4e8e CloudEvents \u89c4\u8303\u9075\u5faa semver \uff0c \u8fd9\u610f\u5473\u7740\u53ea\u8981\u65b0\u5c5e\u6027\u662f\u53ef\u9009\u5c5e\u6027\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u6838\u5fc3\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\u5b9a\u4e49\uff0c\u800c\u65e0\u9700\u66f4\u6539\u5f53\u524d\u4e3b\u8981\u7248\u672c\u3002 \u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u8bf7\u8003\u8651\u73b0\u6709\u6d88\u8d39\u8005\u5c06\u5982\u4f55\u4f7f\u7528\u65b0\u7684\uff08\u672a\u77e5\u7684\uff09\u9876\u7ea7\u5c5e\u6027\u3002 \u867d\u7136\u6d88\u8d39\u8005\u53ef\u4ee5\u968f\u610f\u5ffd\u7565\u5b83\uff0c\u56e0\u4e3a\u5b83\u662f\u53ef\u9009\u7684\uff0c \u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u5c5e\u6027\u4ecd\u7136\u5e0c\u671b\u5411\u63a5\u6536\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u3002 \u8fd9\u53ef\u80fd\u5bfc\u81f4\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728\u57fa\u7840\u8bbe\u65bd\u4e0d\u652f\u6301\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u8fd9\u4e9b\u5c5e\u6027\u3002 \u8fd9\u610f\u5473\u7740\u672a\u77e5\u7684\u9876\u7ea7\u5c5e\u6027\uff08\u65e0\u8bba\u662f\u8c01\u5b9a\u4e49\u7684\u2014\u2014\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\u6216\u4e8b\u4ef6\u751f\u4ea7\u8005\uff09\u53ef\u80fd\u4e0d\u4f1a\u88ab\u5ffd\u7565\u3002 \u56e0\u6b64\uff0c\u867d\u7136\u5176\u5b83\u4e00\u4e9b\u89c4\u8303\u5b9a\u4e49\u4e86\u653e\u7f6e\u6269\u5c55\u7684\u7279\u5b9a\u5c5e\u6027\uff08\u4f8b\u5982\u9876\u7ea7 extensions \u5c5e\u6027\uff09\uff0c \u4f46\u4f5c\u8005\u8ba4\u4e3a\u5728\u4f20\u5165\u4e8b\u4ef6\u4e2d\u5177\u6709\u4e24\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u7684\u672a\u77e5\u5c5e\u6027\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e92\u64cd\u4f5c\u6027\u95ee\u9898\u548c\u5f00\u53d1\u4eba\u5458\u7684\u6df7\u6dc6\u3002 \u6269\u5c55\u5c5e\u6027\u901a\u5e38\u7528\u4e8e\u6d4b\u8bd5\u90a3\u4e9b\u88ab\u89c4\u8303\u6b63\u5f0f\u91c7\u7528\u4e4b\u524d\u7684\u6f5c\u5728\u5c5e\u6027\u3002 \u5982\u679c\u6709\u4e00\u4e2a extensions \u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u65b0\u5c5e\u6027\u5df2\u7ecf\u88ab\u5e8f\u5217\u5316\uff0c \u90a3\u4e48\u5982\u679c\u8be5\u5c5e\u6027\u88ab\u6838\u5fc3\u89c4\u8303\u91c7\u7528\uff0c\u5b83\u5c06\u4ece extensions \u5c5e\u6027\u63d0\u5347\uff08\u4ece\u5e8f\u5217\u5316\u7684\u89d2\u5ea6\uff09\u4e3a\u9876\u7ea7\u5c5e\u6027\u3002 \u5982\u679c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u65b0\u5c5e\u6027\u662f\u53ef\u9009\u7684\uff0c\u90a3\u4e48\u5f53\u5b83\u88ab\u6838\u5fc3\u89c4\u8303\u91c7\u7528\u65f6\uff0c \u5b83\u53ea\u662f\u4e00\u4e2a\u5c0f\u7248\u672c\u589e\u91cf\uff0c\u6240\u6709\u73b0\u6709\u7684\u6d88\u8d39\u8005\u4ecd\u7136\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u3002 \u4f46\u662f\uff0c\u6d88\u8d39\u8005\u5c06\u4e0d\u77e5\u9053\u6b64\u5c5e\u6027\u5c06\u51fa\u73b0\u5728\u4f55\u5904 - \u5728\u6269\u5c55\u5c5e\u6027\u4e2d\u8fd8\u662f\u4f5c\u4e3a\u9876\u7ea7\u5c5e\u6027\u3002 \u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u53ef\u80fd\u9700\u8981\u540c\u65f6\u67e5\u770b\u4e24\u4e2a\u5730\u65b9\u3002 \u5982\u679c\u5c5e\u6027\u51fa\u73b0\u5728\u4e24\u4e2a\u5730\u65b9\u4f46\u5177\u6709\u4e0d\u540c\u7684\u503c\u600e\u4e48\u529e\uff1f \u751f\u4ea7\u8005\u662f\u5426\u9700\u8981\u5c06\u5b83\u653e\u5728\u4e24\u4e2a\u5730\u65b9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u80fd\u540c\u65f6\u6709\u65b0\u3001\u8001\u6d88\u8d39\u8005\uff1f \u867d\u7136\u53ef\u4ee5\u4e3a\u5982\u4f55\u89e3\u51b3\u51fa\u73b0\u7684\u6bcf\u4e2a\u6f5c\u5728\u95ee\u9898\u800c\u5236\u5b9a\u660e\u786e\u7684\u89c4\u5219\uff0c \u4f46\u4f5c\u8005\u8ba4\u4e3a\u4e00\u4e2a\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\u7684\u66f4\u597d\u7684\u529e\u6cd5\u662f\u5728\u5e8f\u5217\u5316\u4e2d\u53ea\u6709\u4e00\u4e2a\u4f4d\u7f6e\u6765\u653e\u7f6e\u672a\u77e5\u7684\u751a\u81f3\u662f\u65b0\u7684\u5c5e\u6027\u3002 \u4f5c\u8005\u8fd8\u6ce8\u610f\u5230 HTTP \u89c4\u8303\u73b0\u5728\u9075\u5faa\u7c7b\u4f3c\u7684\u6a21\u5f0f\uff0c\u4e0d\u518d\u5efa\u8bae\u6269\u5c55 HTTP \u5934\u90e8\u4ee5 X- \u4e3a\u524d\u7f00\u3002 Creating CloudEvents/\u751f\u4ea7 CloudEvents \u00b6 CloudEvents \u89c4\u8303\u6709\u610f\u907f\u514d\u5c06 CloudEvents \u7684\u521b\u5efa\u65b9\u5f0f\u8bbe\u8ba1\u7684\u8fc7\u4e8e\u6b7b\u677f\u3002 \u4f8b\u5982\uff0c\u5b83\u4e0d\u5047\u5b9a\u539f\u59cb\u4e8b\u4ef6\u6e90\u5fc5\u987b\u662f\u8be5\u4e8b\u4ef6\u751f\u4ea7\u5bf9\u5e94 CloudEvent \u7684\u540c\u4e00\u5b9e\u4f53\u3002 \u8fd9\u5141\u8bb8\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002 \u4f46\u662f\uff0c\u5bf9\u4e8e\u89c4\u8303\u7684\u5b9e\u73b0\u8005\u6765\u8bf4\uff0c\u7406\u89e3\u89c4\u8303\u4f5c\u8005\u5fc3\u4e2d\u7684\u671f\u671b\u8fd8\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c06\u6709\u52a9\u4e8e\u786e\u4fdd\u4e92\u64cd\u4f5c\u6027\u548c\u4e00\u81f4\u6027\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u751f\u6210\u521d\u59cb\u4e8b\u4ef6\u7684\u5b9e\u4f53\u662f\u5426\u4e0e\u521b\u5efa\u76f8\u5e94 CloudEvent \u7684\u5b9e\u4f53\u76f8\u540c\u662f\u7531\u5b9e\u73b0\u51b3\u5b9a\u7684\u3002 \u4f46\u662f\uff0c\u5f53\u6784\u5efa/\u586b\u5145 CloudEvents \u5c5e\u6027\u7684\u5b9e\u4f53\u4ee3\u8868\u4e8b\u4ef6\u6e90\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u8fd9\u4e9b\u5c5e\u6027\u7684\u503c\u662f\u7528\u6765\u63cf\u8ff0\u4e8b\u4ef6\u6216\u4e8b\u4ef6\u6e90\uff0c \u800c\u4e0d\u662f\u8ba1\u7b97 CloudEvent \u5c5e\u6027\u503c\u7684\u5b9e\u4f53\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u4e8b\u4ef6\u6e90\u548c CloudEvents \u751f\u4ea7\u8005\u4e4b\u95f4\u7684\u5206\u79bb\u5bf9\u4e8b\u4ef6\u4f7f\u7528\u8005\u6ca1\u6709\u5b9e\u8d28\u6027\u610f\u4e49\u65f6\uff0c \u89c4\u8303\u5b9a\u4e49\u7684\u5c5e\u6027\u901a\u5e38\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u503c\u6765\u6307\u793a\u8fd9\u79cd\u804c\u8d23\u5206\u79bb\u3002 \u8fd9\u5e76\u4e0d\u662f\u8bf4 CloudEvents \u751f\u4ea7\u8005\u4e0d\u80fd\u5411 CloudEvent \u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\uff0c \u4f46\u8fd9\u4e9b\u5c5e\u6027\u8d85\u51fa\u4e86\u89c4\u8303\u7684\u4e92\u64cd\u4f5c\u6027\u5b9a\u4e49\u5c5e\u6027\u7684\u8303\u56f4\u3002 \u8fd9\u7c7b\u4f3c\u4e8e HTTP \u4ee3\u7406\u901a\u5e38\u5982\u4f55\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5bf9\u4f20\u5165\u6d88\u606f\u7684\u660e\u786e\u5b9a\u4e49\u7684 HTTP \u5934\u90e8\u7684\u66f4\u6539\uff0c \u4f46\u5b83\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u5934\u90e8\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e9b\u7279\u5b9a\u4ee3\u7406\u7684\u5143\u6570\u636e\u3002 \u8fd8\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u539f\u59cb\u4e8b\u4ef6\u6e90\u548c CloudEvents \u751f\u4ea7\u8005\u4e4b\u95f4\u7684\u8fd9\u79cd\u5206\u79bb\u53ef\u5927\u53ef\u5c0f\u3002 \u610f\u601d\u662f\uff0c\u5373\u4f7f CloudEvent \u751f\u4ea7\u8005\u4e0d\u662f\u539f\u59cb\u4e8b\u4ef6\u6e90\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c \u5982\u679c\u5b83\u4ee3\u8868\u4e8b\u4ef6\u6e90\u884c\u4e8b\uff0c\u5e76\u4e14\u5b83\u5728\u4e8b\u4ef6\u6d41\u4e2d\u7684\u5b58\u5728\u5bf9\u4e8b\u4ef6\u6d88\u8d39\u8005\u6ca1\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6307\u5bfc\u4ecd\u7136\u9002\u7528\u3002 \u5f53\u5b9e\u4f53\u540c\u65f6\u5145\u5f53 CloudEvents \u7684\u63a5\u6536\u8005\u548c\u53d1\u9001\u8005\u4ee5\u8f6c\u53d1\u6216\u8f6c\u6362\u4f20\u5165\u4e8b\u4ef6\u65f6\uff0c \u51fa\u7ad9 CloudEvent \u4e0e\u5165\u7ad9 CloudEvent \u5339\u914d\u7684\u7a0b\u5ea6\u5c06\u6839\u636e\u8be5\u5b9e\u4f53\u7684\u5904\u7406\u8bed\u4e49\u800c\u6709\u6240\u4e0d\u540c\u3002 \u5728\u5b83\u5145\u5f53\u4ee3\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ea\u662f\u5c06 CloudEvents \u8f6c\u53d1\u7ed9\u53e6\u4e00\u4e2a\u4e8b\u4ef6\u6d88\u8d39\u8005\uff0c \u90a3\u4e48\u51fa\u7ad9 CloudEvent \u901a\u5e38\u770b\u8d77\u6765\u4e0e\u5165\u7ad9 CloudEvent \u5c31\u89c4\u8303\u5b9a\u4e49\u7684\u5c5e\u6027\u76f8\u540c \u8bf7\u53c2\u9605\u4e0a\u4e00\u6bb5\u6709\u5173\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\u7684\u5185\u5bb9\u3002 \u4f46\u662f\uff0c\u5982\u679c\u6b64\u5b9e\u4f53\u6b63\u5728\u6267\u884c CloudEvent \u7684\u67d0\u79cd\u7c7b\u578b\u7684\u8bed\u4e49\u5904\u7406\uff0c \u901a\u5e38\u4f1a\u5bfc\u81f4 data \u5c5e\u6027\u503c\u53d1\u751f\u66f4\u6539\uff0c \u5219\u53ef\u80fd\u9700\u8981\u5c06\u5176\u89c6\u4e3a\u4e0e\u539f\u59cb\u4e8b\u4ef6\u6e90\u4e0d\u540c\u7684\u201c\u4e8b\u4ef6\u6e90\u201d\u3002 \u56e0\u6b64\uff0c\u4e0e\u4e8b\u4ef6\u751f\u4ea7\u8005\u76f8\u5173\u7684 CloudEvents \u5c5e\u6027\uff08\u4f8b\u5982 source and id \uff09 \u5c06\u4ece\u4f20\u5165\u7684 CloudEvent \u4e2d\u66f4\u6539\u3002 \u53ef\u80fd\u5b58\u5728\u9700\u8981\u521b\u5efa\u5305\u542b\u53e6\u4e00\u4e2a CloudEvent \u7684 CloudEvent \u7684\u7279\u6b8a\u60c5\u51b5\u3002 \u867d\u7136\u89c4\u8303\u6ca1\u6709\u660e\u786e\u5b9a\u4e49\u5d4c\u5957\uff0c\u4f46\u5b83\u662f\u53ef\u80fd\u7684\u3002 \u867d\u7136\u5185\u90e8\u4e8b\u4ef6\u5c06\u59cb\u7ec8\u4ee5 \u72ec\u7acb\u7684\u4e8b\u4ef6\u683c\u5f0f \u7f16\u7801\uff0c \u4f46\u5916\u90e8\u4e8b\u4ef6\u53ef\u80fd\u662f\u4e8c\u8fdb\u5236\u6216\u7ed3\u6784\u5316\u6a21\u5f0f\u7684\u3002 \u5916\u90e8\u4e8b\u4ef6\u7684 datacontenttype \u5c5e\u6027\u4e0d\u5f97\u8bbe\u7f6e\u4e3a application/cloudevents+json \u6216\u4efb\u4f55\u5176\u5b83\u7528\u4e8e\u8868\u793a\u4f7f\u7528\u7ed3\u6784\u5316\u6a21\u5f0f\u7684\u5a92\u4f53\u7c7b\u578b\u3002 \u4e8b\u4ef6\u5d4c\u5957\u7684\u6b63\u786e\u793a\u4f8b\u662f\uff1a Content-Type: application/json ce-specversion: 1.0 ce-type: myevent ce-id: 1234-1234-1234 ce-source: example.com { \"specversion\": \"1.0\", \"type\": \"coolevent\", \"id\": \"xxxx-xxxx-xxxx\", \"source\": \"bigco.com\", \"data\": { ... } } Qualifying Protocols and Encodings/\u5408\u7406\u5316\u534f\u8bae\u4e0e\u7f16\u7801 \u00b6 \u6b63\u5982\u89c4\u8303\u4e2d\u6240\u8868\u8fbe\u7684\uff0cCloudEvents \u5de5\u4f5c\u7684\u660e\u786e\u76ee\u6807\u662f \u201c\u4ee5\u901a\u7528\u65b9\u5f0f\u63cf\u8ff0\u4e8b\u4ef6\u6570\u636e\u201d\u4e14 \u201c\u5b9a\u4e49\u5141\u8bb8\u670d\u52a1\u4ea7\u751f\u6216\u6d88\u8d39\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u7cfb\u7edf\u7684\u4e92\u64cd\u4f5c\u6027\uff0c\u5176\u4e2d\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u53ef\u4ee5\u88ab\u72ec\u7acb\u5f00\u53d1\u548c\u90e8\u7f72\u201d\u3002 \u8fd9\u79cd\u4e92\u64cd\u4f5c\u6027\u7684\u57fa\u7840\u662f\u5f00\u653e\u7684\u6570\u636e\u683c\u5f0f\u548c\u534f\u8bae\uff0c CloudEvents \u65e8\u5728\u63d0\u4f9b\u8fd9\u79cd\u5f00\u653e\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5e76\u5c06\u5176\u6570\u636e\u683c\u5f0f\u6620\u5c04\u5230\u5e38\u7528\u534f\u8bae\u548c\u5e38\u7528\u7f16\u7801\u4e0a\u3002 \u867d\u7136\u6bcf\u4e2a\u8f6f\u4ef6\u6216\u670d\u52a1\u4ea7\u54c1\u548c\u9879\u76ee\u90fd\u53ef\u4ee5\u81ea\u5df1\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u901a\u4fe1\u5f62\u5f0f\uff0c \u4f46\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u79cd\u4ea7\u54c1\u6216\u9879\u76ee\u79c1\u6709\u7684\u4e13\u6709\u534f\u8bae\u65e0\u6cd5\u8fdb\u4e00\u6b65\u5b9e\u73b0\u8de8\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u5e7f\u6cdb\u4e92\u64cd\u4f5c\u6027\u7684\u76ee\u6807\u3002 \u7279\u522b\u662f\u5728\u6d88\u606f\u4f20\u9012\u548c\u4e8b\u4ef6\u5904\u7406\u9886\u57df\uff0c\u8be5\u884c\u4e1a\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\u5f00\u53d1\u51fa\u4e86\u5f3a\u5927\u4e14\u53d7\u5230\u5e7f\u6cdb\u652f\u6301\u7684\u534f\u8bae \u4f8b\u5982 HTTP 1.1 \u548c HTTP/2 \u4ee5\u53ca WebSockets \u6216 Web \u4e0a\u7684\u4e8b\u4ef6\uff0c\u6216\u8005 MQTT \u548c AMQP \u7528\u4e8e\u9762\u5411\u8fde\u63a5\u7684\u6d88\u606f\u4f20\u9012\u548c\u9065\u6d4b\u4f20\u8f93\u7684\u534f\u8bae\u3002 \u4e00\u4e9b\u5e7f\u6cdb\u4f7f\u7528\u7684\u534f\u8bae\u5df2\u7ecf\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\uff0c\u8fd9\u4e9b\u534f\u8bae\u6765\u81ea\u4e09\u4e2a\u6216\u66f4\u591a\u516c\u53f8\u7684\u9876\u7ea7\u8d22\u56e2\u6253\u9020\u7684\u5f3a\u5927\u751f\u6001\u7cfb\u7edf\uff0c \u8fd8\u6709\u4e00\u4e9b\u6765\u81ea\u5355\u4e2a\u516c\u53f8\u53d1\u5e03\u7684\u5f3a\u5927\u9879\u76ee\u751f\u6001\u7cfb\u7edf\uff0c\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\u90fd\u4e0e\u524d\u9762\u63d0\u5230\u7684\u6807\u51c6\u6808\u7684\u6f14\u53d8\u76f8\u4e00\u81f4\u3002 CloudEvents \u7684\u52aa\u529b\u4e0d\u5e94\u6210\u4e3a\u8ba4\u53ef\u6216\u63a8\u5e7f\u9879\u76ee\u6216\u4ea7\u54c1\u4e13\u6709\u534f\u8bae\u7684\u5de5\u5177\uff0c \u56e0\u4e3a\u8fd9\u4e0e CloudEvents \u7684\u539f\u59cb\u76ee\u6807\u80cc\u9053\u800c\u9a70\u3002 \u8981\u4f7f\u534f\u8bae\u6216\u7f16\u7801\u7b26\u5408\u6838\u5fc3 CloudEvents \u4e8b\u4ef6\u683c\u5f0f\u6216\u534f\u8bae\u7ed1\u5b9a\u7684\u6761\u4ef6\uff0c\u5b83\u5fc5\u987b\u5c5e\u4e8e\u4ee5\u4e0b\u4efb\u4e00\u7c7b\u522b\uff1a \u8be5\u534f\u8bae\u5177\u6709\u5e7f\u6cdb\u8ba4\u53ef\u7684\u591a\u4f9b\u5e94\u5546\u534f\u8bae\u6807\u51c6\u5316\u673a\u6784\uff08\u4f8b\u5982 W3C\u3001IETF\u3001OASIS\u3001ISO\uff09\u7684\u6b63\u5f0f\u6807\u51c6\u5730\u4f4d \u8be5\u534f\u8bae\u5728\u5176\u751f\u6001\u7cfb\u7edf\u7c7b\u522b\u4e2d\u5177\u6709\u201c\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u201d\u5730\u4f4d\u3002 \u8fd9\u610f\u5473\u7740\u5b83\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u751a\u81f3\u88ab\u8ba4\u4e3a\u662f\u7ed9\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u6807\u51c6\u3002 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4f9b\u5e94\u5546\u4e2d\u7acb\u7684\u5f00\u6e90\u7ec4\u7ec7\uff08\u4f8b\u5982 Apache\u3001Eclipse\u3001CNCF\u3001.NET \u57fa\u91d1\u4f1a\uff09\u7684\u4fdd\u62a4\u4f1e\u4e0b \u770b\u5230\u81f3\u5c11\u4e00\u4e2a\u5f00\u6e90\u5b9e\u73b0\uff0c \u5e76\u4e14\u81f3\u5c11\u6709\u5341\u51e0\u4e2a\u72ec\u7acb\u4f9b\u5e94\u5546\u5728\u4ed6\u4eec\u7684\u4ea7\u54c1\u4e2d\u4f7f\u7528\u5b83\u7684\u4ea7\u54c1\u6216\u670d\u52a1\u3002 \u9664\u4e86\u6b63\u5f0f\u72b6\u6001\u4e4b\u5916\uff0c\u534f\u8bae\u6216\u7f16\u7801\u662f\u5426\u7b26\u5408\u6838\u5fc3 CloudEvents \u4e8b\u4ef6\u683c\u5f0f\u6216\u534f\u8bae\u7ed1\u5b9a\u7684\u4e00\u4e2a\u5173\u952e\u6807\u51c6\u662f\uff0c \u8be5\u7ec4\u7ec7\u662f\u5426\u8ba4\u4e3a\u534f\u8bae\u6216\u7f16\u7801\u51fa\u73b0\u540e\uff0c\u8be5\u89c4\u8303\u5bf9\u4e0e\u4ea7\u54c1\u6216\u9879\u76ee\u65e0\u5173\u7684\u4efb\u4f55\u4e00\u65b9\u5177\u6709\u6301\u7eed\u7684\u5b9e\u9645\u5229\u76ca\u3002 \u5bf9\u6b64\u7684\u57fa\u672c\u8981\u6c42\u662f\u534f\u8bae\u6216\u7f16\u7801\u7684\u5b9a\u4e49\u65b9\u5f0f\u5141\u8bb8\u72ec\u7acb\u4e8e\u4ea7\u54c1\u6216\u9879\u76ee\u4ee3\u7801\u7684\u66ff\u4ee3\u5b9e\u73b0\u3002 \u6b22\u8fce\u5c06 CloudEvents \u7684\u6240\u6709\u5176\u4ed6\u534f\u8bae\u548c\u7f16\u7801\u683c\u5f0f \u5305\u542b\u5728\u6307\u5411\u76f8\u5e94\u9879\u76ee\u81ea\u5df1\u7684\u516c\u5171\u4ed3\u5e93\uff0c\u6216\u7ad9\u70b9\u4e2d\u7684 CloudEvents binding \u4fe1\u606f\u7684\u5217\u8868\u4e2d\u3002 Proprietary Protocols and Encodings/\u4e13\u6709\u7684\u534f\u8bae\u4e0e\u7f16\u7801 \u00b6 \u4e3a\u4e86\u9f13\u52b1\u66f4\u591a\u4eba\u91c7\u7528 CloudEvents\uff0c\u672c\u4ed3\u5e93\u5c06\u81ea\u52a8\u6536\u96c6\u4e13\u6709\u534f\u8bae\u548c\u7f16\u7801\u3002 \u672c\u4ed3\u5e93\u7684\u7ef4\u62a4\u4eba\u5458\u4e0d\u8d1f\u8d23\u521b\u5efa\u3001\u7ef4\u62a4\u6216\u901a\u77e5\u4e13\u6709\u89c4\u8303\u7684\u7ef4\u62a4\u4eba\u5458\u6709\u5173\u4e13\u6709\u89c4\u8303\u548c CloudEvents \u89c4\u8303\u95f4\u7684\u504f\u5dee\u3002 \u4e13\u6709\u89c4\u8303\u5c06\u6258\u7ba1\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u4ed3\u5e93\u6216\u6587\u6863\u7ad9\u70b9\u4e2d\uff0c\u5e76\u8bb0\u5f55\u5728 \u4e13\u6709\u89c4\u8303 \u6587\u4ef6\u4e2d\u3002 \u4e13\u6709\u89c4\u8303\u5e94\u9075\u5faa\u4e0e\u6838\u5fc3\u534f\u8bae\u548c\u7f16\u7801\u76f8\u5173\u7684\u5176\u4ed6\u89c4\u8303\u76f8\u540c\u7684\u683c\u5f0f\u3002 \u4e13\u6709\u89c4\u8303\u5c06\u6bd4\u6838\u5fc3\u89c4\u8303\u53d7\u5230\u66f4\u5c11\u7684\u5ba1\u67e5\uff0c\u5e76\u4e14\u968f\u7740 CloudEvents \u89c4\u8303\u7684\u53d1\u5c55\uff0c \u76f8\u5e94\u534f\u8bae\u548c\u7f16\u7801\u7684\u7ef4\u62a4\u8005\u6709\u8d23\u4efb\u4f7f\u89c4\u8303\u4e0e CloudEvents \u89c4\u8303\u4fdd\u6301\u540c\u6b65\u3002 \u5982\u679c\u4e13\u6709\u89c4\u8303\u8fc7\u65f6\u592a\u591a\uff0cCloudEvents \u53ef\u80fd\u4f1a\u5c06\u6307\u5411\u8be5\u89c4\u8303\u7684\u94fe\u63a5\u6807\u8bb0\u4e3a\u5df2\u5f03\u7528\u6216\u5c06\u5176\u5220\u9664\u3002 \u5982\u679c\u4e3a\u540c\u4e00\u4e2a\u534f\u8bae\u521b\u5efa\u4e86\u591a\u4e2a\u4e0d\u517c\u5bb9\u7684\u89c4\u8303\uff0c\u5b58\u50a8\u5e93\u7ef4\u62a4\u8005\u5c06\u4e0d\u77e5\u9053\u54ea\u4e2a\u89c4\u8303\u662f\u6b63\u786e\u7684\uff0c\u5e76\u5217\u51fa\u6240\u6709\u89c4\u8303\u7684\u94fe\u63a5\u3002 Prior Art/\u73b0\u6709\u6280\u672f \u00b6 \u672c\u8282\u4ecb\u7ecd\u4e86\u5de5\u4f5c\u7ec4\u5728 CloudEvent \u89c4\u8303\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u4e00\u4e9b\u8f93\u5165\u6750\u6599\u3002 Roles/\u89d2\u8272 \u00b6 \u4e0b\u9762\u5217\u4e3e\u4e86\u53ef\u80fd\u6d89\u53ca\u4e8b\u4ef6\u7684\u4ea7\u751f\u3001\u7ba1\u7406\u6216\u6d88\u8d39\u7684\u5404\u79cd\u53c2\u4e0e\u8005\u548c\u573a\u666f\u3002 \u5728\u8fd9\u4e9b\u4e2d\uff0c\u4e8b\u4ef6\u751f\u4ea7\u8005\u548c\u4e8b\u4ef6\u6d88\u8d39\u8005\u7684\u89d2\u8272\u4fdd\u6301\u4e0d\u540c\u3002 \u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587\u59cb\u7ec8\u53ef\u4ee5\u540c\u65f6\u627f\u62c5\u591a\u4e2a\u89d2\u8272\uff0c\u5305\u62ec\u65e2\u662f\u4e8b\u4ef6\u7684\u751f\u4ea7\u8005\u53c8\u662f\u4e8b\u4ef6\u7684\u6d88\u8d39\u8005\u3002 \u5e94\u7528\u7a0b\u5e8f\u751f\u6210\u4f9b\u4ed6\u4eba\u4f7f\u7528\u7684\u4e8b\u4ef6\uff0c \u5982\u4e3a\u6d88\u8d39\u8005\u63d0\u4f9b\u6709\u5173\u7ec8\u7aef\u7528\u6237\u6d3b\u52a8\u3001\u72b6\u6001\u53d8\u5316\u6216\u73af\u5883\u89c2\u5bdf\u7684\u89c1\u89e3\uff0c \u6216\u5141\u8bb8\u901a\u8fc7\u4e8b\u4ef6\u9a71\u52a8\u7684\u6269\u5c55\u6765\u8865\u5145\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u3002 \u751f\u4ea7\u7684\u4e8b\u4ef6\u901a\u5e38\u4e0e\u4e0a\u4e0b\u6587\u6216\u751f\u4ea7\u8005\u9009\u62e9\u7684\u5206\u7c7b\u76f8\u5173\u3002 \u4f8b\u5982\uff0c\u623f\u95f4\u4e2d\u7684\u6e29\u5ea6\u4f20\u611f\u5668\u53ef\u80fd\u88ab\u5b89\u88c5\u4f4d\u7f6e\u3001\u623f\u95f4\u3001\u697c\u5c42\u548c\u5efa\u7b51\u7269\u7b49\u4e0a\u4e0b\u6587\u9650\u5b9a\u3002 \u8fd0\u52a8\u7ed3\u679c\u53ef\u4ee5\u6309\u8054\u8d5b\u548c\u7403\u961f\u5206\u7c7b\u3002 \u751f\u4ea7\u8005\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\uff0c\u4f8b\u5982\u5728\u670d\u52a1\u5668\u6216\u8bbe\u5907\u4e0a\u3002 \u751f\u4ea7\u7684\u4e8b\u4ef6\u53ef\u80fd\u7531\u751f\u4ea7\u8005\u6216\u4e2d\u95f4\u4eba\u76f4\u63a5\u63d0\u4f9b\u548c\u53d1\u51fa\uff1b \u4f5c\u4e3a\u540e\u8005\u7684\u793a\u4f8b\uff0c\u8bf7\u8003\u8651\u8bbe\u5907\u901a\u8fc7\u8d1f\u8f7d\u5927\u5c0f\u53d7\u9650\u7684\u7f51\u7edc\uff08\u5982 LoRaWAN \u6216 ModBus\uff09\u4f20\u8f93\u7684\u4e8b\u4ef6\u6570\u636e\uff0c \u5e76\u4e14\u7b26\u5408\u6b64\u89c4\u8303\u7684\u4e8b\u4ef6\u5c06\u7531\u7f51\u7edc\u7f51\u5173\u4ee3\u8868\u751f\u4ea7\u8005\u63d0\u4f9b\u3002 \u4f8b\u5982\uff0c\u6c14\u8c61\u7ad9\u6bcf 5 \u5206\u949f\u901a\u8fc7 LoRaWAN \u4f20\u8f93\u4e00\u6b21 12 \u5b57\u8282\u7684\u4e13\u6709\u4e8b\u4ef6 payload \u7528\u4e8e\u6307\u793a\u5929\u6c14\u72b6\u51b5\u3002 \u7136\u540e\u4f7f\u7528 LoRaWAN \u7f51\u5173\u4ee5 CloudEvents \u683c\u5f0f\u5c06\u4e8b\u4ef6\u53d1\u5e03\u5230 Internet \u76ee\u6807\u3002 LoRaWAN \u7f51\u5173\u662f\u4e8b\u4ef6\u751f\u4ea7\u8005\uff0c\u4ee3\u8868\u6c14\u8c61\u7ad9\u53d1\u5e03\u4e8b\u4ef6\uff0c\u5e76\u5c06\u8bbe\u7f6e\u4e00\u5b9a\u7684\u5143\u6570\u636e\u4ee5\u53cd\u6620\u4e8b\u4ef6\u7684\u6765\u6e90(\u6c14\u8c61\u7ad9)\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4ee5\u4ee5\u4e0b\u76ee\u7684\uff1a \u5982\u663e\u793a\u3001\u5b58\u6863\u3001\u5206\u6790\u3001\u5de5\u4f5c\u6d41\u5904\u7406\u3001\u76d1\u63a7\u72b6\u6001\u6216\u63d0\u4f9b\u4e1a\u52a1\u89e3\u51b3\u65b9\u6848\u53ca\u5176\u57fa\u672c\u6784\u5efa\u6a21\u5757\u7684\u900f\u660e\u5316 \u6765\u6d88\u8d39\u4e8b\u4ef6\u3002 \u6d88\u8d39\u8005\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\uff0c\u4f8b\u5982\u5728\u670d\u52a1\u5668\u6216\u8bbe\u5907\u4e0a\u3002 \u6d88\u8d39\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u5bf9\u4ee5\u4e0b\u5185\u5bb9\u611f\u5174\u8da3\uff1a \u533a\u5206\u4e8b\u4ef6\uff0c\u4f7f\u5f97\u5b8c\u5168\u76f8\u540c\u7684\u4e8b\u4ef6\u4e0d\u4f1a\u88ab\u5904\u7406\u4e24\u6b21\u3002 \u8bc6\u522b\u548c\u9009\u62e9\u6e90\u4e0a\u4e0b\u6587\u6216\u751f\u4ea7\u8005\u6307\u5b9a\u7684\u5206\u7c7b\u3002 \u786e\u5b9a\u4e8b\u4ef6\u76f8\u5bf9\u4e8e\u539f\u59cb\u4e0a\u4e0b\u6587\u6216\u76f8\u5bf9\u4e8e\u65f6\u949f\u7684\u65f6\u95f4\u987a\u5e8f\u3002 \u4e86\u89e3\u4e8b\u4ef6\u4e2d\u643a\u5e26\u7684\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u5173\u8054\u6765\u81ea\u591a\u4e2a\u4e8b\u4ef6\u751f\u4ea7\u8005\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u5e76\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u76f8\u540c\u7684\u6d88\u8d39\u8005\u4e0a\u4e0b\u6587\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6d88\u8d39\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u5bf9\u4ee5\u4e0b\u5185\u5bb9\u611f\u5174\u8da3\uff1a \u4ece\u539f\u59cb\u4e0a\u4e0b\u6587\u4e2d\u83b7\u53d6\u6709\u5173\u4e8b\u4ef6\u4e3b\u9898\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u83b7\u53d6\u6709\u5173\u9700\u8981\u7279\u6743\u8bbf\u95ee\u6388\u6743\u7684\u5df2\u66f4\u6539\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u4f8b\u5982\uff0c\u51fa\u4e8e\u9690\u79c1\u539f\u56e0\uff0cHR \u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u4ec5\u5728\u4e8b\u4ef6\u4e2d\u53d1\u5e03\u975e\u5e38\u6709\u9650\u7684\u4fe1\u606f\uff0c \u4efb\u4f55\u9700\u8981\u66f4\u591a\u6570\u636e\u7684\u4e8b\u4ef6\u6d88\u8d39\u8005\u90fd\u5fc5\u987b\u5728\u5176\u81ea\u5df1\u7684\u6388\u6743\u4e0a\u4e0b\u6587\u80cc\u666f\u4e0b\u4ece HR \u7cfb\u7edf\u83b7\u53d6\u4e0e\u4e8b\u4ef6\u76f8\u5173\u7684\u8be6\u7ec6\u4fe1\u606f \u5728\u539f\u59cb\u4e0a\u4e0b\u6587\u4e2d\u4e0e\u4e8b\u4ef6\u7684\u4e3b\u9898\u8fdb\u884c\u4ea4\u4e92\uff0c\u4f8b\u5982\u5728\u88ab\u544a\u77e5\u8be5\u6570\u636e\u5757\u521a\u521a\u521b\u5efa\u540e\u8bfb\u53d6\u5b58\u50a8\u8be5\u6570\u636e\u5757\u3002 \u6d88\u8d39\u8005\u7684\u5174\u8da3\u6fc0\u53d1\u4e86\u4fe1\u606f\u751f\u4ea7\u8005\u5e94\u8be5\u5305\u62ec\u4e8b\u4ef6\u7684\u9700\u6c42\u3002 \u4e2d\u95f4\u4ef6\u5c06\u4e8b\u4ef6\u4ece\u751f\u4ea7\u8005\u8def\u7531\u5230\u6d88\u8d39\u8005\uff0c\u6216\u8f6c\u53d1\u5230\u5176\u4ed6\u4e2d\u95f4\u4ef6\u3002 \u4ea7\u751f\u4e8b\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5c06\u6839\u636e\u6d88\u8d39\u8005\u9700\u6c42\u4ea7\u751f\u7684\u67d0\u4e9b\u4efb\u52a1\u59d4\u6258\u7ed9\u4e2d\u95f4\u4ef6\uff1a \u7ba1\u7406\u540c\u65f6\u5bf9\u5927\u91cf\u7c7b\u522b\u548c\u4e0a\u4e0b\u6587\u80cc\u666f\u4e2d\u7684\u67d0\u4e2a\u4e8b\u4ef6\u611f\u5174\u8da3\u7684\u6d88\u8d39\u8005\u3002 \u4ee3\u8868\u6d88\u8d39\u8005\u5728\u7c7b\u6216\u4e8b\u4ef6\u7684\u539f\u59cb\u4e0a\u4e0b\u6587\u4e0a\u5904\u7406\u8fc7\u6ee4\u6761\u4ef6\u3002 \u8f6c\u7801\uff0c\u6bd4\u5982\u4ece JSON \u89e3\u7801\u540e\u5728 MsgPack \u4e2d\u7f16\u7801\u3002 \u66f4\u6539\u4e8b\u4ef6\u7ed3\u6784\u7684\u8f6c\u6362\uff0c\u4f8b\u5982\u4ece\u4e13\u6709\u683c\u5f0f\u6620\u5c04\u5230 CloudEvents\uff0c\u540c\u65f6\u4fdd\u7559\u4e8b\u4ef6\u7684\u8eab\u4efd\u548c\u8bed\u4e49\u5b8c\u6574\u6027\u3002 \u5373\u65f6\u201c\u63a8\u9001\u5f0f\u201d\u4f20\u8f93\u7ed9\u611f\u5174\u8da3\u7684\u6d88\u8d39\u8005\u3002 \u5b58\u50a8\u6700\u7ec8\u4f20\u8f93\u7684\u4e8b\u4ef6\uff0c\u7528\u4e8e\u7531\u6d88\u8d39\u8005\u53d1\u8d77\u7684\u201c\u62c9\u201d\u8bf7\u6c42\uff0c\u6216\u5ef6\u8fdf\u540e\u7531\u4e2d\u95f4\u4ef6\u53d1\u8d77\u201c\u63a8\u201d\u8bf7\u6c42\u3002 \u89c2\u5bdf\u4e8b\u4ef6\u5185\u5bb9\u6216\u4e8b\u4ef6\u6d41\u4ee5\u8fdb\u884c\u76d1\u63a7\u6216\u8bca\u65ad\u3002 \u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\uff0c\u4e2d\u95f4\u4ef6\u5c06\u5bf9\u4ee5\u4e0b\u65b9\u9762\u611f\u5174\u8da3\uff1a \u4e00\u79cd\u5143\u6570\u636e\u9274\u522b\u5668\uff0c\u53ef\u7528\u4e8e\u4e8b\u4ef6\u7684\u5206\u7c7b\u6216\u4e0a\u4e0b\u6587\u5316\uff0c\u4ee5\u4fbf\u6d88\u8d39\u8005\u53ef\u4ee5\u8868\u8fbe\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u6216\u4e0a\u4e0b\u6587\u7684\u5174\u8da3\u3002 \u4f8b\u5982\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u5bf9\u6587\u4ef6\u5b58\u50a8\u5e10\u6237\u5185\u7684\u7279\u5b9a\u76ee\u5f55\u76f8\u5173\u7684\u6240\u6709\u4e8b\u4ef6\u611f\u5174\u8da3\u3002 \u4e00\u79cd\u5143\u6570\u636e\u9274\u522b\u5668\uff0c\u5141\u8bb8\u533a\u5206\u8be5\u7c7b\u6216\u4e0a\u4e0b\u6587\u7684\u7279\u5b9a\u4e8b\u4ef6\u7684\u4e3b\u9898\u3002\u4f8b\u5982\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u5e0c\u671b\u8fc7\u6ee4\u6389\u4e0e\u4ee5\u201c.jpg\u201d\u7ed3\u5c3e\u7684 \u65b0\u6587\u4ef6\u76f8\u5173\u7684\u6240\u6709\u4e8b\u4ef6\uff08\u6587\u4ef6\u540d\u662f\u201c\u65b0\u6587\u4ef6\u201d\u4e8b\u4ef6\u7684\u4e3b\u9898\uff09\uff0c\u4ee5\u6b64\u8868\u793a\u5b83\u5bf9\u611f\u5174\u8da3\u7684\u6587\u4ef6\u5b58\u50a8\u8d26\u6237\u4e0b\u67d0\u4e2a\u76ee\u5f55\u7684 \u4e0a\u4e0b\u6587\u73af\u5883\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u53ca\u5176\u6570\u636e\u7f16\u7801\u7684\u6307\u793a\u5668\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u53ca\u5176\u6570\u636e\u7684\u7ed3\u6784\u5e03\u5c40\uff08\u6a21\u5f0f\uff09\u7684\u6307\u793a\u5668\u3002 \u4e8b\u4ef6\u662f\u5426\u53ef\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6d88\u8d39\u53d6\u51b3\u4e8e\u751f\u4ea7\u8005\u7684\u9009\u62e9\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c\u5f53\u4e2d\u95f4\u4ef6\u6539\u53d8\u4e8b\u4ef6\u7684\u8bed\u4e49\u65f6\u53ef\u4ee5\u626e\u6f14 \u751f\u4ea7\u8005 \u7684\u89d2\u8272\uff0c \u5f53\u5b83\u6839\u636e\u4e8b\u4ef6\u91c7\u53d6\u884c\u52a8\u65f6\u53ef\u4ee5\u626e\u6f14 \u6d88\u8d39\u8005 \u7684\u89d2\u8272\uff0c \u6216\u8005\u5f53\u5b83\u8def\u7531\u4e8b\u4ef6\u800c\u4e0d\u8fdb\u884c\u8bed\u4e49\u6539\u53d8\u65f6\u53ef\u4ee5\u626e\u6f14 \u4e2d\u95f4\u4eba \u7684\u89d2\u8272\u3002 \u6846\u67b6\u548c\u5176\u4ed6\u62bd\u8c61\u4f7f\u4e0e\u4e8b\u4ef6\u5e73\u53f0\u57fa\u7840\u8bbe\u65bd\u95f4\u7684\u4ea4\u4e92\u66f4\u7b80\u5355\uff0c \u5e76\u4e14\u901a\u5e38\u4e3a\u591a\u4e2a\u4e8b\u4ef6\u5e73\u53f0\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u516c\u5171 API \u533a\u57df\u3002 \u6846\u67b6\u901a\u5e38\u7528\u4e8e\u5c06\u4e8b\u4ef6\u8f6c\u6362\u4e3a\u5bf9\u8c61\u56fe\uff0c\u5e76\u5c06\u4e8b\u4ef6\u5206\u6d3e\u7ed9\u67d0\u4e9b\u7279\u5b9a\u7684\u5904\u7406\u903b\u8f91\u6216\u7528\u6237\u89c4\u5219\uff0c \u8fd9\u4e9b\u7528\u6237\u903b\u8f91\u6216\u7528\u6237\u89c4\u5219\u5141\u8bb8\u6d88\u8d39\u5e94\u7528\u7a0b\u5e8f\u5bf9\u539f\u59cb\u4e0a\u4e0b\u6587\u548c\u7279\u5b9a\u4e3b\u9898\u4e2d\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u4e8b\u4ef6\u505a\u51fa\u53cd\u5e94\u3002 \u6846\u67b6\u6700\u611f\u5174\u8da3\u7684\u662f\u8de8\u62bd\u8c61\u5e73\u53f0\u7684\u8bed\u4e49\u5143\u6570\u636e\u901a\u7528\u6027\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u7edf\u4e00\u5904\u7406\u7c7b\u4f3c\u7684\u6d3b\u52a8\u3002 \u5bf9\u4e8e\u4f53\u80b2\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u8be5\u6846\u67b6\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u5bf9\u8054\u76df\u4e2d\u4e00\u652f\u7403\u961f\u4eca\u5929\u7684\u6bd4\u8d5b\uff08\u4e3b\u9898\uff09 \u7684\u6240\u6709\u4e8b\u4ef6\u611f\u5174\u8da3\uff0c\u4f46\u5e0c\u671b\u4ee5\u4e0d\u540c\u4e8e\u201c\u6362\u4eba\u201d\u4e8b\u4ef6\u7684\u65b9\u5f0f\u5904\u7406\u201c\u5f97\u5206\u201d\u4e8b\u4ef6\u3002 \u4e3a\u6b64\uff0c\u6846\u67b6\u5c06\u9700\u8981\u4e00\u4e2a\u5408\u9002\u7684\u5143\u6570\u636e\u9274\u522b\u5668\uff0c\u4f7f\u5176\u4e0d\u5fc5\u4e86\u89e3\u4e8b\u4ef6\u7ec6\u8282\u3002 \u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u5408\u9002\u7684\u5143\u6570\u636e\u9274\u522b\u5668\u5e94\u8be5\u7531\u751f\u4ea7\u8005\u586b\u5145\uff0c\u800c\u4e0d\u662f\u6846\u67b6\u7684\u8d23\u4efb\u3002 Value Proposition/\u4ef7\u503c\u4e3b\u5f20 \u00b6 \u672c\u8282\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u80fd\u591f\u5c55\u793a CloudEvents \u4ef7\u503c\u4e3b\u5f20\u7684\u7528\u4f8b\u3002 \u8de8\u670d\u52a1\u548c\u5e73\u53f0\u89c4\u8303\u5316\u4e8b\u4ef6 \u00b6 \u4e3b\u8981\u4e8b\u4ef6\u53d1\u5e03\u8005\uff08\u4f8b\u5982 AWS\u3001Microsoft\u3001Google \u7b49\uff09\u90fd\u5728\u5404\u81ea\u7684\u5e73\u53f0\u4e0a\u4ee5\u4e0d\u540c\u7684\u683c\u5f0f\u53d1\u5e03\u4e8b\u4ef6\u3002 \u751a\u81f3\u5728\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u540c\u4e00\u63d0\u4f9b\u5546\u7684\u670d\u52a1\u4ee5\u4e0d\u540c\u683c\u5f0f\uff08\u4f8b\u5982 AWS\uff09\u53d1\u5e03\u4e8b\u4ef6\u3002 \u8fd9\u8feb\u4f7f\u4e8b\u4ef6\u6d88\u8d39\u8005\u5b9e\u73b0\u81ea\u5b9a\u4e49\u903b\u8f91\u4ee5\u8de8\u5e73\u53f0\u8bfb\u53d6\u6216\u5904\u7406\u4e8b\u4ef6\u6570\u636e\uff0c\u6709\u65f6\u751a\u81f3\u9700\u8981\u8de8\u5355\u4e2a\u5e73\u53f0\u7684\u591a\u4e2a\u670d\u52a1\u5904\u7406\u3002 CloudEvents \u53ef\u4ee5\u4e3a\u90a3\u4e9b\u8de8\u5e73\u53f0\u548c\u670d\u52a1\u5904\u7406\u4e8b\u4ef6\u7684\u4f7f\u7528\u8005\u63d0\u4f9b\u5355\u4e00\u4f53\u9a8c\u3002 \u4fc3\u8fdb\u8de8\u670d\u52a1\u548c\u5e73\u53f0\u7684\u96c6\u6210 \u00b6 \u8de8\u73af\u5883\u4f20\u8f93\u7684\u4e8b\u4ef6\u6570\u636e\u8d8a\u6765\u8d8a\u666e\u904d\u3002 \u7136\u800c\uff0c\u5982\u679c\u6ca1\u6709\u63cf\u8ff0\u4e8b\u4ef6\u7684\u901a\u7528\u65b9\u5f0f\uff0c\u8de8\u73af\u5883\u7684\u4e8b\u4ef6\u4f20\u9012\u5c31\u4f1a\u53d7\u5230\u963b\u788d\u3002 CloudEvents \u4e4b\u524d\u6ca1\u6709\u5355\u4e00\u7684\u65b9\u6cd5\u53ef\u4ee5\u786e\u5b9a\u4e8b\u4ef6\u7684\u6765\u6e90\u548c\u53ef\u80fd\u7684\u53bb\u5411\u3002 \u8fd9\u5bf9\u7814\u7a76\u6210\u529f\u4f20\u8f93\u4e8b\u4ef6\u4e8b\u4ef6\u5de5\u5177\u548c\u6d88\u8d39\u8005\u77e5\u9053\u5982\u4f55\u5904\u7406\u4e8b\u4ef6\u6570\u636e\u5f62\u6210\u4e86\u5de8\u5927\u963b\u788d\u3002 CloudEvents \u63d0\u4f9b\u6709\u7528\u7684\u5143\u6570\u636e\uff0c\u4e2d\u95f4\u4ef6\u548c\u6d88\u8d39\u8005\u53ef\u4ee5\u4f9d\u8d56\u8fd9\u4e9b\u5143\u6570\u636e\u6765\u4fc3\u8fdb\u4e8b\u4ef6\u8def\u7531\u3001\u65e5\u5fd7\u8bb0\u5f55\u3001\u4f20\u8f93\u548c\u63a5\u6536\u3002 \u63d0\u9ad8\u529f\u80fd\u5373\u670d\u52a1\u7684\u53ef\u79fb\u690d\u6027 \u00b6 \u529f\u80fd\u5373\u670d\u52a1( FaaS )\uff08\u4e5f\u79f0\u4e3a serverless \u8ba1\u7b97\uff09\u662f IT \u4e2d\u589e\u957f\u6700\u5feb\u7684\u8d8b\u52bf\u4e4b\u4e00\uff0c\u5b83\u4e3b\u8981\u662f\u7531\u4e8b\u4ef6\u9a71\u52a8\u7684\u3002 \u7136\u800c\uff0cFaaS \u7684\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\u662f\u4f9b\u5e94\u5546\u9501\u5b9a\u3002 \u8fd9\u79cd\u9501\u5b9a\u90e8\u5206\u662f\u7531\u51fd\u6570 API \u548c\u4f9b\u5e94\u5546\u4e4b\u95f4\u7b7e\u540d\u7684\u5dee\u5f02\u5f15\u8d77\u7684\uff0c \u9501\u5b9a\u540c\u6837\u4e5f\u662f\u7531\u51fd\u6570\u5185\u63a5\u6536\u7684\u4e8b\u4ef6\u6570\u636e\u683c\u5f0f\u7684\u5dee\u5f02\u5f15\u8d77\u7684\u3002 CloudEvents \u63d0\u4f9b\u63cf\u8ff0\u4e8b\u4ef6\u6570\u636e\u7684\u901a\u7528\u65b9\u5f0f\u63d0\u9ad8\u4e86\u529f\u80fd\u5373\u670d\u52a1\u7684\u53ef\u79fb\u690d\u6027\u3002 \u6539\u8fdb\u4e8b\u4ef6\u9a71\u52a8/serverless \u67b6\u6784\u7684\u5f00\u53d1\u548c\u6d4b\u8bd5 \u00b6 \u7f3a\u4e4f\u901a\u7528\u4e8b\u4ef6\u683c\u5f0f\u4f7f\u4e8b\u4ef6\u9a71\u52a8\u548c serverless \u67b6\u6784\u7684\u5f00\u53d1\u548c\u6d4b\u8bd5\u53d8\u5f97\u590d\u6742\u3002 \u6ca1\u6709\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u4ee5\u51c6\u786e\u5730\u4e3a\u5f00\u53d1\u548c\u6d4b\u8bd5\u76ee\u7684\u6a21\u62df\u4e8b\u4ef6\uff0c\u5e76\u5e2e\u52a9\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u6a21\u62df\u4e8b\u4ef6\u9a71\u52a8\u7684\u5de5\u4f5c\u6d41\u3002 CloudEvents \u53ef\u4ee5\u63d0\u4f9b\u66f4\u597d\u7684\u5f00\u53d1\u5de5\u5177\u6765\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u5904\u7406\u4e8b\u4ef6\u9a71\u52a8\u548c\u65e0\u670d\u52a1\u5668\u67b6\u6784\u7684\u7aef\u5230\u7aef\u751f\u547d\u5468\u671f\u3002 \u4e8b\u4ef6\u6570\u636e\u53d1\u5c55 \u00b6 \u5927\u591a\u6570\u5e73\u53f0\u548c\u670d\u52a1\u5bf9\u5176\u4e8b\u4ef6\u7684\u6570\u636e\u6a21\u578b\u8fdb\u884c\u4e0d\u540c\u7684\u7248\u672c\u63a7\u5236\uff08\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\u7684\u8bdd\uff09\u3002 \u968f\u7740\u8fd9\u4e9b\u6570\u636e\u6a21\u578b\u7684\u53d1\u5c55\uff0c\u8fd9\u4f1a\u4e3a\u53d1\u5e03\u548c\u4f7f\u7528\u4e8b\u4ef6\u7684\u6570\u636e\u6a21\u578b\u5e26\u6765\u4e0d\u4e00\u81f4\u7684\u4f53\u9a8c\u3002 CloudEvents \u53ef\u4ee5\u63d0\u4f9b\u4e00\u79cd\u901a\u7528\u7684\u65b9\u5f0f\u6765\u7248\u672c\u5316\u548c\u6f14\u5316\u4e8b\u4ef6\u6570\u636e\u7684\u53d1\u5c55\u3002 \u8fd9\u5c06\u5e2e\u52a9\u4e8b\u4ef6\u53d1\u5e03\u8005\u6839\u636e\u6700\u4f73\u5b9e\u8df5\u5b89\u5168\u5730\u5bf9\u5176\u6570\u636e\u6a21\u578b\u8fdb\u884c\u7248\u672c\u63a7\u5236\uff0c \u5e76\u4e14\u8fd9\u6709\u52a9\u4e8e\u4e8b\u4ef6\u6d88\u8d39\u8005\u968f\u7740\u4e8b\u4ef6\u6570\u636e\u7684\u53d1\u5c55\u5b89\u5168\u5730\u4f7f\u7528\u5b83\u3002 \u89c4\u8303\u5316 Webhook \u00b6 Webhooks \u662f\u4e00\u79cd\u4e0d\u4f7f\u7528\u901a\u7528\u683c\u5f0f\u7684\u6765\u53d1\u5e03\u4e8b\u4ef6\u7684\u6a21\u5f0f\u3002 Webhook \u7684\u4f7f\u7528\u8005\u6ca1\u6709\u4e00\u81f4\u7684\u65b9\u5f0f\u6765\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u8bc6\u522b\u3001\u9a8c\u8bc1\u548c\u6574\u4f53\u5904\u7406\u901a\u8fc7 Webhook \u4f20\u8f93\u7684\u4e8b\u4ef6\u6570\u636e\u3002 CloudEvents \u53ef\u4ee5\u63d0\u4f9b Webhook \u53d1\u5e03\u548c\u6d88\u8d39\u4e8b\u4ef6\u7684\u4e00\u81f4\u6027\u3002 \u5b89\u5168\u7b56\u7565 \u00b6 \u51fa\u4e8e\u5b89\u5168\u548c\u7b56\u7565\u8003\u8651\uff0c\u53ef\u80fd\u9700\u8981\u8fc7\u6ee4\u3001\u8f6c\u6362\u6216\u963b\u6b62\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e8b\u4ef6\u4f20\u8f93\u3002 \u6bd4\u5982\u53ef\u80fd\u9700\u8981\u9632\u6b62\u4e8b\u4ef6\u7684\u8fdb\u5165\u6216\u9000\u51fa\uff0c\u5982\u5305\u542b\u654f\u611f\u4fe1\u606f\u7684\u4e8b\u4ef6\u6570\u636e\u6216\u60f3\u8981\u7981\u6b62\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e4b\u95f4\u7684\u4fe1\u606f\u6d41\u3002 \u901a\u7528\u4e8b\u4ef6\u683c\u5f0f\u5c06\u5141\u8bb8\u66f4\u5bb9\u6613\u5730\u63a8\u7406\u6b63\u5728\u4f20\u8f93\u7684\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u6570\u636e\u81ea\u67e5\u3002 \u4e8b\u4ef6\u8ffd\u8e2a \u00b6 \u4ece\u6e90\u53d1\u9001\u7684\u4e8b\u4ef6\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u4e00\u7cfb\u5217\u9644\u52a0\u4e8b\u4ef6\u5e8f\u5217\u4e4b\u4e2d\uff0c \u8fd9\u4e9b\u9644\u52a0\u4e8b\u4ef6\u5e8f\u5217\u4ece\u5404\u79cd\u4e2d\u95f4\u4ef6\u8bbe\u5907\uff08\u4f8b\u5982\u4e8b\u4ef6\u4ee3\u7406\u548c\u7f51\u5173\uff09\u53d1\u51fa\u3002 CloudEvents \u5728\u4e8b\u4ef6\u4e2d\u5305\u542b\u5143\u6570\u636e\u4ee5\u5c06\u8fd9\u4e9b\u4e8b\u4ef6\u5173\u8054\u4e3a\u4e8b\u4ef6\u5e8f\u5217\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u8fdb\u884c\u4e8b\u4ef6\u8ddf\u8e2a\u548c\u6545\u969c\u6392\u9664\u3002 IoT/\u7269\u8054\u7f51 \u00b6 \u7269\u8054\u7f51\u8bbe\u5907\u4f1a\u53d1\u9001\u548c\u63a5\u6536\u4e0e\u5176\u529f\u80fd\u76f8\u5173\u7684\u4e8b\u4ef6\u3002 \u4f8b\u5982\uff0c\u8fde\u63a5\u7684\u6052\u6e29\u5668\u5c06\u53d1\u9001\u6709\u5173\u5f53\u524d\u6e29\u5ea6\u7684\u9065\u6d4b\u6570\u636e\uff0c \u5e76\u53ef\u4ee5\u63a5\u6536\u6539\u53d8\u6e29\u5ea6\u7684\u4e8b\u4ef6\u3002 \u8fd9\u4e9b\u8bbe\u5907\u901a\u5e38\u5177\u6709\u53d7\u9650\u7684\u64cd\u4f5c\u73af\u5883\uff08cpu\u3001\u5185\u5b58\uff09\uff0c\u9700\u8981\u660e\u786e\u5b9a\u4e49\u7684\u4e8b\u4ef6\u6d88\u606f\u683c\u5f0f\u3002 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u6d88\u606f\u662f\u4e8c\u8fdb\u5236\u7f16\u7801\u7684\uff0c\u800c\u4e0d\u662f\u6587\u672c\u7684\u3002 \u65e0\u8bba\u662f\u76f4\u63a5\u6765\u81ea\u8bbe\u5907\u8fd8\u662f\u901a\u8fc7\u7f51\u5173\u8f6c\u6362\uff0cCloudEvents \u90fd\u53ef\u4ee5\u66f4\u597d\u5730\u63cf\u8ff0\u6d88\u606f\u7684\u6765\u6e90\u548c\u6d88\u606f\u4e2d\u5305\u542b\u7684\u6570\u636e\u683c\u5f0f\u3002 \u4e8b\u4ef6\u5173\u8054 \u00b6 \u4e00\u4e2a serverless \u5e94\u7528\u6216\u5de5\u4f5c\u6d41\u53ef\u80fd\u4e0e\u6765\u81ea\u4e0d\u540c\u4e8b\u4ef6\u6e90\u6216\u4e8b\u4ef6\u751f\u4ea7\u8005\u7684\u591a\u4e2a\u4e8b\u4ef6\u76f8\u5173\u8054\u3002 \u4f8b\u5982\uff0c\u76d7\u7a83\u68c0\u6d4b\u5e94\u7528\u7a0b\u5e8f/\u5de5\u4f5c\u6d41\u53ef\u80fd\u6d89\u53ca\u8fd0\u52a8\u4e8b\u4ef6\u548c\u95e8/\u7a97\u6253\u5f00\u4e8b\u4ef6\u3002 \u4e00\u4e2a serverless \u5e73\u53f0\u53ef\u80fd\u63a5\u6536\u6bcf\u79cd\u7c7b\u578b\u4e8b\u4ef6\u7684\u8bb8\u591a\u5b9e\u4f8b\uff0c\u4f8b\u5982 \u5b83\u53ef\u4ee5\u63a5\u6536\u6765\u81ea\u4e0d\u540c\u623f\u5c4b\u7684\u8fd0\u52a8\u4e8b\u4ef6\u548c\u5f00\u7a97\u4e8b\u4ef6\u3002 serverless \u5e73\u53f0\u9700\u8981\u5c06\u4e00\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u4e0e\u5176\u4ed6\u7c7b\u578b\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u6b63\u786e\u5173\u8054\uff0c \u5e76\u5c06\u63a5\u6536\u5230\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u6620\u5c04\u5230\u6b63\u786e\u7684\u5e94\u7528/\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002 CloudEvents \u5c06\u4e3a\u4efb\u4f55\u4e8b\u4ef6\u4f7f\u7528\u8005\uff08\u4f8b\u5982 serverless \u5e73\u53f0\uff09\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u65b9\u5f0f\uff0c \u4ee5\u5728\u4e8b\u4ef6\u6570\u636e\u4e2d\u5b9a\u4f4d\u4e8b\u4ef6\u5173\u8054\u4fe1\u606f/\u4ee4\u724c\u5e76\u5c06\u63a5\u6536\u5230\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u6620\u5c04\u5230\u6b63\u786e\u7684\u5e94\u7528/\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002 Existing Event Formats/\u73b0\u6709\u7684\u6570\u636e\u683c\u5f0f \u00b6 \u4e0e\u4e0a\u4e00\u8282\u4e00\u6837\uff0c\u5bf9\u5f53\u524d\u73b0\u72b6\u7684\u8c03\u67e5\uff08\u548c\u7406\u89e3\uff09\u5bf9 CloudEvents \u5c0f\u7ec4\u6765\u8bf4\u975e\u5e38\u91cd\u8981\u3002 \u4e3a\u6b64\uff0c\u4e0b\u9762\u5217\u51fa\u4e86\u5728\u5b9e\u8df5\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u5f53\u524d\u4e8b\u4ef6\u683c\u5f0f\u7684\u6837\u672c\u3002 Microsoft - Event Grid/\u5fae\u8f6f - \u4e8b\u4ef6\u7f51\u683c \u00b6 { \"topic\" : \"/subscriptions/{subscription-id}\" , \"subject\" : \"/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.EventGrid/eventSubscriptions/LogicAppdd584bdf-8347-49c9-b9a9-d1f980783501\" , \"eventType\" : \"Microsoft.Resources.ResourceWriteSuccess\" , \"eventTime\" : \"2017-08-16T03:54:38.2696833Z\" , \"id\" : \"25b3b0d0-d79b-44d5-9963-440d4e6a9bba\" , \"data\" : { \"authorization\" : \"{azure_resource_manager_authorizations}\" , \"claims\" : \"{azure_resource_manager_claims}\" , \"correlationId\" : \"54ef1e39-6a82-44b3-abc1-bdeb6ce4d3c6\" , \"httpRequest\" : \"\" , \"resourceProvider\" : \"Microsoft.EventGrid\" , \"resourceUri\" : \"/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.EventGrid/eventSubscriptions/LogicAppdd584bdf-8347-49c9-b9a9-d1f980783501\" , \"operationName\" : \"Microsoft.EventGrid/eventSubscriptions/write\" , \"status\" : \"Succeeded\" , \"subscriptionId\" : \"{subscription-id}\" , \"tenantId\" : \"72f988bf-86f1-41af-91ab-2d7cd011db47\" } } Documentation Google - Cloud Functions (potential future)/\u8c37\u6b4c - \u4e91\u51fd\u6570 (\u6f5c\u5728\u7684\u672a\u6765) \u00b6 { \"data\" : { \"@type\" : \"types.googleapis.com/google.pubsub.v1.PubsubMessage\" , \"attributes\" : { \"foo\" : \"bar\" }, \"messageId\" : \"12345\" , \"publishTime\" : \"2017-06-05T12:00:00.000Z\" , \"data\" : \"somebase64encodedmessage\" }, \"context\" : { \"eventId\" : \"12345\" , \"timestamp\" : \"2017-06-05T12:00:00.000Z\" , \"eventTypeId\" : \"google.pubsub.topic.publish\" , \"resource\" : { \"name\" : \"projects/myProject/topics/myTopic\" , \"service\" : \"pubsub.googleapis.com\" } } } AWS - CloudWatch Events/\u4e9a\u9a6c\u900a - CloudWatch \u4e8b\u4ef6 \u00b6 AWS \u4e0a\u7684\u5f88\u5927\u4e00\u90e8\u5206\u4e8b\u4ef6\u5904\u7406\u7cfb\u7edf\u90fd\u5728\u4f7f\u7528\u8fd9\u79cd\u683c\u5f0f\u3002 { \"version\" : \"0\" , \"id\" : \"6a7e8feb-b491-4cf7-a9f1-bf3703467718\" , \"detail-type\" : \"EC2 Instance State-change Notification\" , \"source\" : \"aws.ec2\" , \"account\" : \"111122223333\" , \"time\" : \"2017-12-22T18:43:48Z\" , \"region\" : \"us-west-1\" , \"resources\" : [ \"arn:aws:ec2:us-west-1:123456789012:instance/i-1234567890abcdef0\" ], \"detail\" : { \"instance-id\" : \"i-1234567890abcdef0\" , \"state\" : \"terminated\" } } IBM - OpenWhisk - Web Action Event/IBM - OpenWhisk - Web Action \u4e8b\u4ef6 \u00b6 { \"__ow_method\" : \"post\" , \"__ow_headers\" : { \"accept\" : \"*/*\" , \"connection\" : \"close\" , \"content-length\" : \"4\" , \"content-type\" : \"text/plain\" , \"host\" : \"172.17.0.1\" , \"user-agent\" : \"curl/7.43.0\" }, \"__ow_path\" : \"\" , \"__ow_body\" : \"Jane\" } OpenStack - Audit Middleware - Event /OpenStack - \u5ba1\u8ba1\u4e2d\u95f4\u4ef6 - \u4e8b\u4ef6 \u00b6 { \"typeURI\" : \"http://schemas.dmtf.org/cloud/audit/1.0/event\" , \"id\" : \"d8304637-3f63-5092-9ab3-18c9781871a2\" , \"eventTime\" : \"2018-01-30T10:46:16.740253+00:00\" , \"action\" : \"delete\" , \"eventType\" : \"activity\" , \"outcome\" : \"success\" , \"reason\" : { \"reasonType\" : \"HTTP\" , \"reasonCode\" : \"204\" }, \"initiator\" : { \"typeURI\" : \"service/security/account/user\" , \"name\" : \"user1\" , \"domain\" : \"domain1\" , \"id\" : \"52d28347f0b4cf9cc1717c00adf41c74cc764fe440b47aacb8404670a7cd5d22\" , \"host\" : { \"address\" : \"127.0.0.1\" , \"agent\" : \"python-novaclient\" }, \"project_id\" : \"ae63ddf2076d4342a56eb049e37a7621\" }, \"target\" : { \"typeURI\" : \"compute/server\" , \"id\" : \"b1b475fc-ef0a-4899-87f3-674ac0d56855\" }, \"observer\" : { \"typeURI\" : \"service/compute\" , \"name\" : \"nova\" , \"id\" : \"1b5dbef1-c2e8-5614-888d-bb56bcf65749\" }, \"requestPath\" : \"/v2/ae63ddf2076d4342a56eb049e37a7621/servers/b1b475fc-ef0a-4899-87f3-674ac0d56855\" } Documentation Adobe - I/O Events/Adobe - I/O \u4e8b\u4ef6 \u00b6 { \"event_id\" : \"639fd17a-d0bb-40ca-83a4-e78612bce5dc\" , \"event\" : { \"@id\" : \"82235bac-2b81-4e70-90b5-2bd1f04b5c7b\" , \"@type\" : \"xdmCreated\" , \"xdmEventEnvelope:objectType\" : \"xdmAsset\" , \"activitystreams:to\" : { \"xdmImsUser:id\" : \"D13A1E7053E46A220A4C86E1@AdobeID\" , \"@type\" : \"xdmImsUser\" }, \"activitystreams:generator\" : { \"xdmContentRepository:root\" : \"https://cc-api-storage.adobe.io/\" , \"@type\" : \"xdmContentRepository\" }, \"activitystreams:actor\" : { \"xdmImsUser:id\" : \"D13A1E7053E46A220A4C86E1@AdobeID\" , \"@type\" : \"xdmImsUser\" }, \"activitystreams:object\" : { \"@type\" : \"xdmAsset\" , \"xdmAsset:asset_id\" : \"urn:aaid:sc:us:4123ba4c-93a8-4c5d-b979-ffbbe4318185\" , \"xdmAsset:asset_name\" : \"example.jpg\" , \"xdmAsset:etag\" : \"6fc55d0389d856ae7deccebba54f110e\" , \"xdmAsset:path\" : \"/MyFolder/example.jpg\" , \"xdmAsset:format\" : \"image/jpeg\" }, \"activitystreams:published\" : \"2016-07-16T19:20:30+01:00\" } } Documentation","title":"\u5165\u95e8\u6587\u6863"},{"location":"primer/#cloudevents-103","text":"","title":"CloudEvents \u5165\u95e8\u6587\u6863 - 1.0.3 \u7248\u672c\uff08\u5236\u4f5c\u4e2d\uff09"},{"location":"primer/#_1","text":"\u8fd9\u4efd\u975e\u6280\u672f\u89c4\u8303\u6587\u6863\u7528\u6765\u4e3a\u4f60\u63d0\u4f9b\u5173\u4e8e CloudEvents \u89c4\u8303\u7684\u603b\u4f53\u6982\u89c8\u3002\u5b83\u8865\u5145\u4e86 CloudEvents \u89c4\u8303\u7684\u76f8\u5173\u80cc\u666f\u4ee5\u53ca\u5728\u5236\u5b9a\u672c\u89c4\u8303\u65f6\u7684\u5386\u53f2\u548c\u8bbe\u8ba1\u7406\u5ff5\u3002\u8fd9\u6837\uff0cCloudEvents \u7684\u6838\u5fc3\u89c4\u8303\u5c31\u53ea\u9700\u8981\u5173\u6ce8 Events \u89c4\u8303\u7684\u6280\u672f\u7ec6\u8282\uff0c\u800c\u4e0d\u7528\u8fc7\u591a\u5730\u5173\u5fc3\u80cc\u666f\u76f8\u5173\u5185\u5bb9\u3002","title":"\u6458\u8981"},{"location":"primer/#_2","text":"\u8fd9\u4efd\u6587\u6863\u662f\u4e00\u4efd\u4ecd\u5728\u5236\u4f5c\u4e2d\u7684\u5de5\u4f5c\u8349\u6848\u3002","title":"\u6587\u6863\u72b6\u6001"},{"location":"primer/#_3","text":"\u5386\u53f2 CloudEvents \u6982\u5ff5 \u8bbe\u8ba1\u76ee\u6807 \u67b6\u6784 \u5c5e\u6027\u7248\u672c\u63a7\u5236 CloudEvent \u5c5e\u6027 CloudEvent \u5c5e\u6027\u6269\u5c55 \u751f\u4ea7 CloudEvents \u5408\u683c\u7684\u534f\u8bae\u4e0e\u7f16\u7801 \u4e13\u6709\u7684\u534f\u8bae\u548c\u7f16\u7801 \u73b0\u6709\u6280\u672f \u89d2\u8272 \u4ef7\u503c\u4e3b\u5f20 \u73b0\u6709\u7684\u6570\u636e\u683c\u5f0f","title":"\u76ee\u5f55"},{"location":"primer/#history","text":"CNCF Serverless \u5de5\u4f5c\u7ec4 \u662f\u7531 CNCF \u7684 \u6280\u672f\u76d1\u7ba1\u59d4\u5458\u4f1a \u6210\u7acb\uff0c\u7528\u4e8e\u7814\u7a76 Serverless \u76f8\u5173\u6280\u672f\u5e76\u4e3a CNCF \u63a8\u8350\u76f8\u5173\u9886\u57df\u7684\u672a\u6765\u53d1\u5c55\u8ba1\u5212\u7684\u5de5\u4f5c\u7ec4\u3002\u5de5\u4f5c\u7ec4\u5176\u4e2d\u4e00\u9879\u5efa\u8bae\u5c31\u662f\u7814\u7a76\u521b\u5efa\u4e00\u79cd\u901a\u7528\u4e8b\u4ef6\u683c\u5f0f\uff0c\u7528\u4e8e\u63d0\u5347\u4e0d\u540c\u4e91\u5382\u5546\u95f4\u51fd\u6570\u7684\u53ef\u79fb\u690d\u6027\u548c\u4e8b\u4ef6\u6d41\u5904\u7406\u7684\u4e92\u64cd\u4f5c\u6027\u3002\u5c31\u6b64\uff0cCloudEvents \u5e94\u8fd0\u800c\u751f\u3002 \u5c3d\u7ba1 CloudEvents \u8d77\u521d\u662f\u4f5c\u4e3a Serverless \u5de5\u4f5c\u7ec4\u7684\u9879\u76ee\u8fdb\u884c\u7684\uff0c\u4f46\u968f\u7740 CloudEvents \u89c4\u8303\u5b8c\u6210\u5b83 v0.1 \u7248\u672c\u7684\u91cc\u7a0b\u7891\uff0c\u6280\u672f\u76d1\u7ba1\u59d4\u5458\u4f1a\u6279\u51c6\u4e86 CloudEvents \u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u72ec\u7acb\u7684 CNCF \u6c99\u7bb1\u7ea7\u9879\u76ee\u3002","title":"History/\u5386\u53f2"},{"location":"primer/#cloudevents-concepts","text":"\u4e00\u4e2a \u4e8b\u4ef6 \u5305\u542b\u4e86 \u4e8b\u4ef6\u53d1\u751f \u7684\u4e0a\u4e0b\u6587\u548c\u76f8\u5173\u6570\u636e\u3002 \u4e8b\u4ef6\u7684\u76f8\u5173\u6570\u636e\u53ef\u4ee5\u7528\u6765\u552f\u4e00\u6807\u8bc6\u4e00\u4ef6\u4e8b\u4ef6\u7684\u53d1\u751f\u3002 \u4e8b\u4ef6\u4ee3\u8868\u4e86\u5df2\u53d1\u751f\u7684\u4e8b\u5b9e\uff0c\u56e0\u6b64\u5b83\u5e76\u4e0d\u5305\u542b\u4efb\u4f55\u76ee\u7684\u5730\u76f8\u5173\u4fe1\u606f\uff0c\u4f46\u6d88\u606f\u80fd\u591f\u4f20\u8fbe\u4e8b\u4ef6\u5185\u5bb9\uff0c\u4ece\u800c\u5c06\u4e8b\u4ef6\u6570\u636e \u4ece\u6e90\u5934\u4f20\u8f93\u5230\u6307\u5b9a\u7684\u76ee\u7684\u5730\u3002","title":"Cloudevents Concepts/\u6982\u5ff5"},{"location":"primer/#eventing","text":"\u4e8b\u4ef6\u901a\u5e38\u5728\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u4e2d\u4f7f\u7528\u6765\u8fde\u63a5\u4e0d\u540c\u7684\u7cfb\u7edf\uff0c\u5176\u4e2d\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u7684\u72b6\u6001\u53d8\u5316\u4f1a\u5bfc\u81f4\u4ee3\u7801\u5728\u53e6\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6267\u884c\u3002 \u6bd4\u5982\uff0c\u4e00\u4e2a\u4e8b\u4ef6\u6e90\uff0c\u53ef\u80fd\u4f1a\u5728\u6536\u5230\u67d0\u4e2a\u5916\u90e8\u4fe1\u53f7(\u5982 HTTP \u6216 RPC )\u6216\u89c2\u5bdf\u5230\u72b6\u6001\u53d8\u5316(\u5982 IoT/ \u7269\u8054\u7f51\u4f20\u611f\u5668\u6570\u636e\u53d8\u5316\u6216\u4e0d\u6d3b\u8dc3) \u65f6\uff0c\u751f\u4ea7\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u4e3a\u4e86\u66f4\u597d\u5730\u89e3\u91ca\u4e00\u4e2a\u7cfb\u7edf\u5982\u4f55\u4f7f\u7528 CloudEvents\uff0c\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u4ece\u4e8b\u4ef6\u6e90\u751f\u4ea7\u7684\u4e8b\u4ef6\u662f\u5982\u4f55\u89e6\u53d1\u4e00\u4e2a\u884c\u4e3a\u7684\u3002 \u4e8b\u4ef6\u6e90\u751f\u4ea7\u4e86\u4e00\u6761\u5c01\u88c5\u4e86\u57fa\u4e8e\u67d0\u79cd\u534f\u8bae\u7684\u4e8b\u4ef6\u6570\u636e\u7684\u6d88\u606f\u3002 \u5f53\u8f7d\u6709\u4e8b\u4ef6\u7684\u6d88\u606f\u5230\u8fbe\u76ee\u7684\u5730\u65f6\uff0c\u4f1a\u89e6\u53d1\u4e00\u4e2a\u4f7f\u7528\u4e86\u4e8b\u4ef6\u6570\u636e\u7684\u884c\u4e3a\u51fd\u6570\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u6e90\u662f\u90a3\u4e9b\u5141\u8bb8\u6682\u5b58\u548c\u6d4b\u8bd5\u5b9e\u4f8b\u7684\u6e90\u7c7b\u578b\u7684\u7279\u5b9a\u5b9e\u4f8b\u3002 \u67d0\u4e2a\u7279\u5b9a\u6e90\u7c7b\u578b\u7684\u5f00\u6e90\u8f6f\u4ef6\u53ef\u80fd\u7531\u591a\u4e2a\u516c\u53f8\u6216\u63d0\u4f9b\u5546\u90e8\u7f72\u3002 \u4e8b\u4ef6\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u884c\u4e1a\u6807\u51c6\u534f\u8bae\uff08\u5982 HTTP\u3001AMQP\u3001MQTT\u3001SMTP\uff09\u3001\u5f00\u6e90\u534f\u8bae\uff08\u4f8b\u5982 Kafka\u3001NATS\uff09\u6216 \u5e73\u53f0/\u4f9b\u5e94\u5546\u4e13\u6709\u534f\u8bae\uff08AWS Kinesis\u3001Azure Event Grid\uff09\u4f20\u8f93\u3002 \u4e00\u4e2a\u64cd\u4f5c\u51fd\u6570\u80fd\u591f\u5904\u7406\u90a3\u4e9b\u5b9a\u4e49\u4e86\u884c\u4e3a\u6216\u5f71\u54cd\u7684\u4e8b\u4ef6\uff0c\u8fd9\u4e9b\u884c\u4e3a\u548c\u6548\u679c\u7531\u6765\u81ea\u7279\u5b9a\u6e90\u7684\u7279\u5b9a\u4e8b\u4ef6\u89e6\u53d1\u800c\u6765\u3002 \u867d\u7136\u8d85\u51fa\u4e86\u89c4\u8303\u7684\u8303\u56f4\uff0c\u4f46\u751f\u6210\u4e8b\u4ef6\u7684\u76ee\u7684\u901a\u5e38\u662f\u8ba9\u5176\u4ed6\u7cfb\u7edf\u80fd\u591f\u8f7b\u677e\u5730\u5bf9\u5b83\u4eec\u65e0\u6cd5\u63a7\u5236\u7684\u6e90\u4e2d\u7684\u66f4\u6539\u505a\u51fa\u53cd\u5e94\u3002 \u6e90\u548c\u64cd\u4f5c\u901a\u5e38\u7531\u4e0d\u540c\u7684\u5f00\u53d1\u4eba\u5458\u6784\u5efa\u3002 \u901a\u5e38\uff0c\u6e90\u662f\u6258\u7ba1\u670d\u52a1\uff0c\u800c\u64cd\u4f5c\u662f serverless \u51fd\u6570\uff08\u5982 AWS Lambda \u6216 Google Cloud Functions\uff09\u4e2d \u7684\u81ea\u5b9a\u4e49\u4ee3\u7801\u3002","title":"Eventing/\u4e8b\u4ef6"},{"location":"primer/#design-goals","text":"CloudEvents \u901a\u5e38\u7528\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\uff0c\u4ee5\u5141\u8bb8\u670d\u52a1\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u677e\u8026\u5408\uff0c\u72ec\u7acb\u90e8\u7f72\uff0c\u65b9\u4fbf\u4e4b\u540e\u8fde\u63a5\u4ee5\u521b\u5efa\u65b0\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 CloudEvents \u89c4\u8303\u7684\u76ee\u6807\u662f\u5b9a\u4e49\u5141\u8bb8\u670d\u52a1\u751f\u4ea7\u6216\u6d88\u8d39\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u7cfb\u7edf\u7684\u4e92\u64cd\u4f5c\u6027\uff0c \u5176\u4e2d\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u53ef\u4ee5\u72ec\u7acb\u5f00\u53d1\u548c\u90e8\u7f72\u3002 \u751f\u4ea7\u8005\u53ef\u4ee5\u5728\u6ca1\u6709\u6d88\u8d39\u8005\u76d1\u542c\u65f6\u5c31\u751f\u6210\u4e8b\u4ef6\uff0c \u6d88\u8d39\u8005\u4e5f\u53ef\u4ee5\u8868\u8fbe\u5bf9\u5c1a\u672a\u751f\u6210\u7684\u4e8b\u4ef6\u6216\u4e8b\u4ef6\u7c7b\u7684\u5174\u8da3\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u9879\u5de5\u4f5c\u4ea7\u751f\u7684\u89c4\u8303\u4fa7\u91cd\u4e8e\u4e8b\u4ef6\u683c\u5f0f\u7684\u4e92\u64cd\u4f5c\u6027 \u4ee5\u53ca\u5b83\u5728\u901a\u8fc7\u5404\u79cd\u534f\u8bae\uff08\u4f8b\u5982 HTTP\uff09\u53d1\u9001\u65f6\u7684\u663e\u793a\u65b9\u5f0f\u3002\u6211\u4eec\u4e0d\u5173\u6ce8\u4e8b\u4ef6\u751f\u4ea7\u8005\u6216\u4e8b\u4ef6\u6d88\u8d39\u8005\u7684\u5904\u7406\u6a21\u578b\u3002 CloudEvents \u7684\u6838\u5fc3\u89c4\u8303\u4e2d\u5b9a\u4e49\u4e86\u4e00\u7ec4\u79f0\u4e4b\u4e3a\u5c5e\u6027\u7684\u5143\u6570\u636e\uff0c \u5b83\u4eec\u63cf\u8ff0\u4e86\u5728\u7cfb\u7edf\u4e4b\u95f4\u4f20\u8f93\u7684\u4e8b\u4ef6\u4ee5\u53ca\u8fd9\u4e9b\u5143\u6570\u636e\u7247\u6bb5\u5e94\u5982\u4f55\u663e\u793a\u5728\u8be5\u6d88\u606f\u4e2d\u3002 \u8fd9\u4e9b\u5143\u6570\u636e\u662f\uff0c\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u9002\u5f53\u7ec4\u4ef6\u5e76\u5e2e\u52a9\u8be5\u7ec4\u4ef6\u6b63\u786e\u5904\u7406\u4e8b\u4ef6\u6240\u9700\u7684\u6700\u5c0f\u4fe1\u606f\u96c6\u3002 \u56e0\u6b64\uff0c\u67d0\u4e9b\u4e8b\u4ef6\u672c\u8eab\u7684\u6570\u636e\u53ef\u80fd\u4f1a\u4f5c\u4e3a CloudEvent \u5c5e\u6027\u96c6\u7684\u4e00\u90e8\u5206\u800c\u88ab\u590d\u5236\uff0c \u4f46\u8fd9\u6837\u505a\u4ec5\u662f\u4e3a\u4e86\u80fd\u591f\u6b63\u786e\u4f20\u9012\u548c\u5904\u7406\u6d88\u606f\u3002\u90a3\u4e9b\u4e0d\u7528\u4e8e\u8be5\u76ee\u7684\u7684\u6570\u636e\u5e94\u653e\u7f6e\u5728\u4e8b\u4ef6\uff08\u6570\u636e\uff09\u672c\u8eab\u4e2d\u3002 \u6b64\u5916\uff0c\u672c\u89c4\u8303\u4e2d\u5047\u8bbe\u534f\u8bae\u5c42\u6240\u9700\u7684\u7528\u6765\u5c06\u6d88\u606f\u4f20\u9012\u5230\u76ee\u6807\u7cfb\u7edf\u7684\u5143\u6570\u636e\u5e94\u5b8c\u5168\u7531\u534f\u8bae\u5904\u7406\uff0c \u56e0\u6b64\u4e0d\u5305\u542b\u5728 CloudEvents \u5c5e\u6027\u4e2d\u3002 \u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u975e\u76ee\u6807 \u90e8\u5206\u3002 \u9664\u4e86\u8fd9\u4e9b\u5c5e\u6027\u7684\u5b9a\u4e49\u4e4b\u5916\uff0c\u89c4\u8303\u8fd8\u63cf\u8ff0\u4e86\u5173\u4e8e\u5982\u4f55\u5e8f\u5217\u5316 \u4e0d\u540c\u683c\u5f0f\uff08\u4f8b\u5982 JSON\uff09\u548c\u534f\u8bae\uff08\u4f8b\u5982 HTTP\u3001AMQP\u3001Kafka\uff09\u7684\u4e8b\u4ef6\u3002 \u4e00\u4e9b\u534f\u8bae\u672c\u8eab\u652f\u6301\u5c06\u591a\u4e2a\u4e8b\u4ef6\u6279\u5904\u7406\u5230\u5355\u4e2a API \u7684\u8c03\u7528\u4e2d\u3002 \u4e3a\u4e86\u63d0\u5347\u7cfb\u7edf\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\uff0c\u662f\u5426\u4ee5\u53ca\u5982\u4f55\u5b9e\u73b0\u6279\u5904\u7406\u5c06\u7531\u534f\u8bae\u81ea\u5df1\u51b3\u5b9a\u3002 \u76f8\u5173\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728\u534f\u8bae\u7ed1\u5b9a\u6216\u534f\u8bae\u89c4\u8303\u4e2d\u627e\u5230\u3002 \u6210\u6279\u7684 CloudEvents \u5e76\u6ca1\u6709\u8bed\u4e49\uff0c\u4e5f\u6ca1\u6709\u6392\u5e8f\u3002 \u4e2d\u95f4\u4eba \u53ef\u4ee5\u6dfb\u52a0\u6216\u5220\u9664\u6279\u5904\u7406\u4ee5\u53ca\u5c06\u4e8b\u4ef6\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u6279\u5904\u7406\u3002 \u4e8b\u4ef6\u7684\u76ee\u7684\u6216\u8bed\u4e49\u542b\u4e49\u8d85\u51fa\u4e86 CloudEvents \u89c4\u8303\u7684\u8303\u56f4\u3002 \u53ea\u8981\u53d1\u9001\u7684\u6d88\u606f\u7b26\u5408\u89c4\u8303\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u4e00\u4e2a\u6709\u6548\u7684 CloudEvent\u3002 \u5f88\u591a\u4eba\u4e0d\u5bb9\u6613\u610f\u8bc6\u5230\u4e00\u4ef6\u4e8b\uff0c\u9519\u8bef\u548c\u5f02\u5e38\u662f\u53ef\u4ee5\u4f5c\u4e3a CloudEvents \u6765\u4f20\u8f93\u7684\u3002 \u63a5\u4e0b\u6765\u5e94\u7531\u4e8b\u4ef6\u751f\u4ea7\u8005\u5b9a\u4e49\u5c06\u4f7f\u7528\u7684 CloudEvents \u5c5e\u6027\u503c\uff0c\u5c31\u50cf\u5b83\u53ef\u80fd\u751f\u6210\u7684\u4efb\u4f55\u5176\u4ed6\u4e8b\u4ef6\u4e00\u6837\u3002 \u7531\u4e8e\u5e76\u975e\u6240\u6709\u4e8b\u4ef6\u751f\u4ea7\u8005\u90fd\u5c06\u5176\u4e8b\u4ef6\u4ee5 CloudEvents \u7684\u5f62\u5f0f\u53d1\u5e03\uff0c \u56e0\u6b64\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u7ec4 \u9002\u914d\u5668 \u6765\u5c55\u793a\u5982\u4f55\u5c06\u4e8b\u4ef6\u4ece\u4e00\u4e9b\u6d41\u884c\u7684\u4e8b\u4ef6\u751f\u4ea7\u8005\u6620\u5c04\u5230 CloudEvents\u3002 \u8fd9\u4e9b\u9002\u914d\u5668\u662f\u975e\u89c4\u8303\u7684\uff0c \u4f46\u5b83\u4eec\u662f\u89c4\u8303\u4f5c\u8005\u5bf9 CloudEvents \u5c5e\u6027\u5982\u4f55\u5728\u5176\u5b83\u751f\u4ea7\u8005\u672c\u5730\u751f\u6210\u4e8b\u4ef6\u5e76\u6620\u5c04\u5230 CloudEvents \u65f6\u7684\u6700\u4f73\u731c\u6d4b\u3002","title":"Design Goals/\u8bbe\u8ba1\u76ee\u6807"},{"location":"primer/#non-goals","text":"\u4ee5\u4e0b\u5185\u5bb9\u4e0d\u5728\u672c\u89c4\u8303\u7684\u8303\u56f4\u4e4b\u5185\uff1a \u51fd\u6570\u7684\u6784\u5efa\u548c\u8c03\u7528\u8fc7\u7a0b \u7279\u5b9a\u8bed\u8a00\u7684\u8fd0\u884c\u65f6 APIs \u9009\u62e9\u5355\u4e00\u8eab\u4efd\u8ba4\u8bc1\u6216\u8bbf\u95ee\u63a7\u5236\u7684\u7cfb\u7edf \u5305\u542b\u534f\u8bae\u7ea7\u8def\u7531\u4fe1\u606f \u4e8b\u4ef6\u6301\u4e45\u5316\u8fc7\u7a0b \u6388\u6743\u3001\u6570\u636e\u5b8c\u6574\u6027\u548c\u4fdd\u5bc6\u673a\u5236 \u5c31\u8fde\u90a3\u4e9b\u521a\u63a5\u89e6 CloudEvents \u6982\u5ff5\u7684\u4eba\u90fd\u4f1a\u5efa\u8bae CloudEvents \u89c4\u8303\u4e0d\u5e94\u5305\u62ec\u534f\u8bae\u7ea7\u8def\u7531\u4fe1\u606f\uff08\u4f8b\u5982\uff0c\u5c06\u4e8b\u4ef6\u53d1\u9001\u5230\u7684\u76ee\u6807\u7684 URL\uff09\u3002 \u7ecf\u8fc7\u6df1\u601d\u719f\u8651\uff0c\u5de5\u4f5c\u7ec4\u5f97\u51fa\u7684\u7ed3\u8bba\u662f\uff0cCloudEvents \u89c4\u8303\u4e2d\u4e0d\u9700\u8981\u8def\u7531\u4fe1\u606f\uff1a \u56e0\u4e3a\u4efb\u4f55\u73b0\u6709\u7684\u534f\u8bae\uff08\u4f8b\u5982 HTTP\u3001MQTT\u3001XMPP \u6216 Pub/Sub \u603b\u7ebf\uff09\u90fd\u5df2\u7ecf\u5b9a\u4e49\u4e86\u8def\u7531\u8bed\u4e49\u3002 \u4f8b\u5982\uff0cCloudEvents HTTP \u7ed1\u5b9a \u89c4\u5b9a\u4e86\u5934\u90e8\u548c\u8bf7\u6c42\u6b63\u6587\u5185\u5bb9\u3002 CloudEvents \u4e0d\u9700\u8981\u5728\u89c4\u8303\u4e2d\u5305\u542b\u76ee\u6807 URL \u5373\u53ef\u4e0e HTTP \u517c\u5bb9\uff1bHTTP \u89c4\u8303\u5df2\u7ecf\u5728 \u8bf7\u6c42\u884c \u4e2d\u5305\u542b\u4e86\u6240\u9700\u7684\u76ee\u6807 URL\u3002 \u8def\u7531\u4fe1\u606f\u4e0d\u4ec5\u662f\u591a\u4f59\u7684\uff0c\u800c\u4e14\u662f\u6709\u5bb3\u7684\u3002 CloudEvents \u5e94\u8be5\u589e\u52a0\u4e92\u64cd\u4f5c\u6027\u5e76\u89e3\u8026\u4e8b\u4ef6\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u3002 \u7981\u6b62\u6765\u81ea\u4e8b\u4ef6\u683c\u5f0f\u7684\u8def\u7531\u4fe1\u606f\u5141\u8bb8\u5c06 CloudEvents \u91cd\u65b0\u4f20\u9001\u5230\u65b0\u7684\u884c\u4e3a\uff0c\u6216\u901a\u8fc7\u5305\u542b\u591a\u4e2a\u901a\u9053\u7684\u590d\u6742\u4e2d\u7ee7\u4f20\u9001\u3002 \u4f8b\u5982\uff0c\u5982\u679c Webhook \u5730\u5740\u4e0d\u53ef\u7528\uff0c\u5219\u7528\u4e8e Webhook \u7684 CloudEvent \u5e94\u53ef\u4f20\u9001\u5230\u6b7b\u4fe1\u961f\u5217\u3002 \u6b7b\u4fe1\u961f\u5217\u5e94\u8be5\u80fd\u591f\u5c06\u4e8b\u4ef6\u4f20\u9001\u7ed9\u539f\u59cb\u4e8b\u4ef6\u53d1\u5c04\u8005\u4ece\u672a\u60f3\u8c61\u8fc7\u7684\u65b0\u7684\u884c\u4e3a\u4e0a\u3002 \u5728\u7cfb\u7edf\u5185\u548c\u8de8\u7cfb\u7edf\u751f\u4ea7\u548c\u6d88\u8d39\u7684 CloudEvent \u80fd\u591f\u89e6\u53d1\u4ea7\u751f\u4ef7\u503c\u7684\u884c\u4e3a\u3002 \u56e0\u6b64\uff0c\u5bf9\u4e8e\u8c03\u8bd5\u6216\u590d\u5236\u7684\u76ee\u7684\u800c\u8a00\uff0c\u5b58\u6863\u548c\u6216\u91cd\u653e\u4e8b\u4ef6\u53ef\u80fd\u5f88\u6709\u4ef7\u503c\u3002 \u4f46\u662f\uff0c\u6301\u4e45\u5316\u4e8b\u4ef6\u4f1a\u5220\u9664\u4f20\u8f93\u671f\u95f4\u53ef\u7528\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u4f8b\u5982\u751f\u4ea7\u8005\u7684\u8eab\u4efd\u548c\u6743\u5229\u3001\u4fdd\u771f\u9a8c\u8bc1\u673a\u5236\u6216\u673a\u5bc6\u6027\u4fdd\u62a4\u3002 \u6b64\u5916\uff0c\u6301\u4e45\u5316\u4f1a\u589e\u52a0\u6ee1\u8db3\u7528\u6237\u9700\u6c42\u7684\u590d\u6742\u6027\u548c\u6311\u6218\u3002 \u4f8b\u5982\uff0c\u51fa\u4e8e\u52a0\u5bc6\u6216\u7b7e\u540d\u76ee\u7684\u91cd\u590d\u4f7f\u7528\u79c1\u94a5\u4f1a\u589e\u52a0\u653b\u51fb\u8005\u53ef\u7528\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u964d\u4f4e\u5b89\u5168\u6027\u3002 \u56e0\u6b64\u6211\u4eec\u63a8\u6d4b\uff0c\u53ef\u4ee5\u5b9a\u4e49\u6709\u52a9\u4e8e\u6ee1\u8db3\u6301\u4e45\u6027\u8981\u6c42\u7684\u5c5e\u6027\uff0c\u4f46\u8fd9\u4e9b\u5c5e\u6027\u53ef\u80fd\u968f\u7740\u884c\u4e1a\u6700\u4f73\u5b9e\u8df5\u548c\u8fdb\u6b65\u800c\u4e0d\u65ad\u53d1\u5c55\u3002 CloudEvents \u89c4\u8303\u76ee\u524d\u4e0d\u5f3a\u5236\u6216\u63d0\u5021\u4efb\u4f55\u6709\u5173\u6388\u6743\u3001\u6570\u636e\u5b8c\u6574\u6027\u548c\u4fdd\u5bc6\u7684\u4e13\u6709\u673a\u5236\u548c\u539f\u5219\uff0c \u56e0\u4e3a\u5f53\u524d\u89c4\u8303\u7684\u76ee\u7684\u4e0d\u662f\u5b9a\u4e49\u6709\u5173 CloudEvents \u7684\u5b89\u5168\u539f\u5219\u3002 \u6bcf\u4e2a\u5b9e\u73b0\u8005\u90fd\u6709\u4e00\u4e2a\u589e\u5f3a\u5176\u5b89\u5168\u6a21\u578b\u7684\u4e0d\u540c\u539f\u5219\u3002 \u6211\u4eec\u628a\u5b83\u7559\u7ed9\u89c4\u8303\u7684\u5b9e\u73b0\u8005\u53bb\u63d0\u4f9b\u989d\u5916\u7684\u7ec6\u8282\u6765\u901a\u8fc7\u6269\u5c55\u5b57\u6bb5\u7684\u65b9\u5f0f\u5f3a\u5316\u4ed6\u4eec\u7684\u5b89\u5168\u6a21\u578b\uff0c \u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u5730\u88ab\u5b9e\u73b0\u8005\u4e3a\u89c4\u8303\u800c\u81ea\u5df1\u5b9e\u73b0\u7684\u7ec4\u4ef6\u6240\u89e3\u91ca\u3002 \u4f46\u662f\uff0c\u5982\u679c\u793e\u533a\u89c2\u5bdf\u5230\u4e00\u79cd\u6269\u5c55\u5b57\u6bb5\u7684\u6a21\u5f0f\uff0c\u4f5c\u4e3a\u5904\u7406\u6570\u636e\u5b8c\u6574\u6027\u4e3b\u9898\u7684\u6807\u51c6\u65b9\u6cd5\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6b64\u7c7b\u6269\u5c55\u5b57\u6bb5\u53ef\u80fd\u88ab\u58f0\u660e\u4e3a\u5bf9 CloudEvent \u89c4\u8303\u7684\u5b98\u65b9\u6269\u5c55\u3002","title":"Non Goals/\u975e\u76ee\u6807"},{"location":"primer/#architecture","text":"CloudEvents \u89c4\u8303\u96c6\u5b9a\u4e49\u4e86\u56db\u79cd\u6709\u52a9\u4e8e\u5f62\u6210\u5206\u5c42\u67b6\u6784\u6a21\u578b\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u534f\u8bae\u5143\u7d20\u3002 \u57fa\u672c\u89c4\u8303 \u5b9a\u4e49\u4e86\u4e00\u4e2a\u62bd\u8c61\u4fe1\u606f\u6a21\u578b\uff0c \u8be5\u6a21\u578b\u7531\u5c5e\u6027\uff08\u952e\u503c\u5bf9\uff09\u548c\u6784\u6210 CloudEvent \u7684\u76f8\u5173\u89c4\u5219\u7ec4\u6210\u3002\u6b64\u89c4\u8303\u5305\u542b\u4e86 \u6838\u5fc3\u5c5e\u6027 \u7684\u5b9a\u4e49\u3002\u6709\u4e9b\u6838\u5fc3\u5c5e\u6027\u5fc5\u987b\u51fa\u73b0\u5728\u6240\u6709\u7684 CloudEvents \u4e2d\uff0c\u6709\u4e9b\u5219\u662f\u53ef\u9009\u7684\u3002 \u6269\u5c55\u5c5e\u6027 \u6dfb\u52a0\u4e86\u7279\u5b9a\u4e8e\u7528\u4f8b\u4e14\u53ef\u80fd\u91cd\u53e0\u7684\u6269\u5c55\u5c5e\u6027\u96c6\u548c\u76f8\u5173\u89c4\u5219\uff0c\u5982\u652f\u6301\u4e0d\u540c\u7684\u8ffd\u8e2a\u6807\u51c6\u7684\u89c4\u5219\u3002 \u4e8b\u4ef6\u683c\u5f0f\u7f16\u7801,\u5982 JSON , \u5b9a\u4e49\u4e86\u57fa\u672c\u89c4\u8303\u7684\u4fe1\u606f\u6a21\u578b\u4e0e\u6240\u9009\u6269\u5c55\u7684\u7f16\u7801\u65b9\u5f0f\uff0c \u4ee5\u5c06\u5176\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f\u534f\u8bae\u7684\u5934\u90e8\u548c\u8d1f\u8f7d\u5143\u7d20\u3002 \u534f\u8bae\u7ed1\u5b9a, \u5982. HTTP \u534f\u8bae\u7ed1\u5b9a , \u5728 HTTP to HTTP \u7684\u60c5\u51b5\u4e0b\uff0c \u5b9a\u4e49\u4e86 CloudEvent \u5982\u4f55\u7ed1\u5b9a\u5230\u5e94\u7528\u7a0b\u5e8f\u534f\u8bae\u7684\u4f20\u8f93\u5c42\u3002 \u534f\u8bae\u7ed1\u5b9a\u4e0d\u9650\u5236\u4f20\u8f93\u5c42\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u8fd9\u610f\u5473\u7740 HTTP \u7ed1\u5b9a\u53ef\u7528\u4e8e\u4efb\u4f55 HTTP \u65b9\u6cd5\u4ee5\u53ca\u8bf7\u6c42\u548c\u54cd\u5e94\u6d88\u606f\u3002 \u4e3a\u4e86\u786e\u4fdd\u66f4\u5e7f\u6cdb\u7684\u4e92\u64cd\u4f5c\u6027\uff0cCloudEvents \u89c4\u8303\u96c6\u4e3a\u4f7f\u7528\u4e13\u6709\u5e94\u7528\u534f\u8bae\u7684\u4e8b\u4ef6\u4f20\u8f93\u63d0\u4f9b\u4e86\u7279\u5b9a\u7ea6\u675f\u3002 HTTP Webhook \u89c4\u8303\u5e76\u975e\u7279\u5b9a\u4e8e CloudEvents\uff0c \u800c\u662f\u53ef\u7528\u4e8e\u5c06\u4efb\u4f55\u7c7b\u578b\u7684\u5355\u5411\u4e8b\u4ef6\u548c\u901a\u77e5\u53d1\u5e03\u5230\u7b26\u5408\u6807\u51c6\u7684 HTTP \u7aef\u70b9\u3002 \u4f46\u662f\uff0c\u7531\u4e8e\u5176\u4ed6\u5730\u65b9\u7f3a\u4e4f\u6b64\u7c7b\u89c4\u8303\uff0c\u56e0\u6b64 CloudEvents \u9700\u8981\u5bf9\u5176\u8fdb\u884c\u5b9a\u4e49\u3002","title":"Architecture/\u67b6\u6784"},{"location":"primer/#interoperability-constraints","text":"\u5982 \u8bbe\u8ba1\u76ee\u6807 \u90e8\u5206\u6240\u8ff0\uff0c\u4e92\u64cd\u4f5c\u6027\u662f\u672c\u89c4\u8303\u7684\u4e00\u4e2a\u5173\u952e\u76ee\u6807\u3002 \u56e0\u6b64\uff0c\u672c\u534f\u8bae\u4e2d\u6709\u5730\u65b9\u88ab\u5efa\u8bae\u6709\u6240\u7ea6\u675f\u6761\u4ef6\u3002 \u4f8b\u5982\uff0c\u5728 \u5927\u5c0f\u9650\u5236 \u90e8\u5206\u63d0\u793a\u4e8b\u4ef6\u5927\u5c0f\u5e94\u8be5\u4e0d\u8d85\u8fc7 64KB\u3002 \u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u8bf8\u5982\u8fd9\u4e9b\u7ea6\u675f\uff0c\u5728\u6ca1\u6709\u901a\u8fc7\u201c\u5fc5\u987b\u201d\u5f3a\u5236\u6267\u884c\u7684\u60c5\u51b5\u4e0b\uff0c \u662f\u5bf9\u589e\u52a0\u591a\u4e2a\u5b9e\u73b0\u548c\u90e8\u7f72\u4e4b\u95f4\u4e92\u64cd\u4f5c\u6027\u7684\u53ef\u80fd\u6027\u7684\u4e00\u79cd\u5efa\u8bae\u3002 \u5177\u4f53\u4f7f\u7528\u89c4\u8303\u53ef\u4ee5\u968f\u610f\u5ffd\u7565\u8fd9\u4e9b\u5efa\u8bae\uff0c \u4f46\u8fd9\u4e9b\u73af\u5883\u6709\u8d23\u4efb\u786e\u4fdd\u6240\u6709\u53c2\u4e0e CloudEvents \u4f20\u8f93\u7684\u7ec4\u4ef6\u80fd\u591f\u8fdc\u79bb\u8fd9\u4e9b\u5efa\u8bae\u7684\u8fb9\u754c\u3002","title":"Interoperability Constraints/\u4e92\u64cd\u4f5c\u6027\u7ea6\u675f\u6761\u4ef6"},{"location":"primer/#protocol-error-handling","text":"CloudEvents \u89c4\u8303\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5e76\u672a\u89c4\u5b9a\u4e0e CloudEvents \u7684\u521b\u5efa\u6216\u5904\u7406\u76f8\u5173\u8054\u7684\u5904\u7406\u6a21\u578b\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u5728\u5904\u7406 CloudEvent \u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef\uff0c \u8bf7\u4f7f\u7528\u6b63\u5e38\u7684\u534f\u8bae\u7ea7\u9519\u8bef\u5904\u7406\u673a\u5236\u8fdb\u884c\u5904\u7406\u3002","title":"Protocol Error Handling/\u534f\u8bae\u9519\u8bef\u5904\u7406"},{"location":"primer/#versioning-of-cloudevents","text":"\u5bf9\u4e8e\u67d0\u4e9b CloudEvents \u5c5e\u6027\uff0c\u7531\u5176\u503c\u5f15\u7528\u7684\u5b9e\u4f53\u6216\u6570\u636e\u6a21\u578b\u53ef\u80fd\u4f1a\u968f\u65f6\u95f4\u53d8\u5316\u3002 CloudEvents \u89c4\u8303\u4e0d\u5f3a\u5236\u8981\u6c42\u8981\u4f7f\u7528\u7684\u7279\u5b9a\u6a21\u5f0f\uff0c\u751a\u81f3\u4e0d\u8981\u6c42\u5fc5\u987b\u8003\u8651\u7528\u5230\u7248\u672c\u63a7\u5236\u3002 \u8fd9\u4e2a\u51b3\u5b9a\u53d6\u51b3\u4e8e\u6bcf\u4e2a\u4e8b\u4ef6\u751f\u4ea7\u8005\u3002 \u7136\u800c\uff0c\u9f13\u52b1\u4e8b\u4ef6\u751f\u4ea7\u8005\u8003\u8651\u4ed6\u4eec\u5982\u4f55\u5728\u4e0d\u7834\u574f\u6d88\u8d39\u8005\u7684\u60c5\u51b5\u4e0b\u53d1\u5c55\u4ed6\u4eec\u7684 scheme\u3002 \u4e24\u4e2a\u5177\u4f53\u7684\u4e0a\u4e0b\u6587\u5c5e\u6027 type \u548c dataschema \u5728\u8fd9\u65b9\u9762\u5c24\u4e3a\u91cd\u8981\uff0c\u4f46\u662f\u9884\u671f\u7528\u6cd5\u6709\u6240\u4e0d\u540c\u3002 \u4e24\u8005\u95f4\u5728\u7248\u672c\u63a7\u5236\u65b9\u9762\u7684\u5dee\u5f02\u5728\u4e0b\u9762\u4ecb\u7ecd\u3002 \u9f13\u52b1\u4e8b\u4ef6\u751f\u4ea7\u8005\u4ece\u4e00\u5f00\u59cb\u5c31\u8003\u8651\u7248\u672c\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u9996\u5148\u58f0\u660e\u4e00\u4e2a\u7279\u5b9a\u7684 CloudEvent \u662f\u201c\u7a33\u5b9a\u7684\u201d\u4e4b\u524d\u3002 \u6240\u9009\u7248\u672c\u63a7\u5236\u65b9\u6848\u7684\u6587\u6863\uff0c\u5305\u62ec\u5176\u80cc\u540e\u7684\u539f\u7406\uff0c\u90fd\u4f1a\u662f\u6d88\u8d39\u8005\u6240\u559c\u6b22\u7684\u3002","title":"Versioning of CloudEvents/\u5c5e\u6027\u7248\u672c\u63a7\u5236"},{"location":"primer/#type","text":"type \u5c5e\u6027\u5e94\u8be5\u662f\u6d88\u8d39\u8005\u8bc6\u522b\u4ed6\u4eec\u6536\u5230\u7684\u4e8b\u4ef6\u7c7b\u578b\u7684\u4e3b\u8981\u65b9\u5f0f\u3002 \u8fd9\u53ef\u4ee5\u901a\u8fc7\u8ba2\u9605\u7279\u5b9a\u7684 CloudEvent \u7c7b\u578b\u6765\u5b9e\u73b0\uff0c\u6216\u8005\u901a\u8fc7\u672c\u5730\u8fc7\u6ee4\u6240\u6709\u6536\u5230\u7684 CloudEvent \u5b9e\u73b0\u3002 \u4f46\u786e\u5b9a\u4e86 CloudEvent \u7c7b\u578b\u7684\u6d88\u8d39\u8005\u901a\u5e38\u4f1a\u671f\u671b\u8be5\u7c7b\u578b\u7684\u6570\u636e \u4ec5\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\uff0c\u9664\u975e\u53e6\u6709\u660e\u786e\u8bf4\u660e\u3002 \u201c\u5411\u540e\u517c\u5bb9\u201d\u7684\u786e\u5207\u542b\u4e49\u5c06\u56e0\u6570\u636e\u5185\u5bb9\u7c7b\u578b\u800c\u5f02\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c type \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u4fdd\u6301\u4e0d\u53d8\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u4e0d\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c type \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u66f4\u6539\u3002 \u6211\u4eec\u9f13\u52b1\u4e8b\u4ef6\u751f\u4ea7\u8005\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\uff08\u53ef\u80fd\u6c38\u8fdc\uff09\u540c\u65f6\u751f\u4ea7\u65e7\u4e8b\u4ef6\u548c\u65b0\u4e8b\u4ef6\uff0c\u4ee5\u907f\u514d\u5e72\u6270\u6d88\u8d39\u8005\u3002 \u5728\u8003\u8651 type \u5c5e\u6027\u7684\u503c\u65f6\uff0c\u4e8b\u4ef6\u751f\u4ea7\u8005\u53ef\u4ee5\u9009\u62e9\u4ed6\u4eec\u5e0c\u671b\u7684\u4efb\u4f55\u7248\u672c\u63a7\u5236\u65b9\u6848\uff0c \u4f8b\u5982\u7248\u672c\u53f7 (v1, v2) \u6216\u65e5\u671f (2018-01-01) \u4f5c\u4e3a\u503c\u7684\u4e00\u90e8\u5206\u3002 \u4ed6\u4eec\u8fd8\u53ef\u80fd\u4f7f\u7528 type \u5c5e\u6027\u6765\u8868\u793a\u7279\u5b9a\u7248\u672c\u5c1a\u672a\u7a33\u5b9a\uff0c\u53ef\u80fd\u4f1a\u7ecf\u5386\u91cd\u5927\u66f4\u6539\u3002 \u6216\u8005\uff0c\u4ed6\u4eec\u53ef\u4ee5\u9009\u62e9\u6839\u672c\u4e0d\u5728\u7c7b\u578b\u503c\u4e2d\u5305\u542b\u7248\u672c\u3002","title":"type \u5c5e\u6027\u5728\u7248\u672c\u63a7\u5236\u65b9\u9762\u7684\u4f5c\u7528"},{"location":"primer/#dataschema","text":"\u6211\u4eec\u9884\u8ba1 dataschema \u5c5e\u6027\u662f\u4fe1\u606f\u6027\u7684\uff0c\u4e3b\u8981\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4f7f\u7528\uff0c\u5e76\u901a\u8fc7\u5de5\u5177\u4f7f\u7528\u65f6\uff0c \u8be5\u5de5\u5177\u80fd\u591f\u901a\u8fc7\u5176\u7406\u89e3\u7684\u6570\u636e\u5185\u5bb9\u7c7b\u578b\u63d0\u4f9b\u4efb\u610f CloudEvents \u7684\u8bca\u65ad\u4fe1\u606f\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c dataschema \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u66f4\u6539\u4ee5\u53cd\u6620\u8fd9\u4e00\u70b9\u3002 \u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u8ba9 URI \u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u4ece\u8be5 URI \u63d0\u4f9b\u7684\u5185\u5bb9\u8981\u66f4\u6539\u4ee5\u53cd\u6620\u66f4\u65b0\u7684\u67b6\u6784\u3002 \u540e\u4e00\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u4e8b\u4ef6\u751f\u4ea7\u8005\u6765\u8bf4\u53ef\u80fd\u66f4\u5bb9\u6613\u5b9e\u73b0\uff0c \u4f46\u5bf9\u4e8e\u5e0c\u671b\u901a\u8fc7 URI \u7f13\u5b58 schema \u5185\u5bb9\u7684\u6d88\u8d39\u8005\u6765\u8bf4\u4e0d\u592a\u65b9\u4fbf\u3002 \u5f53 CloudEvent \u7684\u6570\u636e\u4ee5\u5411\u540e\u4e0d\u517c\u5bb9\u7684\u65b9\u5f0f\u66f4\u6539\u65f6\uff0c dataschema \u5c5e\u6027\u7684\u503c\u901a\u5e38\u5e94\u66f4\u6539\uff0c \u5c31\u50cf\u4e0a\u8ff0\u7684 type \u5c5e\u6027\u7684\u60c5\u51b5\u4e00\u6837\u3002","title":"dataschema \u5c5e\u6027\u5728\u7248\u672c\u63a7\u5236\u65b9\u9762\u7684\u4f5c\u7528"},{"location":"primer/#cloudevent-core-attributes","text":"\u672c\u8282\u4ecb\u7ecd\u4e86\u4e0e CloudEvent \u6838\u5fc3\u5c5e\u6027\u76f8\u5173\u7684\u5176\u5b83\u80cc\u666f\u548c\u8bbe\u8ba1\u8981\u70b9\u3002","title":"CloudEvent Core Attributes/\u6838\u5fc3\u5c5e\u6027"},{"location":"primer/#id","text":"id \u5c5e\u6027\u662f\u4e00\u4e2a\u5728\u540c\u4e00\u4e8b\u4ef6\u6e90\u4e0b\u6240\u6709\u4e8b\u4ef6\u4e2d\u7528\u6765\u6807\u8bc6\u4e8b\u4ef6\u552f\u4e00\u7684\u503c \uff08\u5176\u4e2d\u6bcf\u4e2a\u4e8b\u4ef6\u6e90\u7531\u5176 CloudEvents source \u5c5e\u6027\u552f\u4e00\u6807\u8bc6\uff09\u3002 \u867d\u7136 id \u4f7f\u7528\u7684\u786e\u5207\u503c\u662f\u751f\u4ea7\u8005\u5b9a\u4e49\u7684\uff0c \u4f46\u5fc5\u987b\u8981\u786e\u4fdd\u6765\u81ea\u5355\u4e2a\u4e8b\u4ef6\u6e90\u7684 CloudEvents \u6d88\u8d39\u8005\u4e0d\u4f1a\u6709\u4e24\u4e2a\u4e8b\u4ef6\u5171\u4eab\u76f8\u540c\u7684 id \u503c\u3002 \u6211\u4eec\u5728\u8fd9\u91cc\u9690\u542b\u5730\u58f0\u660e\u6ca1\u6709\u4e24\u4e2a\u4e8b\u4ef6\u5c06\u5171\u4eab\u76f8\u540c\u7684 id \u503c\uff0c\u4f46\u4e0d\u63d0\u4f9b\u5173\u4e8e\u5982\u4f55\u4fdd\u8bc1\u8fd9\u4e00\u70b9\u7684\u89e3\u91ca\uff0c \u56e0\u4e3a\u8fd9\u8d85\u51fa\u4e86\u672c\u89c4\u8303\u7684\u8303\u56f4\u3002 \u552f\u4e00\u7684\u4f8b\u5916\u662f\u5982\u679c\u652f\u6301\u4e8b\u4ef6\u7684\u91cd\u64ad\uff0c\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 id \u6765\u68c0\u6d4b\u8fd9\u4e00\u70b9\u3002 \u7531\u4e8e\u4e00\u6b21\u4e8b\u4ef6\u7684\u53d1\u751f\u53ef\u80fd\u5bfc\u81f4\u751f\u6210\u591a\u4e2a\u4e8b\u4ef6\uff0c \u5728\u6240\u6709\u8fd9\u4e9b\u4e8b\u4ef6\u90fd\u6765\u81ea\u540c\u4e00\u4e8b\u4ef6\u6e90\u7684\u60c5\u51b5\u4e0b\uff0c \u751f\u6210\u7684\u6bcf\u4e2a CloudEvent \u5c06\u5177\u6709\u552f\u4e00\u7684 id \u3002 \u4ee5\u521b\u5efa\u6570\u636e\u5e93\u6761\u76ee\u4e3a\u4f8b\uff0c\u8fd9\u4e00\u4e8b\u4ef6\u7684\u53d1\u751f\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e2a\u7c7b\u578b\u4e3a create \u7684 CloudEvent \u548c\u4e00\u4e2a\u7c7b\u578b\u4e3a write \u7684 CloudEvent\u3002 \u8fd9\u4e24\u4e2a CloudEvents \u5404\u81ea\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ID\u3002 \u5982\u679c\u9700\u8981\u5728\u8fd9\u4e24\u4e2a CloudEvent \u4e4b\u95f4\u5efa\u7acb\u67d0\u79cd\u5173\u8054\u4ee5\u8868\u660e\u5b83\u4eec\u90fd\u4e0e\u540c\u4e00\u4e8b\u4ef6\u76f8\u5173\uff0c \u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 CloudEvent \u4e2d\u7684\u4e00\u4e9b\u9644\u52a0\u6570\u636e\u6765\u5b9e\u73b0\u8be5\u76ee\u7684\u3002 \u4ece\u8fd9\u65b9\u9762\u6765\u770b\uff0c\u867d\u7136\u4e8b\u4ef6\u751f\u4ea7\u8005\u5bf9 id \u7684\u4f7f\u7528\u53ef\u80fd\u662f\u67d0\u4e2a\u968f\u673a\u5b57\u7b26\u4e32\uff0c \u6216\u8005\u5728\u5176\u5b83\u4e0a\u4e0b\u6587\u4e2d\u5177\u6709\u67d0\u79cd\u8bed\u4e49\u7684\u5b57\u7b26\u4e32\uff0c \u4f46\u5bf9\u4e8e\u6b64 CloudEvent \u5c5e\u6027\u800c\u8a00\uff0c\u8fd9\u4e9b\u542b\u4e49\u5e76\u4e0d\u6210\u7acb\uff0c \u56e0\u6b64\u672c\u89c4\u8303\u4e0d\u5efa\u8bae\u5c06 id \u7528\u4e8e\u9664\u4e86\u552f\u4e00\u6027\u68c0\u67e5\u4e4b\u5916\u7684\u5176\u5b83\u76ee\u7684\u3002","title":"id"},{"location":"primer/#cloudevent-attribute-extensions","text":"\u4e3a\u4e86\u5b9e\u73b0\u89c4\u8303\u7684\u8bbe\u8ba1\u76ee\u6807\uff0c \u89c4\u8303\u4f5c\u8005\u5c06\u5c1d\u8bd5\u9650\u5236\u4ed6\u4eec\u5728 CloudEvents \u4e2d\u5b9a\u4e49\u7684\u5143\u6570\u636e\u5c5e\u6027\u7684\u6570\u91cf\u3002 \u4e3a\u6b64\uff0c\u8be5\u9879\u76ee\u5b9a\u4e49\u7684\u5c5e\u6027\u5c06\u5206\u4e3a\u4ee5\u4e0b\u4e24\u7c7b\uff1a \u6838\u5fc3\u5c5e\u6027 \u6269\u5c55\u5c5e\u6027 \u672c\u89c4\u8303\u4e2d\u5b9a\u4e49\u4e86\u6838\u5fc3\u5c5e\u6027\u3002\u6838\u5fc3\u5c5e\u6027\u53c8\u88ab\u5206\u4e3a\u5fc5\u8981\u548c\u53ef\u9009\u4e24\u79cd\u3002 \u6b63\u5982\u7c7b\u522b\u540d\u79f0\u6240\u6697\u793a\u7684\u90a3\u6837\uff0c\u201c\u5fc5\u8981\u201d\u5c5e\u6027\u662f\u5de5\u4f5c\u7ec4\u8ba4\u4e3a\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u5bf9\u6240\u6709\u4e8b\u4ef6\u90fd\u81f3\u5173\u91cd\u8981\u7684\u5c5e\u6027\uff0c \u800c\u201c\u53ef\u9009\u201d\u5c5e\u6027\u5c06\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002 \u5de5\u4f5c\u7ec4\u8003\u8651\u5230\u67d0\u4e9b\u5c5e\u6027\u4e0d\u591f\u5e38\u89c1\u800c\u4e0d\u80fd\u5f52\u5165\u4e0a\u8ff0\u4e24\u4e2a\u7c7b\u522b\uff0c \u4f46\u6b64\u7c7b\u5c5e\u6027\u7684\u826f\u597d\u5b9a\u4e49\u4ecd\u4f1a\u4f7f\u7cfb\u7edf\u95f4\u7684\u4e92\u64cd\u4f5c\u6027\u7ea7\u522b\u53d7\u76ca\uff0c \u56e0\u6b64\u5c06\u8fd9\u4e9b\u5c5e\u6027\u653e\u5165\u4e86\u201c\u6269\u5c55\u201d\u7c7b\u522b\u5e76\u8bb0\u5f55\u5728 \u6269\u5c55\u6587\u6863 \u4e2d\uff0c \u672c\u89c4\u8303\u5b9a\u4e49\u4e86\u8fd9\u4e9b\u6269\u5c55\u5c5e\u6027\u5728 CloudEvent \u4e2d\u7684\u663e\u793a\u65b9\u5f0f\u3002 \u5728\u786e\u5b9a\u63d0\u8bae\u7684\u5c5e\u6027\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u65f6\uff0c \u5de5\u4f5c\u7ec4\u4f7f\u7528\u73b0\u6709\u7684\u7528\u4f8b\u548c\u7528\u6237\u6545\u4e8b\u6765\u89e3\u91ca\u5b83\u4eec\u7684\u57fa\u672c\u539f\u7406\u548c\u9700\u6c42\u3002 \u76f8\u5173\u4fe1\u606f\u5c06\u6dfb\u52a0\u5230\u672c\u6587\u6863\u7684 \u73b0\u6709\u6280\u672f \u90e8\u5206\u3002 CloudEvent \u89c4\u8303\u7684\u6269\u5c55\u5c5e\u6027\u662f\u9700\u8981\u5305\u542b\u7684\u9644\u52a0\u5143\u6570\u636e\uff0c\u5b83\u4eec\u80fd\u786e\u4fdd\u6b63\u786e\u7684\u8def\u7531\u548c\u6b63\u786e\u5904\u7406 CloudEvent\u3002 \u7528\u4e8e\u5176\u5b83\u76ee\u7684\u7684\u9644\u52a0\u5143\u6570\u636e\uff0c \u5373\u90a3\u4e9b\u4e0e\u4e8b\u4ef6\u672c\u8eab\u76f8\u4f46\u5728 CloudEvent \u7684\u4f20\u8f93\u6216\u5904\u7406\u4e2d\u4e0d\u9700\u8981\u7684\u5143\u6570\u636e\uff0c \u5e94\u6539\u4e3a\u653e\u7f6e\u5728\u4e8b\u4ef6 ( data )\u7684\u6269\u5c55\u70b9\u5185\u3002 \u6269\u5c55\u5c5e\u6027\u5e94\u4fdd\u6301\u6700\u5c11\uff0c\u4ee5\u786e\u4fdd CloudEvent \u53ef\u4ee5\u6b63\u786e\u5e8f\u5217\u5316\u548c\u4f20\u8f93\u3002 \u4e8b\u4ef6\u751f\u4ea7\u8005\u5e94\u8be5\u8003\u8651\u5728\u5411 CloudEvent \u6dfb\u52a0\u6269\u5c55\u65f6\u53ef\u80fd\u9047\u5230\u7684\u6280\u672f\u9650\u5236\u3002 \u4f8b\u5982\uff0c HTTP Binary Mode \u4f7f\u7528 HTTP \u5934\u6765\u4f20\u8f93\u5143\u6570\u636e\uff1b \u5927\u591a\u6570 HTTP \u670d\u52a1\u5668\u4f1a\u62d2\u7edd\u5305\u542b\u8fc7\u591a HTTP \u5934\u90e8\u6570\u636e\u7684\u8bf7\u6c42\uff0c\u8981\u6c42\u9650\u5236\u5176\u4f4e\u81f3 8kb\u3002 \u56e0\u6b64\uff0c\u6269\u5c55\u5c5e\u6027\u7684\u5927\u5c0f\u548c\u6570\u91cf\u5e94\u4fdd\u6301\u6700\u5c0f\u3002 \u5982\u679c\u6269\u5c55\u53d8\u5f97\u6d41\u884c\uff0c\u90a3\u4e48\u89c4\u8303\u4f5c\u8005\u53ef\u80fd\u4f1a\u8003\u8651\u5c06\u5176\u4f5c\u4e3a\u6838\u5fc3\u5c5e\u6027\u79fb\u5165\u89c4\u8303\u3002 \u8fd9\u610f\u5473\u7740\u5728\u6b63\u5f0f\u5c06\u65b0\u5c5e\u6027\u6dfb\u52a0\u5230\u89c4\u8303\u4e4b\u524d\uff0c\u6269\u5c55\u673a\u5236/\u8fc7\u7a0b\u53ef\u7528\u4f5c\u5ba1\u67e5\u65b0\u5c5e\u6027\u7684\u4e00\u79cd\u65b9\u5f0f\u3002","title":"CloudEvent Attribute Extensions/\u5c5e\u6027\u6269\u5c55"},{"location":"primer/#json-extensionsjson","text":"\u5982 CloudEvents JSON \u4e8b\u4ef6\u683c\u5f0f \u4e2d \u5c5e\u6027 \u90e8\u5206\u6240\u8ff0\uff0c CloudEvent \u6269\u5c55\u5c5e\u6027\u4e0e\u5df2\u5b9a\u4e49\u5c5e\u6027(\u5fc5\u8981\u5c5e\u6027\u3001\u53ef\u9009\u5c5e\u6027)\u5728\u5e8f\u5217\u5316\u65f6\u5904\u4e8e\u540c\u4e00\u7b49\u7ea7 - \u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u90fd\u662f JSON \u5bf9\u8c61\u7684\u9876\u5c42\u5c5e\u6027\u3002 CloudEvent \u7684\u4f5c\u8005\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u8003\u8651\u6240\u6709\u9009\u9879\uff0c\u5e76\u8ba4\u4e3a\u8fd9\u662f\u6700\u597d\u7684\u9009\u62e9\u3002 \u7406\u7531\u5982\u4e0b\uff1a \u7531\u4e8e CloudEvents \u89c4\u8303\u9075\u5faa semver \uff0c \u8fd9\u610f\u5473\u7740\u53ea\u8981\u65b0\u5c5e\u6027\u662f\u53ef\u9009\u5c5e\u6027\uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u6838\u5fc3\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\u5b9a\u4e49\uff0c\u800c\u65e0\u9700\u66f4\u6539\u5f53\u524d\u4e3b\u8981\u7248\u672c\u3002 \u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u8bf7\u8003\u8651\u73b0\u6709\u6d88\u8d39\u8005\u5c06\u5982\u4f55\u4f7f\u7528\u65b0\u7684\uff08\u672a\u77e5\u7684\uff09\u9876\u7ea7\u5c5e\u6027\u3002 \u867d\u7136\u6d88\u8d39\u8005\u53ef\u4ee5\u968f\u610f\u5ffd\u7565\u5b83\uff0c\u56e0\u4e3a\u5b83\u662f\u53ef\u9009\u7684\uff0c \u4f46\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u5c5e\u6027\u4ecd\u7136\u5e0c\u671b\u5411\u63a5\u6536\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u516c\u5f00\u3002 \u8fd9\u53ef\u80fd\u5bfc\u81f4\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728\u57fa\u7840\u8bbe\u65bd\u4e0d\u652f\u6301\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u8fd9\u4e9b\u5c5e\u6027\u3002 \u8fd9\u610f\u5473\u7740\u672a\u77e5\u7684\u9876\u7ea7\u5c5e\u6027\uff08\u65e0\u8bba\u662f\u8c01\u5b9a\u4e49\u7684\u2014\u2014\u89c4\u8303\u7684\u672a\u6765\u7248\u672c\u6216\u4e8b\u4ef6\u751f\u4ea7\u8005\uff09\u53ef\u80fd\u4e0d\u4f1a\u88ab\u5ffd\u7565\u3002 \u56e0\u6b64\uff0c\u867d\u7136\u5176\u5b83\u4e00\u4e9b\u89c4\u8303\u5b9a\u4e49\u4e86\u653e\u7f6e\u6269\u5c55\u7684\u7279\u5b9a\u5c5e\u6027\uff08\u4f8b\u5982\u9876\u7ea7 extensions \u5c5e\u6027\uff09\uff0c \u4f46\u4f5c\u8005\u8ba4\u4e3a\u5728\u4f20\u5165\u4e8b\u4ef6\u4e2d\u5177\u6709\u4e24\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u7684\u672a\u77e5\u5c5e\u6027\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e92\u64cd\u4f5c\u6027\u95ee\u9898\u548c\u5f00\u53d1\u4eba\u5458\u7684\u6df7\u6dc6\u3002 \u6269\u5c55\u5c5e\u6027\u901a\u5e38\u7528\u4e8e\u6d4b\u8bd5\u90a3\u4e9b\u88ab\u89c4\u8303\u6b63\u5f0f\u91c7\u7528\u4e4b\u524d\u7684\u6f5c\u5728\u5c5e\u6027\u3002 \u5982\u679c\u6709\u4e00\u4e2a extensions \u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u8fd9\u4e2a\u65b0\u5c5e\u6027\u5df2\u7ecf\u88ab\u5e8f\u5217\u5316\uff0c \u90a3\u4e48\u5982\u679c\u8be5\u5c5e\u6027\u88ab\u6838\u5fc3\u89c4\u8303\u91c7\u7528\uff0c\u5b83\u5c06\u4ece extensions \u5c5e\u6027\u63d0\u5347\uff08\u4ece\u5e8f\u5217\u5316\u7684\u89d2\u5ea6\uff09\u4e3a\u9876\u7ea7\u5c5e\u6027\u3002 \u5982\u679c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u65b0\u5c5e\u6027\u662f\u53ef\u9009\u7684\uff0c\u90a3\u4e48\u5f53\u5b83\u88ab\u6838\u5fc3\u89c4\u8303\u91c7\u7528\u65f6\uff0c \u5b83\u53ea\u662f\u4e00\u4e2a\u5c0f\u7248\u672c\u589e\u91cf\uff0c\u6240\u6709\u73b0\u6709\u7684\u6d88\u8d39\u8005\u4ecd\u7136\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u3002 \u4f46\u662f\uff0c\u6d88\u8d39\u8005\u5c06\u4e0d\u77e5\u9053\u6b64\u5c5e\u6027\u5c06\u51fa\u73b0\u5728\u4f55\u5904 - \u5728\u6269\u5c55\u5c5e\u6027\u4e2d\u8fd8\u662f\u4f5c\u4e3a\u9876\u7ea7\u5c5e\u6027\u3002 \u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u53ef\u80fd\u9700\u8981\u540c\u65f6\u67e5\u770b\u4e24\u4e2a\u5730\u65b9\u3002 \u5982\u679c\u5c5e\u6027\u51fa\u73b0\u5728\u4e24\u4e2a\u5730\u65b9\u4f46\u5177\u6709\u4e0d\u540c\u7684\u503c\u600e\u4e48\u529e\uff1f \u751f\u4ea7\u8005\u662f\u5426\u9700\u8981\u5c06\u5b83\u653e\u5728\u4e24\u4e2a\u5730\u65b9\uff0c\u56e0\u4e3a\u4ed6\u4eec\u53ef\u80fd\u540c\u65f6\u6709\u65b0\u3001\u8001\u6d88\u8d39\u8005\uff1f \u867d\u7136\u53ef\u4ee5\u4e3a\u5982\u4f55\u89e3\u51b3\u51fa\u73b0\u7684\u6bcf\u4e2a\u6f5c\u5728\u95ee\u9898\u800c\u5236\u5b9a\u660e\u786e\u7684\u89c4\u5219\uff0c \u4f46\u4f5c\u8005\u8ba4\u4e3a\u4e00\u4e2a\u907f\u514d\u8fd9\u4e9b\u95ee\u9898\u7684\u66f4\u597d\u7684\u529e\u6cd5\u662f\u5728\u5e8f\u5217\u5316\u4e2d\u53ea\u6709\u4e00\u4e2a\u4f4d\u7f6e\u6765\u653e\u7f6e\u672a\u77e5\u7684\u751a\u81f3\u662f\u65b0\u7684\u5c5e\u6027\u3002 \u4f5c\u8005\u8fd8\u6ce8\u610f\u5230 HTTP \u89c4\u8303\u73b0\u5728\u9075\u5faa\u7c7b\u4f3c\u7684\u6a21\u5f0f\uff0c\u4e0d\u518d\u5efa\u8bae\u6269\u5c55 HTTP \u5934\u90e8\u4ee5 X- \u4e3a\u524d\u7f00\u3002","title":"JSON Extensions/JSON \u6269\u5c55"},{"location":"primer/#creating-cloudevents-cloudevents","text":"CloudEvents \u89c4\u8303\u6709\u610f\u907f\u514d\u5c06 CloudEvents \u7684\u521b\u5efa\u65b9\u5f0f\u8bbe\u8ba1\u7684\u8fc7\u4e8e\u6b7b\u677f\u3002 \u4f8b\u5982\uff0c\u5b83\u4e0d\u5047\u5b9a\u539f\u59cb\u4e8b\u4ef6\u6e90\u5fc5\u987b\u662f\u8be5\u4e8b\u4ef6\u751f\u4ea7\u5bf9\u5e94 CloudEvent \u7684\u540c\u4e00\u5b9e\u4f53\u3002 \u8fd9\u5141\u8bb8\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002 \u4f46\u662f\uff0c\u5bf9\u4e8e\u89c4\u8303\u7684\u5b9e\u73b0\u8005\u6765\u8bf4\uff0c\u7406\u89e3\u89c4\u8303\u4f5c\u8005\u5fc3\u4e2d\u7684\u671f\u671b\u8fd8\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u56e0\u4e3a\u8fd9\u5c06\u6709\u52a9\u4e8e\u786e\u4fdd\u4e92\u64cd\u4f5c\u6027\u548c\u4e00\u81f4\u6027\u3002 \u5982\u4e0a\u6240\u8ff0\uff0c\u751f\u6210\u521d\u59cb\u4e8b\u4ef6\u7684\u5b9e\u4f53\u662f\u5426\u4e0e\u521b\u5efa\u76f8\u5e94 CloudEvent \u7684\u5b9e\u4f53\u76f8\u540c\u662f\u7531\u5b9e\u73b0\u51b3\u5b9a\u7684\u3002 \u4f46\u662f\uff0c\u5f53\u6784\u5efa/\u586b\u5145 CloudEvents \u5c5e\u6027\u7684\u5b9e\u4f53\u4ee3\u8868\u4e8b\u4ef6\u6e90\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u8fd9\u4e9b\u5c5e\u6027\u7684\u503c\u662f\u7528\u6765\u63cf\u8ff0\u4e8b\u4ef6\u6216\u4e8b\u4ef6\u6e90\uff0c \u800c\u4e0d\u662f\u8ba1\u7b97 CloudEvent \u5c5e\u6027\u503c\u7684\u5b9e\u4f53\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u4e8b\u4ef6\u6e90\u548c CloudEvents \u751f\u4ea7\u8005\u4e4b\u95f4\u7684\u5206\u79bb\u5bf9\u4e8b\u4ef6\u4f7f\u7528\u8005\u6ca1\u6709\u5b9e\u8d28\u6027\u610f\u4e49\u65f6\uff0c \u89c4\u8303\u5b9a\u4e49\u7684\u5c5e\u6027\u901a\u5e38\u4e0d\u4f1a\u5305\u542b\u4efb\u4f55\u503c\u6765\u6307\u793a\u8fd9\u79cd\u804c\u8d23\u5206\u79bb\u3002 \u8fd9\u5e76\u4e0d\u662f\u8bf4 CloudEvents \u751f\u4ea7\u8005\u4e0d\u80fd\u5411 CloudEvent \u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\uff0c \u4f46\u8fd9\u4e9b\u5c5e\u6027\u8d85\u51fa\u4e86\u89c4\u8303\u7684\u4e92\u64cd\u4f5c\u6027\u5b9a\u4e49\u5c5e\u6027\u7684\u8303\u56f4\u3002 \u8fd9\u7c7b\u4f3c\u4e8e HTTP \u4ee3\u7406\u901a\u5e38\u5982\u4f55\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u5bf9\u4f20\u5165\u6d88\u606f\u7684\u660e\u786e\u5b9a\u4e49\u7684 HTTP \u5934\u90e8\u7684\u66f4\u6539\uff0c \u4f46\u5b83\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u5934\u90e8\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e9b\u7279\u5b9a\u4ee3\u7406\u7684\u5143\u6570\u636e\u3002 \u8fd8\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u539f\u59cb\u4e8b\u4ef6\u6e90\u548c CloudEvents \u751f\u4ea7\u8005\u4e4b\u95f4\u7684\u8fd9\u79cd\u5206\u79bb\u53ef\u5927\u53ef\u5c0f\u3002 \u610f\u601d\u662f\uff0c\u5373\u4f7f CloudEvent \u751f\u4ea7\u8005\u4e0d\u662f\u539f\u59cb\u4e8b\u4ef6\u6e90\u751f\u6001\u7cfb\u7edf\u7684\u4e00\u90e8\u5206\uff0c \u5982\u679c\u5b83\u4ee3\u8868\u4e8b\u4ef6\u6e90\u884c\u4e8b\uff0c\u5e76\u4e14\u5b83\u5728\u4e8b\u4ef6\u6d41\u4e2d\u7684\u5b58\u5728\u5bf9\u4e8b\u4ef6\u6d88\u8d39\u8005\u6ca1\u6709\u610f\u4e49\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6307\u5bfc\u4ecd\u7136\u9002\u7528\u3002 \u5f53\u5b9e\u4f53\u540c\u65f6\u5145\u5f53 CloudEvents \u7684\u63a5\u6536\u8005\u548c\u53d1\u9001\u8005\u4ee5\u8f6c\u53d1\u6216\u8f6c\u6362\u4f20\u5165\u4e8b\u4ef6\u65f6\uff0c \u51fa\u7ad9 CloudEvent \u4e0e\u5165\u7ad9 CloudEvent \u5339\u914d\u7684\u7a0b\u5ea6\u5c06\u6839\u636e\u8be5\u5b9e\u4f53\u7684\u5904\u7406\u8bed\u4e49\u800c\u6709\u6240\u4e0d\u540c\u3002 \u5728\u5b83\u5145\u5f53\u4ee3\u7406\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u53ea\u662f\u5c06 CloudEvents \u8f6c\u53d1\u7ed9\u53e6\u4e00\u4e2a\u4e8b\u4ef6\u6d88\u8d39\u8005\uff0c \u90a3\u4e48\u51fa\u7ad9 CloudEvent \u901a\u5e38\u770b\u8d77\u6765\u4e0e\u5165\u7ad9 CloudEvent \u5c31\u89c4\u8303\u5b9a\u4e49\u7684\u5c5e\u6027\u76f8\u540c \u8bf7\u53c2\u9605\u4e0a\u4e00\u6bb5\u6709\u5173\u6dfb\u52a0\u5176\u4ed6\u5c5e\u6027\u7684\u5185\u5bb9\u3002 \u4f46\u662f\uff0c\u5982\u679c\u6b64\u5b9e\u4f53\u6b63\u5728\u6267\u884c CloudEvent \u7684\u67d0\u79cd\u7c7b\u578b\u7684\u8bed\u4e49\u5904\u7406\uff0c \u901a\u5e38\u4f1a\u5bfc\u81f4 data \u5c5e\u6027\u503c\u53d1\u751f\u66f4\u6539\uff0c \u5219\u53ef\u80fd\u9700\u8981\u5c06\u5176\u89c6\u4e3a\u4e0e\u539f\u59cb\u4e8b\u4ef6\u6e90\u4e0d\u540c\u7684\u201c\u4e8b\u4ef6\u6e90\u201d\u3002 \u56e0\u6b64\uff0c\u4e0e\u4e8b\u4ef6\u751f\u4ea7\u8005\u76f8\u5173\u7684 CloudEvents \u5c5e\u6027\uff08\u4f8b\u5982 source and id \uff09 \u5c06\u4ece\u4f20\u5165\u7684 CloudEvent \u4e2d\u66f4\u6539\u3002 \u53ef\u80fd\u5b58\u5728\u9700\u8981\u521b\u5efa\u5305\u542b\u53e6\u4e00\u4e2a CloudEvent \u7684 CloudEvent \u7684\u7279\u6b8a\u60c5\u51b5\u3002 \u867d\u7136\u89c4\u8303\u6ca1\u6709\u660e\u786e\u5b9a\u4e49\u5d4c\u5957\uff0c\u4f46\u5b83\u662f\u53ef\u80fd\u7684\u3002 \u867d\u7136\u5185\u90e8\u4e8b\u4ef6\u5c06\u59cb\u7ec8\u4ee5 \u72ec\u7acb\u7684\u4e8b\u4ef6\u683c\u5f0f \u7f16\u7801\uff0c \u4f46\u5916\u90e8\u4e8b\u4ef6\u53ef\u80fd\u662f\u4e8c\u8fdb\u5236\u6216\u7ed3\u6784\u5316\u6a21\u5f0f\u7684\u3002 \u5916\u90e8\u4e8b\u4ef6\u7684 datacontenttype \u5c5e\u6027\u4e0d\u5f97\u8bbe\u7f6e\u4e3a application/cloudevents+json \u6216\u4efb\u4f55\u5176\u5b83\u7528\u4e8e\u8868\u793a\u4f7f\u7528\u7ed3\u6784\u5316\u6a21\u5f0f\u7684\u5a92\u4f53\u7c7b\u578b\u3002 \u4e8b\u4ef6\u5d4c\u5957\u7684\u6b63\u786e\u793a\u4f8b\u662f\uff1a Content-Type: application/json ce-specversion: 1.0 ce-type: myevent ce-id: 1234-1234-1234 ce-source: example.com { \"specversion\": \"1.0\", \"type\": \"coolevent\", \"id\": \"xxxx-xxxx-xxxx\", \"source\": \"bigco.com\", \"data\": { ... } }","title":"Creating CloudEvents/\u751f\u4ea7 CloudEvents"},{"location":"primer/#qualifying-protocols-and-encodings","text":"\u6b63\u5982\u89c4\u8303\u4e2d\u6240\u8868\u8fbe\u7684\uff0cCloudEvents \u5de5\u4f5c\u7684\u660e\u786e\u76ee\u6807\u662f \u201c\u4ee5\u901a\u7528\u65b9\u5f0f\u63cf\u8ff0\u4e8b\u4ef6\u6570\u636e\u201d\u4e14 \u201c\u5b9a\u4e49\u5141\u8bb8\u670d\u52a1\u4ea7\u751f\u6216\u6d88\u8d39\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u7cfb\u7edf\u7684\u4e92\u64cd\u4f5c\u6027\uff0c\u5176\u4e2d\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u53ef\u4ee5\u88ab\u72ec\u7acb\u5f00\u53d1\u548c\u90e8\u7f72\u201d\u3002 \u8fd9\u79cd\u4e92\u64cd\u4f5c\u6027\u7684\u57fa\u7840\u662f\u5f00\u653e\u7684\u6570\u636e\u683c\u5f0f\u548c\u534f\u8bae\uff0c CloudEvents \u65e8\u5728\u63d0\u4f9b\u8fd9\u79cd\u5f00\u653e\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5e76\u5c06\u5176\u6570\u636e\u683c\u5f0f\u6620\u5c04\u5230\u5e38\u7528\u534f\u8bae\u548c\u5e38\u7528\u7f16\u7801\u4e0a\u3002 \u867d\u7136\u6bcf\u4e2a\u8f6f\u4ef6\u6216\u670d\u52a1\u4ea7\u54c1\u548c\u9879\u76ee\u90fd\u53ef\u4ee5\u81ea\u5df1\u9009\u62e9\u81ea\u5df1\u559c\u6b22\u7684\u901a\u4fe1\u5f62\u5f0f\uff0c \u4f46\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u79cd\u4ea7\u54c1\u6216\u9879\u76ee\u79c1\u6709\u7684\u4e13\u6709\u534f\u8bae\u65e0\u6cd5\u8fdb\u4e00\u6b65\u5b9e\u73b0\u8de8\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u5e7f\u6cdb\u4e92\u64cd\u4f5c\u6027\u7684\u76ee\u6807\u3002 \u7279\u522b\u662f\u5728\u6d88\u606f\u4f20\u9012\u548c\u4e8b\u4ef6\u5904\u7406\u9886\u57df\uff0c\u8be5\u884c\u4e1a\u5728\u8fc7\u53bb\u5341\u5e74\u4e2d\u5f00\u53d1\u51fa\u4e86\u5f3a\u5927\u4e14\u53d7\u5230\u5e7f\u6cdb\u652f\u6301\u7684\u534f\u8bae \u4f8b\u5982 HTTP 1.1 \u548c HTTP/2 \u4ee5\u53ca WebSockets \u6216 Web \u4e0a\u7684\u4e8b\u4ef6\uff0c\u6216\u8005 MQTT \u548c AMQP \u7528\u4e8e\u9762\u5411\u8fde\u63a5\u7684\u6d88\u606f\u4f20\u9012\u548c\u9065\u6d4b\u4f20\u8f93\u7684\u534f\u8bae\u3002 \u4e00\u4e9b\u5e7f\u6cdb\u4f7f\u7528\u7684\u534f\u8bae\u5df2\u7ecf\u6210\u4e3a\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\uff0c\u8fd9\u4e9b\u534f\u8bae\u6765\u81ea\u4e09\u4e2a\u6216\u66f4\u591a\u516c\u53f8\u7684\u9876\u7ea7\u8d22\u56e2\u6253\u9020\u7684\u5f3a\u5927\u751f\u6001\u7cfb\u7edf\uff0c \u8fd8\u6709\u4e00\u4e9b\u6765\u81ea\u5355\u4e2a\u516c\u53f8\u53d1\u5e03\u7684\u5f3a\u5927\u9879\u76ee\u751f\u6001\u7cfb\u7edf\uff0c\u5728\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u4e0b\u90fd\u4e0e\u524d\u9762\u63d0\u5230\u7684\u6807\u51c6\u6808\u7684\u6f14\u53d8\u76f8\u4e00\u81f4\u3002 CloudEvents \u7684\u52aa\u529b\u4e0d\u5e94\u6210\u4e3a\u8ba4\u53ef\u6216\u63a8\u5e7f\u9879\u76ee\u6216\u4ea7\u54c1\u4e13\u6709\u534f\u8bae\u7684\u5de5\u5177\uff0c \u56e0\u4e3a\u8fd9\u4e0e CloudEvents \u7684\u539f\u59cb\u76ee\u6807\u80cc\u9053\u800c\u9a70\u3002 \u8981\u4f7f\u534f\u8bae\u6216\u7f16\u7801\u7b26\u5408\u6838\u5fc3 CloudEvents \u4e8b\u4ef6\u683c\u5f0f\u6216\u534f\u8bae\u7ed1\u5b9a\u7684\u6761\u4ef6\uff0c\u5b83\u5fc5\u987b\u5c5e\u4e8e\u4ee5\u4e0b\u4efb\u4e00\u7c7b\u522b\uff1a \u8be5\u534f\u8bae\u5177\u6709\u5e7f\u6cdb\u8ba4\u53ef\u7684\u591a\u4f9b\u5e94\u5546\u534f\u8bae\u6807\u51c6\u5316\u673a\u6784\uff08\u4f8b\u5982 W3C\u3001IETF\u3001OASIS\u3001ISO\uff09\u7684\u6b63\u5f0f\u6807\u51c6\u5730\u4f4d \u8be5\u534f\u8bae\u5728\u5176\u751f\u6001\u7cfb\u7edf\u7c7b\u522b\u4e2d\u5177\u6709\u201c\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u201d\u5730\u4f4d\u3002 \u8fd9\u610f\u5473\u7740\u5b83\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u751a\u81f3\u88ab\u8ba4\u4e3a\u662f\u7ed9\u5b9a\u5e94\u7528\u7a0b\u5e8f\u7684\u6807\u51c6\u3002 \u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4f9b\u5e94\u5546\u4e2d\u7acb\u7684\u5f00\u6e90\u7ec4\u7ec7\uff08\u4f8b\u5982 Apache\u3001Eclipse\u3001CNCF\u3001.NET \u57fa\u91d1\u4f1a\uff09\u7684\u4fdd\u62a4\u4f1e\u4e0b \u770b\u5230\u81f3\u5c11\u4e00\u4e2a\u5f00\u6e90\u5b9e\u73b0\uff0c \u5e76\u4e14\u81f3\u5c11\u6709\u5341\u51e0\u4e2a\u72ec\u7acb\u4f9b\u5e94\u5546\u5728\u4ed6\u4eec\u7684\u4ea7\u54c1\u4e2d\u4f7f\u7528\u5b83\u7684\u4ea7\u54c1\u6216\u670d\u52a1\u3002 \u9664\u4e86\u6b63\u5f0f\u72b6\u6001\u4e4b\u5916\uff0c\u534f\u8bae\u6216\u7f16\u7801\u662f\u5426\u7b26\u5408\u6838\u5fc3 CloudEvents \u4e8b\u4ef6\u683c\u5f0f\u6216\u534f\u8bae\u7ed1\u5b9a\u7684\u4e00\u4e2a\u5173\u952e\u6807\u51c6\u662f\uff0c \u8be5\u7ec4\u7ec7\u662f\u5426\u8ba4\u4e3a\u534f\u8bae\u6216\u7f16\u7801\u51fa\u73b0\u540e\uff0c\u8be5\u89c4\u8303\u5bf9\u4e0e\u4ea7\u54c1\u6216\u9879\u76ee\u65e0\u5173\u7684\u4efb\u4f55\u4e00\u65b9\u5177\u6709\u6301\u7eed\u7684\u5b9e\u9645\u5229\u76ca\u3002 \u5bf9\u6b64\u7684\u57fa\u672c\u8981\u6c42\u662f\u534f\u8bae\u6216\u7f16\u7801\u7684\u5b9a\u4e49\u65b9\u5f0f\u5141\u8bb8\u72ec\u7acb\u4e8e\u4ea7\u54c1\u6216\u9879\u76ee\u4ee3\u7801\u7684\u66ff\u4ee3\u5b9e\u73b0\u3002 \u6b22\u8fce\u5c06 CloudEvents \u7684\u6240\u6709\u5176\u4ed6\u534f\u8bae\u548c\u7f16\u7801\u683c\u5f0f \u5305\u542b\u5728\u6307\u5411\u76f8\u5e94\u9879\u76ee\u81ea\u5df1\u7684\u516c\u5171\u4ed3\u5e93\uff0c\u6216\u7ad9\u70b9\u4e2d\u7684 CloudEvents binding \u4fe1\u606f\u7684\u5217\u8868\u4e2d\u3002","title":"Qualifying Protocols and Encodings/\u5408\u7406\u5316\u534f\u8bae\u4e0e\u7f16\u7801"},{"location":"primer/#proprietary-protocols-and-encodings","text":"\u4e3a\u4e86\u9f13\u52b1\u66f4\u591a\u4eba\u91c7\u7528 CloudEvents\uff0c\u672c\u4ed3\u5e93\u5c06\u81ea\u52a8\u6536\u96c6\u4e13\u6709\u534f\u8bae\u548c\u7f16\u7801\u3002 \u672c\u4ed3\u5e93\u7684\u7ef4\u62a4\u4eba\u5458\u4e0d\u8d1f\u8d23\u521b\u5efa\u3001\u7ef4\u62a4\u6216\u901a\u77e5\u4e13\u6709\u89c4\u8303\u7684\u7ef4\u62a4\u4eba\u5458\u6709\u5173\u4e13\u6709\u89c4\u8303\u548c CloudEvents \u89c4\u8303\u95f4\u7684\u504f\u5dee\u3002 \u4e13\u6709\u89c4\u8303\u5c06\u6258\u7ba1\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u4ed3\u5e93\u6216\u6587\u6863\u7ad9\u70b9\u4e2d\uff0c\u5e76\u8bb0\u5f55\u5728 \u4e13\u6709\u89c4\u8303 \u6587\u4ef6\u4e2d\u3002 \u4e13\u6709\u89c4\u8303\u5e94\u9075\u5faa\u4e0e\u6838\u5fc3\u534f\u8bae\u548c\u7f16\u7801\u76f8\u5173\u7684\u5176\u4ed6\u89c4\u8303\u76f8\u540c\u7684\u683c\u5f0f\u3002 \u4e13\u6709\u89c4\u8303\u5c06\u6bd4\u6838\u5fc3\u89c4\u8303\u53d7\u5230\u66f4\u5c11\u7684\u5ba1\u67e5\uff0c\u5e76\u4e14\u968f\u7740 CloudEvents \u89c4\u8303\u7684\u53d1\u5c55\uff0c \u76f8\u5e94\u534f\u8bae\u548c\u7f16\u7801\u7684\u7ef4\u62a4\u8005\u6709\u8d23\u4efb\u4f7f\u89c4\u8303\u4e0e CloudEvents \u89c4\u8303\u4fdd\u6301\u540c\u6b65\u3002 \u5982\u679c\u4e13\u6709\u89c4\u8303\u8fc7\u65f6\u592a\u591a\uff0cCloudEvents \u53ef\u80fd\u4f1a\u5c06\u6307\u5411\u8be5\u89c4\u8303\u7684\u94fe\u63a5\u6807\u8bb0\u4e3a\u5df2\u5f03\u7528\u6216\u5c06\u5176\u5220\u9664\u3002 \u5982\u679c\u4e3a\u540c\u4e00\u4e2a\u534f\u8bae\u521b\u5efa\u4e86\u591a\u4e2a\u4e0d\u517c\u5bb9\u7684\u89c4\u8303\uff0c\u5b58\u50a8\u5e93\u7ef4\u62a4\u8005\u5c06\u4e0d\u77e5\u9053\u54ea\u4e2a\u89c4\u8303\u662f\u6b63\u786e\u7684\uff0c\u5e76\u5217\u51fa\u6240\u6709\u89c4\u8303\u7684\u94fe\u63a5\u3002","title":"Proprietary Protocols and Encodings/\u4e13\u6709\u7684\u534f\u8bae\u4e0e\u7f16\u7801"},{"location":"primer/#prior-art","text":"\u672c\u8282\u4ecb\u7ecd\u4e86\u5de5\u4f5c\u7ec4\u5728 CloudEvent \u89c4\u8303\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u7684\u4e00\u4e9b\u8f93\u5165\u6750\u6599\u3002","title":"Prior Art/\u73b0\u6709\u6280\u672f"},{"location":"primer/#roles","text":"\u4e0b\u9762\u5217\u4e3e\u4e86\u53ef\u80fd\u6d89\u53ca\u4e8b\u4ef6\u7684\u4ea7\u751f\u3001\u7ba1\u7406\u6216\u6d88\u8d39\u7684\u5404\u79cd\u53c2\u4e0e\u8005\u548c\u573a\u666f\u3002 \u5728\u8fd9\u4e9b\u4e2d\uff0c\u4e8b\u4ef6\u751f\u4ea7\u8005\u548c\u4e8b\u4ef6\u6d88\u8d39\u8005\u7684\u89d2\u8272\u4fdd\u6301\u4e0d\u540c\u3002 \u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587\u59cb\u7ec8\u53ef\u4ee5\u540c\u65f6\u627f\u62c5\u591a\u4e2a\u89d2\u8272\uff0c\u5305\u62ec\u65e2\u662f\u4e8b\u4ef6\u7684\u751f\u4ea7\u8005\u53c8\u662f\u4e8b\u4ef6\u7684\u6d88\u8d39\u8005\u3002 \u5e94\u7528\u7a0b\u5e8f\u751f\u6210\u4f9b\u4ed6\u4eba\u4f7f\u7528\u7684\u4e8b\u4ef6\uff0c \u5982\u4e3a\u6d88\u8d39\u8005\u63d0\u4f9b\u6709\u5173\u7ec8\u7aef\u7528\u6237\u6d3b\u52a8\u3001\u72b6\u6001\u53d8\u5316\u6216\u73af\u5883\u89c2\u5bdf\u7684\u89c1\u89e3\uff0c \u6216\u5141\u8bb8\u901a\u8fc7\u4e8b\u4ef6\u9a71\u52a8\u7684\u6269\u5c55\u6765\u8865\u5145\u5e94\u7528\u7a0b\u5e8f\u7684\u529f\u80fd\u3002 \u751f\u4ea7\u7684\u4e8b\u4ef6\u901a\u5e38\u4e0e\u4e0a\u4e0b\u6587\u6216\u751f\u4ea7\u8005\u9009\u62e9\u7684\u5206\u7c7b\u76f8\u5173\u3002 \u4f8b\u5982\uff0c\u623f\u95f4\u4e2d\u7684\u6e29\u5ea6\u4f20\u611f\u5668\u53ef\u80fd\u88ab\u5b89\u88c5\u4f4d\u7f6e\u3001\u623f\u95f4\u3001\u697c\u5c42\u548c\u5efa\u7b51\u7269\u7b49\u4e0a\u4e0b\u6587\u9650\u5b9a\u3002 \u8fd0\u52a8\u7ed3\u679c\u53ef\u4ee5\u6309\u8054\u8d5b\u548c\u7403\u961f\u5206\u7c7b\u3002 \u751f\u4ea7\u8005\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\uff0c\u4f8b\u5982\u5728\u670d\u52a1\u5668\u6216\u8bbe\u5907\u4e0a\u3002 \u751f\u4ea7\u7684\u4e8b\u4ef6\u53ef\u80fd\u7531\u751f\u4ea7\u8005\u6216\u4e2d\u95f4\u4eba\u76f4\u63a5\u63d0\u4f9b\u548c\u53d1\u51fa\uff1b \u4f5c\u4e3a\u540e\u8005\u7684\u793a\u4f8b\uff0c\u8bf7\u8003\u8651\u8bbe\u5907\u901a\u8fc7\u8d1f\u8f7d\u5927\u5c0f\u53d7\u9650\u7684\u7f51\u7edc\uff08\u5982 LoRaWAN \u6216 ModBus\uff09\u4f20\u8f93\u7684\u4e8b\u4ef6\u6570\u636e\uff0c \u5e76\u4e14\u7b26\u5408\u6b64\u89c4\u8303\u7684\u4e8b\u4ef6\u5c06\u7531\u7f51\u7edc\u7f51\u5173\u4ee3\u8868\u751f\u4ea7\u8005\u63d0\u4f9b\u3002 \u4f8b\u5982\uff0c\u6c14\u8c61\u7ad9\u6bcf 5 \u5206\u949f\u901a\u8fc7 LoRaWAN \u4f20\u8f93\u4e00\u6b21 12 \u5b57\u8282\u7684\u4e13\u6709\u4e8b\u4ef6 payload \u7528\u4e8e\u6307\u793a\u5929\u6c14\u72b6\u51b5\u3002 \u7136\u540e\u4f7f\u7528 LoRaWAN \u7f51\u5173\u4ee5 CloudEvents \u683c\u5f0f\u5c06\u4e8b\u4ef6\u53d1\u5e03\u5230 Internet \u76ee\u6807\u3002 LoRaWAN \u7f51\u5173\u662f\u4e8b\u4ef6\u751f\u4ea7\u8005\uff0c\u4ee3\u8868\u6c14\u8c61\u7ad9\u53d1\u5e03\u4e8b\u4ef6\uff0c\u5e76\u5c06\u8bbe\u7f6e\u4e00\u5b9a\u7684\u5143\u6570\u636e\u4ee5\u53cd\u6620\u4e8b\u4ef6\u7684\u6765\u6e90(\u6c14\u8c61\u7ad9)\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4ee5\u4ee5\u4e0b\u76ee\u7684\uff1a \u5982\u663e\u793a\u3001\u5b58\u6863\u3001\u5206\u6790\u3001\u5de5\u4f5c\u6d41\u5904\u7406\u3001\u76d1\u63a7\u72b6\u6001\u6216\u63d0\u4f9b\u4e1a\u52a1\u89e3\u51b3\u65b9\u6848\u53ca\u5176\u57fa\u672c\u6784\u5efa\u6a21\u5757\u7684\u900f\u660e\u5316 \u6765\u6d88\u8d39\u4e8b\u4ef6\u3002 \u6d88\u8d39\u8005\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\uff0c\u4f8b\u5982\u5728\u670d\u52a1\u5668\u6216\u8bbe\u5907\u4e0a\u3002 \u6d88\u8d39\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u5bf9\u4ee5\u4e0b\u5185\u5bb9\u611f\u5174\u8da3\uff1a \u533a\u5206\u4e8b\u4ef6\uff0c\u4f7f\u5f97\u5b8c\u5168\u76f8\u540c\u7684\u4e8b\u4ef6\u4e0d\u4f1a\u88ab\u5904\u7406\u4e24\u6b21\u3002 \u8bc6\u522b\u548c\u9009\u62e9\u6e90\u4e0a\u4e0b\u6587\u6216\u751f\u4ea7\u8005\u6307\u5b9a\u7684\u5206\u7c7b\u3002 \u786e\u5b9a\u4e8b\u4ef6\u76f8\u5bf9\u4e8e\u539f\u59cb\u4e0a\u4e0b\u6587\u6216\u76f8\u5bf9\u4e8e\u65f6\u949f\u7684\u65f6\u95f4\u987a\u5e8f\u3002 \u4e86\u89e3\u4e8b\u4ef6\u4e2d\u643a\u5e26\u7684\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u5173\u8054\u6765\u81ea\u591a\u4e2a\u4e8b\u4ef6\u751f\u4ea7\u8005\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u5e76\u5c06\u5b83\u4eec\u53d1\u9001\u5230\u76f8\u540c\u7684\u6d88\u8d39\u8005\u4e0a\u4e0b\u6587\u3002 \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6d88\u8d39\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u5bf9\u4ee5\u4e0b\u5185\u5bb9\u611f\u5174\u8da3\uff1a \u4ece\u539f\u59cb\u4e0a\u4e0b\u6587\u4e2d\u83b7\u53d6\u6709\u5173\u4e8b\u4ef6\u4e3b\u9898\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u4f8b\u5982\u83b7\u53d6\u6709\u5173\u9700\u8981\u7279\u6743\u8bbf\u95ee\u6388\u6743\u7684\u5df2\u66f4\u6539\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 \u4f8b\u5982\uff0c\u51fa\u4e8e\u9690\u79c1\u539f\u56e0\uff0cHR \u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u4ec5\u5728\u4e8b\u4ef6\u4e2d\u53d1\u5e03\u975e\u5e38\u6709\u9650\u7684\u4fe1\u606f\uff0c \u4efb\u4f55\u9700\u8981\u66f4\u591a\u6570\u636e\u7684\u4e8b\u4ef6\u6d88\u8d39\u8005\u90fd\u5fc5\u987b\u5728\u5176\u81ea\u5df1\u7684\u6388\u6743\u4e0a\u4e0b\u6587\u80cc\u666f\u4e0b\u4ece HR \u7cfb\u7edf\u83b7\u53d6\u4e0e\u4e8b\u4ef6\u76f8\u5173\u7684\u8be6\u7ec6\u4fe1\u606f \u5728\u539f\u59cb\u4e0a\u4e0b\u6587\u4e2d\u4e0e\u4e8b\u4ef6\u7684\u4e3b\u9898\u8fdb\u884c\u4ea4\u4e92\uff0c\u4f8b\u5982\u5728\u88ab\u544a\u77e5\u8be5\u6570\u636e\u5757\u521a\u521a\u521b\u5efa\u540e\u8bfb\u53d6\u5b58\u50a8\u8be5\u6570\u636e\u5757\u3002 \u6d88\u8d39\u8005\u7684\u5174\u8da3\u6fc0\u53d1\u4e86\u4fe1\u606f\u751f\u4ea7\u8005\u5e94\u8be5\u5305\u62ec\u4e8b\u4ef6\u7684\u9700\u6c42\u3002 \u4e2d\u95f4\u4ef6\u5c06\u4e8b\u4ef6\u4ece\u751f\u4ea7\u8005\u8def\u7531\u5230\u6d88\u8d39\u8005\uff0c\u6216\u8f6c\u53d1\u5230\u5176\u4ed6\u4e2d\u95f4\u4ef6\u3002 \u4ea7\u751f\u4e8b\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u5c06\u6839\u636e\u6d88\u8d39\u8005\u9700\u6c42\u4ea7\u751f\u7684\u67d0\u4e9b\u4efb\u52a1\u59d4\u6258\u7ed9\u4e2d\u95f4\u4ef6\uff1a \u7ba1\u7406\u540c\u65f6\u5bf9\u5927\u91cf\u7c7b\u522b\u548c\u4e0a\u4e0b\u6587\u80cc\u666f\u4e2d\u7684\u67d0\u4e2a\u4e8b\u4ef6\u611f\u5174\u8da3\u7684\u6d88\u8d39\u8005\u3002 \u4ee3\u8868\u6d88\u8d39\u8005\u5728\u7c7b\u6216\u4e8b\u4ef6\u7684\u539f\u59cb\u4e0a\u4e0b\u6587\u4e0a\u5904\u7406\u8fc7\u6ee4\u6761\u4ef6\u3002 \u8f6c\u7801\uff0c\u6bd4\u5982\u4ece JSON \u89e3\u7801\u540e\u5728 MsgPack \u4e2d\u7f16\u7801\u3002 \u66f4\u6539\u4e8b\u4ef6\u7ed3\u6784\u7684\u8f6c\u6362\uff0c\u4f8b\u5982\u4ece\u4e13\u6709\u683c\u5f0f\u6620\u5c04\u5230 CloudEvents\uff0c\u540c\u65f6\u4fdd\u7559\u4e8b\u4ef6\u7684\u8eab\u4efd\u548c\u8bed\u4e49\u5b8c\u6574\u6027\u3002 \u5373\u65f6\u201c\u63a8\u9001\u5f0f\u201d\u4f20\u8f93\u7ed9\u611f\u5174\u8da3\u7684\u6d88\u8d39\u8005\u3002 \u5b58\u50a8\u6700\u7ec8\u4f20\u8f93\u7684\u4e8b\u4ef6\uff0c\u7528\u4e8e\u7531\u6d88\u8d39\u8005\u53d1\u8d77\u7684\u201c\u62c9\u201d\u8bf7\u6c42\uff0c\u6216\u5ef6\u8fdf\u540e\u7531\u4e2d\u95f4\u4ef6\u53d1\u8d77\u201c\u63a8\u201d\u8bf7\u6c42\u3002 \u89c2\u5bdf\u4e8b\u4ef6\u5185\u5bb9\u6216\u4e8b\u4ef6\u6d41\u4ee5\u8fdb\u884c\u76d1\u63a7\u6216\u8bca\u65ad\u3002 \u4e3a\u4e86\u6ee1\u8db3\u8fd9\u4e9b\u9700\u6c42\uff0c\u4e2d\u95f4\u4ef6\u5c06\u5bf9\u4ee5\u4e0b\u65b9\u9762\u611f\u5174\u8da3\uff1a \u4e00\u79cd\u5143\u6570\u636e\u9274\u522b\u5668\uff0c\u53ef\u7528\u4e8e\u4e8b\u4ef6\u7684\u5206\u7c7b\u6216\u4e0a\u4e0b\u6587\u5316\uff0c\u4ee5\u4fbf\u6d88\u8d39\u8005\u53ef\u4ee5\u8868\u8fbe\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u6216\u4e0a\u4e0b\u6587\u7684\u5174\u8da3\u3002 \u4f8b\u5982\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u5bf9\u6587\u4ef6\u5b58\u50a8\u5e10\u6237\u5185\u7684\u7279\u5b9a\u76ee\u5f55\u76f8\u5173\u7684\u6240\u6709\u4e8b\u4ef6\u611f\u5174\u8da3\u3002 \u4e00\u79cd\u5143\u6570\u636e\u9274\u522b\u5668\uff0c\u5141\u8bb8\u533a\u5206\u8be5\u7c7b\u6216\u4e0a\u4e0b\u6587\u7684\u7279\u5b9a\u4e8b\u4ef6\u7684\u4e3b\u9898\u3002\u4f8b\u5982\uff0c\u6d88\u8d39\u8005\u53ef\u80fd\u5e0c\u671b\u8fc7\u6ee4\u6389\u4e0e\u4ee5\u201c.jpg\u201d\u7ed3\u5c3e\u7684 \u65b0\u6587\u4ef6\u76f8\u5173\u7684\u6240\u6709\u4e8b\u4ef6\uff08\u6587\u4ef6\u540d\u662f\u201c\u65b0\u6587\u4ef6\u201d\u4e8b\u4ef6\u7684\u4e3b\u9898\uff09\uff0c\u4ee5\u6b64\u8868\u793a\u5b83\u5bf9\u611f\u5174\u8da3\u7684\u6587\u4ef6\u5b58\u50a8\u8d26\u6237\u4e0b\u67d0\u4e2a\u76ee\u5f55\u7684 \u4e0a\u4e0b\u6587\u73af\u5883\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u53ca\u5176\u6570\u636e\u7f16\u7801\u7684\u6307\u793a\u5668\u3002 \u4e00\u4e2a\u4e8b\u4ef6\u53ca\u5176\u6570\u636e\u7684\u7ed3\u6784\u5e03\u5c40\uff08\u6a21\u5f0f\uff09\u7684\u6307\u793a\u5668\u3002 \u4e8b\u4ef6\u662f\u5426\u53ef\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6d88\u8d39\u53d6\u51b3\u4e8e\u751f\u4ea7\u8005\u7684\u9009\u62e9\u3002 \u5728\u5b9e\u8df5\u4e2d\uff0c\u5f53\u4e2d\u95f4\u4ef6\u6539\u53d8\u4e8b\u4ef6\u7684\u8bed\u4e49\u65f6\u53ef\u4ee5\u626e\u6f14 \u751f\u4ea7\u8005 \u7684\u89d2\u8272\uff0c \u5f53\u5b83\u6839\u636e\u4e8b\u4ef6\u91c7\u53d6\u884c\u52a8\u65f6\u53ef\u4ee5\u626e\u6f14 \u6d88\u8d39\u8005 \u7684\u89d2\u8272\uff0c \u6216\u8005\u5f53\u5b83\u8def\u7531\u4e8b\u4ef6\u800c\u4e0d\u8fdb\u884c\u8bed\u4e49\u6539\u53d8\u65f6\u53ef\u4ee5\u626e\u6f14 \u4e2d\u95f4\u4eba \u7684\u89d2\u8272\u3002 \u6846\u67b6\u548c\u5176\u4ed6\u62bd\u8c61\u4f7f\u4e0e\u4e8b\u4ef6\u5e73\u53f0\u57fa\u7840\u8bbe\u65bd\u95f4\u7684\u4ea4\u4e92\u66f4\u7b80\u5355\uff0c \u5e76\u4e14\u901a\u5e38\u4e3a\u591a\u4e2a\u4e8b\u4ef6\u5e73\u53f0\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u516c\u5171 API \u533a\u57df\u3002 \u6846\u67b6\u901a\u5e38\u7528\u4e8e\u5c06\u4e8b\u4ef6\u8f6c\u6362\u4e3a\u5bf9\u8c61\u56fe\uff0c\u5e76\u5c06\u4e8b\u4ef6\u5206\u6d3e\u7ed9\u67d0\u4e9b\u7279\u5b9a\u7684\u5904\u7406\u903b\u8f91\u6216\u7528\u6237\u89c4\u5219\uff0c \u8fd9\u4e9b\u7528\u6237\u903b\u8f91\u6216\u7528\u6237\u89c4\u5219\u5141\u8bb8\u6d88\u8d39\u5e94\u7528\u7a0b\u5e8f\u5bf9\u539f\u59cb\u4e0a\u4e0b\u6587\u548c\u7279\u5b9a\u4e3b\u9898\u4e2d\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u4e8b\u4ef6\u505a\u51fa\u53cd\u5e94\u3002 \u6846\u67b6\u6700\u611f\u5174\u8da3\u7684\u662f\u8de8\u62bd\u8c61\u5e73\u53f0\u7684\u8bed\u4e49\u5143\u6570\u636e\u901a\u7528\u6027\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u7edf\u4e00\u5904\u7406\u7c7b\u4f3c\u7684\u6d3b\u52a8\u3002 \u5bf9\u4e8e\u4f53\u80b2\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f7f\u7528\u8be5\u6846\u67b6\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u5bf9\u8054\u76df\u4e2d\u4e00\u652f\u7403\u961f\u4eca\u5929\u7684\u6bd4\u8d5b\uff08\u4e3b\u9898\uff09 \u7684\u6240\u6709\u4e8b\u4ef6\u611f\u5174\u8da3\uff0c\u4f46\u5e0c\u671b\u4ee5\u4e0d\u540c\u4e8e\u201c\u6362\u4eba\u201d\u4e8b\u4ef6\u7684\u65b9\u5f0f\u5904\u7406\u201c\u5f97\u5206\u201d\u4e8b\u4ef6\u3002 \u4e3a\u6b64\uff0c\u6846\u67b6\u5c06\u9700\u8981\u4e00\u4e2a\u5408\u9002\u7684\u5143\u6570\u636e\u9274\u522b\u5668\uff0c\u4f7f\u5176\u4e0d\u5fc5\u4e86\u89e3\u4e8b\u4ef6\u7ec6\u8282\u3002 \u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u5408\u9002\u7684\u5143\u6570\u636e\u9274\u522b\u5668\u5e94\u8be5\u7531\u751f\u4ea7\u8005\u586b\u5145\uff0c\u800c\u4e0d\u662f\u6846\u67b6\u7684\u8d23\u4efb\u3002","title":"Roles/\u89d2\u8272"},{"location":"primer/#value-proposition","text":"\u672c\u8282\u4ecb\u7ecd\u4e86\u4e00\u4e9b\u80fd\u591f\u5c55\u793a CloudEvents \u4ef7\u503c\u4e3b\u5f20\u7684\u7528\u4f8b\u3002","title":"Value Proposition/\u4ef7\u503c\u4e3b\u5f20"},{"location":"primer/#_4","text":"\u4e3b\u8981\u4e8b\u4ef6\u53d1\u5e03\u8005\uff08\u4f8b\u5982 AWS\u3001Microsoft\u3001Google \u7b49\uff09\u90fd\u5728\u5404\u81ea\u7684\u5e73\u53f0\u4e0a\u4ee5\u4e0d\u540c\u7684\u683c\u5f0f\u53d1\u5e03\u4e8b\u4ef6\u3002 \u751a\u81f3\u5728\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u540c\u4e00\u63d0\u4f9b\u5546\u7684\u670d\u52a1\u4ee5\u4e0d\u540c\u683c\u5f0f\uff08\u4f8b\u5982 AWS\uff09\u53d1\u5e03\u4e8b\u4ef6\u3002 \u8fd9\u8feb\u4f7f\u4e8b\u4ef6\u6d88\u8d39\u8005\u5b9e\u73b0\u81ea\u5b9a\u4e49\u903b\u8f91\u4ee5\u8de8\u5e73\u53f0\u8bfb\u53d6\u6216\u5904\u7406\u4e8b\u4ef6\u6570\u636e\uff0c\u6709\u65f6\u751a\u81f3\u9700\u8981\u8de8\u5355\u4e2a\u5e73\u53f0\u7684\u591a\u4e2a\u670d\u52a1\u5904\u7406\u3002 CloudEvents \u53ef\u4ee5\u4e3a\u90a3\u4e9b\u8de8\u5e73\u53f0\u548c\u670d\u52a1\u5904\u7406\u4e8b\u4ef6\u7684\u4f7f\u7528\u8005\u63d0\u4f9b\u5355\u4e00\u4f53\u9a8c\u3002","title":"\u8de8\u670d\u52a1\u548c\u5e73\u53f0\u89c4\u8303\u5316\u4e8b\u4ef6"},{"location":"primer/#_5","text":"\u8de8\u73af\u5883\u4f20\u8f93\u7684\u4e8b\u4ef6\u6570\u636e\u8d8a\u6765\u8d8a\u666e\u904d\u3002 \u7136\u800c\uff0c\u5982\u679c\u6ca1\u6709\u63cf\u8ff0\u4e8b\u4ef6\u7684\u901a\u7528\u65b9\u5f0f\uff0c\u8de8\u73af\u5883\u7684\u4e8b\u4ef6\u4f20\u9012\u5c31\u4f1a\u53d7\u5230\u963b\u788d\u3002 CloudEvents \u4e4b\u524d\u6ca1\u6709\u5355\u4e00\u7684\u65b9\u6cd5\u53ef\u4ee5\u786e\u5b9a\u4e8b\u4ef6\u7684\u6765\u6e90\u548c\u53ef\u80fd\u7684\u53bb\u5411\u3002 \u8fd9\u5bf9\u7814\u7a76\u6210\u529f\u4f20\u8f93\u4e8b\u4ef6\u4e8b\u4ef6\u5de5\u5177\u548c\u6d88\u8d39\u8005\u77e5\u9053\u5982\u4f55\u5904\u7406\u4e8b\u4ef6\u6570\u636e\u5f62\u6210\u4e86\u5de8\u5927\u963b\u788d\u3002 CloudEvents \u63d0\u4f9b\u6709\u7528\u7684\u5143\u6570\u636e\uff0c\u4e2d\u95f4\u4ef6\u548c\u6d88\u8d39\u8005\u53ef\u4ee5\u4f9d\u8d56\u8fd9\u4e9b\u5143\u6570\u636e\u6765\u4fc3\u8fdb\u4e8b\u4ef6\u8def\u7531\u3001\u65e5\u5fd7\u8bb0\u5f55\u3001\u4f20\u8f93\u548c\u63a5\u6536\u3002","title":"\u4fc3\u8fdb\u8de8\u670d\u52a1\u548c\u5e73\u53f0\u7684\u96c6\u6210"},{"location":"primer/#_6","text":"\u529f\u80fd\u5373\u670d\u52a1( FaaS )\uff08\u4e5f\u79f0\u4e3a serverless \u8ba1\u7b97\uff09\u662f IT \u4e2d\u589e\u957f\u6700\u5feb\u7684\u8d8b\u52bf\u4e4b\u4e00\uff0c\u5b83\u4e3b\u8981\u662f\u7531\u4e8b\u4ef6\u9a71\u52a8\u7684\u3002 \u7136\u800c\uff0cFaaS \u7684\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\u662f\u4f9b\u5e94\u5546\u9501\u5b9a\u3002 \u8fd9\u79cd\u9501\u5b9a\u90e8\u5206\u662f\u7531\u51fd\u6570 API \u548c\u4f9b\u5e94\u5546\u4e4b\u95f4\u7b7e\u540d\u7684\u5dee\u5f02\u5f15\u8d77\u7684\uff0c \u9501\u5b9a\u540c\u6837\u4e5f\u662f\u7531\u51fd\u6570\u5185\u63a5\u6536\u7684\u4e8b\u4ef6\u6570\u636e\u683c\u5f0f\u7684\u5dee\u5f02\u5f15\u8d77\u7684\u3002 CloudEvents \u63d0\u4f9b\u63cf\u8ff0\u4e8b\u4ef6\u6570\u636e\u7684\u901a\u7528\u65b9\u5f0f\u63d0\u9ad8\u4e86\u529f\u80fd\u5373\u670d\u52a1\u7684\u53ef\u79fb\u690d\u6027\u3002","title":"\u63d0\u9ad8\u529f\u80fd\u5373\u670d\u52a1\u7684\u53ef\u79fb\u690d\u6027"},{"location":"primer/#serverless","text":"\u7f3a\u4e4f\u901a\u7528\u4e8b\u4ef6\u683c\u5f0f\u4f7f\u4e8b\u4ef6\u9a71\u52a8\u548c serverless \u67b6\u6784\u7684\u5f00\u53d1\u548c\u6d4b\u8bd5\u53d8\u5f97\u590d\u6742\u3002 \u6ca1\u6709\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u4ee5\u51c6\u786e\u5730\u4e3a\u5f00\u53d1\u548c\u6d4b\u8bd5\u76ee\u7684\u6a21\u62df\u4e8b\u4ef6\uff0c\u5e76\u5e2e\u52a9\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u6a21\u62df\u4e8b\u4ef6\u9a71\u52a8\u7684\u5de5\u4f5c\u6d41\u3002 CloudEvents \u53ef\u4ee5\u63d0\u4f9b\u66f4\u597d\u7684\u5f00\u53d1\u5de5\u5177\u6765\u6784\u5efa\u3001\u6d4b\u8bd5\u548c\u5904\u7406\u4e8b\u4ef6\u9a71\u52a8\u548c\u65e0\u670d\u52a1\u5668\u67b6\u6784\u7684\u7aef\u5230\u7aef\u751f\u547d\u5468\u671f\u3002","title":"\u6539\u8fdb\u4e8b\u4ef6\u9a71\u52a8/serverless \u67b6\u6784\u7684\u5f00\u53d1\u548c\u6d4b\u8bd5"},{"location":"primer/#_7","text":"\u5927\u591a\u6570\u5e73\u53f0\u548c\u670d\u52a1\u5bf9\u5176\u4e8b\u4ef6\u7684\u6570\u636e\u6a21\u578b\u8fdb\u884c\u4e0d\u540c\u7684\u7248\u672c\u63a7\u5236\uff08\u5982\u679c\u4ed6\u4eec\u8fd9\u6837\u505a\u7684\u8bdd\uff09\u3002 \u968f\u7740\u8fd9\u4e9b\u6570\u636e\u6a21\u578b\u7684\u53d1\u5c55\uff0c\u8fd9\u4f1a\u4e3a\u53d1\u5e03\u548c\u4f7f\u7528\u4e8b\u4ef6\u7684\u6570\u636e\u6a21\u578b\u5e26\u6765\u4e0d\u4e00\u81f4\u7684\u4f53\u9a8c\u3002 CloudEvents \u53ef\u4ee5\u63d0\u4f9b\u4e00\u79cd\u901a\u7528\u7684\u65b9\u5f0f\u6765\u7248\u672c\u5316\u548c\u6f14\u5316\u4e8b\u4ef6\u6570\u636e\u7684\u53d1\u5c55\u3002 \u8fd9\u5c06\u5e2e\u52a9\u4e8b\u4ef6\u53d1\u5e03\u8005\u6839\u636e\u6700\u4f73\u5b9e\u8df5\u5b89\u5168\u5730\u5bf9\u5176\u6570\u636e\u6a21\u578b\u8fdb\u884c\u7248\u672c\u63a7\u5236\uff0c \u5e76\u4e14\u8fd9\u6709\u52a9\u4e8e\u4e8b\u4ef6\u6d88\u8d39\u8005\u968f\u7740\u4e8b\u4ef6\u6570\u636e\u7684\u53d1\u5c55\u5b89\u5168\u5730\u4f7f\u7528\u5b83\u3002","title":"\u4e8b\u4ef6\u6570\u636e\u53d1\u5c55"},{"location":"primer/#webhook","text":"Webhooks \u662f\u4e00\u79cd\u4e0d\u4f7f\u7528\u901a\u7528\u683c\u5f0f\u7684\u6765\u53d1\u5e03\u4e8b\u4ef6\u7684\u6a21\u5f0f\u3002 Webhook \u7684\u4f7f\u7528\u8005\u6ca1\u6709\u4e00\u81f4\u7684\u65b9\u5f0f\u6765\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u8bc6\u522b\u3001\u9a8c\u8bc1\u548c\u6574\u4f53\u5904\u7406\u901a\u8fc7 Webhook \u4f20\u8f93\u7684\u4e8b\u4ef6\u6570\u636e\u3002 CloudEvents \u53ef\u4ee5\u63d0\u4f9b Webhook \u53d1\u5e03\u548c\u6d88\u8d39\u4e8b\u4ef6\u7684\u4e00\u81f4\u6027\u3002","title":"\u89c4\u8303\u5316 Webhook"},{"location":"primer/#_8","text":"\u51fa\u4e8e\u5b89\u5168\u548c\u7b56\u7565\u8003\u8651\uff0c\u53ef\u80fd\u9700\u8981\u8fc7\u6ee4\u3001\u8f6c\u6362\u6216\u963b\u6b62\u7cfb\u7edf\u4e4b\u95f4\u7684\u4e8b\u4ef6\u4f20\u8f93\u3002 \u6bd4\u5982\u53ef\u80fd\u9700\u8981\u9632\u6b62\u4e8b\u4ef6\u7684\u8fdb\u5165\u6216\u9000\u51fa\uff0c\u5982\u5305\u542b\u654f\u611f\u4fe1\u606f\u7684\u4e8b\u4ef6\u6570\u636e\u6216\u60f3\u8981\u7981\u6b62\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u4e4b\u95f4\u7684\u4fe1\u606f\u6d41\u3002 \u901a\u7528\u4e8b\u4ef6\u683c\u5f0f\u5c06\u5141\u8bb8\u66f4\u5bb9\u6613\u5730\u63a8\u7406\u6b63\u5728\u4f20\u8f93\u7684\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u6570\u636e\u81ea\u67e5\u3002","title":"\u5b89\u5168\u7b56\u7565"},{"location":"primer/#_9","text":"\u4ece\u6e90\u53d1\u9001\u7684\u4e8b\u4ef6\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728\u4e00\u7cfb\u5217\u9644\u52a0\u4e8b\u4ef6\u5e8f\u5217\u4e4b\u4e2d\uff0c \u8fd9\u4e9b\u9644\u52a0\u4e8b\u4ef6\u5e8f\u5217\u4ece\u5404\u79cd\u4e2d\u95f4\u4ef6\u8bbe\u5907\uff08\u4f8b\u5982\u4e8b\u4ef6\u4ee3\u7406\u548c\u7f51\u5173\uff09\u53d1\u51fa\u3002 CloudEvents \u5728\u4e8b\u4ef6\u4e2d\u5305\u542b\u5143\u6570\u636e\u4ee5\u5c06\u8fd9\u4e9b\u4e8b\u4ef6\u5173\u8054\u4e3a\u4e8b\u4ef6\u5e8f\u5217\u7684\u4e00\u90e8\u5206\uff0c\u4ee5\u4fbf\u8fdb\u884c\u4e8b\u4ef6\u8ddf\u8e2a\u548c\u6545\u969c\u6392\u9664\u3002","title":"\u4e8b\u4ef6\u8ffd\u8e2a"},{"location":"primer/#iot","text":"\u7269\u8054\u7f51\u8bbe\u5907\u4f1a\u53d1\u9001\u548c\u63a5\u6536\u4e0e\u5176\u529f\u80fd\u76f8\u5173\u7684\u4e8b\u4ef6\u3002 \u4f8b\u5982\uff0c\u8fde\u63a5\u7684\u6052\u6e29\u5668\u5c06\u53d1\u9001\u6709\u5173\u5f53\u524d\u6e29\u5ea6\u7684\u9065\u6d4b\u6570\u636e\uff0c \u5e76\u53ef\u4ee5\u63a5\u6536\u6539\u53d8\u6e29\u5ea6\u7684\u4e8b\u4ef6\u3002 \u8fd9\u4e9b\u8bbe\u5907\u901a\u5e38\u5177\u6709\u53d7\u9650\u7684\u64cd\u4f5c\u73af\u5883\uff08cpu\u3001\u5185\u5b58\uff09\uff0c\u9700\u8981\u660e\u786e\u5b9a\u4e49\u7684\u4e8b\u4ef6\u6d88\u606f\u683c\u5f0f\u3002 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e9b\u6d88\u606f\u662f\u4e8c\u8fdb\u5236\u7f16\u7801\u7684\uff0c\u800c\u4e0d\u662f\u6587\u672c\u7684\u3002 \u65e0\u8bba\u662f\u76f4\u63a5\u6765\u81ea\u8bbe\u5907\u8fd8\u662f\u901a\u8fc7\u7f51\u5173\u8f6c\u6362\uff0cCloudEvents \u90fd\u53ef\u4ee5\u66f4\u597d\u5730\u63cf\u8ff0\u6d88\u606f\u7684\u6765\u6e90\u548c\u6d88\u606f\u4e2d\u5305\u542b\u7684\u6570\u636e\u683c\u5f0f\u3002","title":"IoT/\u7269\u8054\u7f51"},{"location":"primer/#_10","text":"\u4e00\u4e2a serverless \u5e94\u7528\u6216\u5de5\u4f5c\u6d41\u53ef\u80fd\u4e0e\u6765\u81ea\u4e0d\u540c\u4e8b\u4ef6\u6e90\u6216\u4e8b\u4ef6\u751f\u4ea7\u8005\u7684\u591a\u4e2a\u4e8b\u4ef6\u76f8\u5173\u8054\u3002 \u4f8b\u5982\uff0c\u76d7\u7a83\u68c0\u6d4b\u5e94\u7528\u7a0b\u5e8f/\u5de5\u4f5c\u6d41\u53ef\u80fd\u6d89\u53ca\u8fd0\u52a8\u4e8b\u4ef6\u548c\u95e8/\u7a97\u6253\u5f00\u4e8b\u4ef6\u3002 \u4e00\u4e2a serverless \u5e73\u53f0\u53ef\u80fd\u63a5\u6536\u6bcf\u79cd\u7c7b\u578b\u4e8b\u4ef6\u7684\u8bb8\u591a\u5b9e\u4f8b\uff0c\u4f8b\u5982 \u5b83\u53ef\u4ee5\u63a5\u6536\u6765\u81ea\u4e0d\u540c\u623f\u5c4b\u7684\u8fd0\u52a8\u4e8b\u4ef6\u548c\u5f00\u7a97\u4e8b\u4ef6\u3002 serverless \u5e73\u53f0\u9700\u8981\u5c06\u4e00\u79cd\u7c7b\u578b\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u4e0e\u5176\u4ed6\u7c7b\u578b\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u6b63\u786e\u5173\u8054\uff0c \u5e76\u5c06\u63a5\u6536\u5230\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u6620\u5c04\u5230\u6b63\u786e\u7684\u5e94\u7528/\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002 CloudEvents \u5c06\u4e3a\u4efb\u4f55\u4e8b\u4ef6\u4f7f\u7528\u8005\uff08\u4f8b\u5982 serverless \u5e73\u53f0\uff09\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u65b9\u5f0f\uff0c \u4ee5\u5728\u4e8b\u4ef6\u6570\u636e\u4e2d\u5b9a\u4f4d\u4e8b\u4ef6\u5173\u8054\u4fe1\u606f/\u4ee4\u724c\u5e76\u5c06\u63a5\u6536\u5230\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u6620\u5c04\u5230\u6b63\u786e\u7684\u5e94\u7528/\u5de5\u4f5c\u6d41\u5b9e\u4f8b\u3002","title":"\u4e8b\u4ef6\u5173\u8054"},{"location":"primer/#existing-event-formats","text":"\u4e0e\u4e0a\u4e00\u8282\u4e00\u6837\uff0c\u5bf9\u5f53\u524d\u73b0\u72b6\u7684\u8c03\u67e5\uff08\u548c\u7406\u89e3\uff09\u5bf9 CloudEvents \u5c0f\u7ec4\u6765\u8bf4\u975e\u5e38\u91cd\u8981\u3002 \u4e3a\u6b64\uff0c\u4e0b\u9762\u5217\u51fa\u4e86\u5728\u5b9e\u8df5\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u5f53\u524d\u4e8b\u4ef6\u683c\u5f0f\u7684\u6837\u672c\u3002","title":"Existing Event Formats/\u73b0\u6709\u7684\u6570\u636e\u683c\u5f0f"},{"location":"primer/#microsoft-event-grid-","text":"{ \"topic\" : \"/subscriptions/{subscription-id}\" , \"subject\" : \"/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.EventGrid/eventSubscriptions/LogicAppdd584bdf-8347-49c9-b9a9-d1f980783501\" , \"eventType\" : \"Microsoft.Resources.ResourceWriteSuccess\" , \"eventTime\" : \"2017-08-16T03:54:38.2696833Z\" , \"id\" : \"25b3b0d0-d79b-44d5-9963-440d4e6a9bba\" , \"data\" : { \"authorization\" : \"{azure_resource_manager_authorizations}\" , \"claims\" : \"{azure_resource_manager_claims}\" , \"correlationId\" : \"54ef1e39-6a82-44b3-abc1-bdeb6ce4d3c6\" , \"httpRequest\" : \"\" , \"resourceProvider\" : \"Microsoft.EventGrid\" , \"resourceUri\" : \"/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.EventGrid/eventSubscriptions/LogicAppdd584bdf-8347-49c9-b9a9-d1f980783501\" , \"operationName\" : \"Microsoft.EventGrid/eventSubscriptions/write\" , \"status\" : \"Succeeded\" , \"subscriptionId\" : \"{subscription-id}\" , \"tenantId\" : \"72f988bf-86f1-41af-91ab-2d7cd011db47\" } } Documentation","title":"Microsoft - Event Grid/\u5fae\u8f6f - \u4e8b\u4ef6\u7f51\u683c"},{"location":"primer/#google-cloud-functions-potential-future-","text":"{ \"data\" : { \"@type\" : \"types.googleapis.com/google.pubsub.v1.PubsubMessage\" , \"attributes\" : { \"foo\" : \"bar\" }, \"messageId\" : \"12345\" , \"publishTime\" : \"2017-06-05T12:00:00.000Z\" , \"data\" : \"somebase64encodedmessage\" }, \"context\" : { \"eventId\" : \"12345\" , \"timestamp\" : \"2017-06-05T12:00:00.000Z\" , \"eventTypeId\" : \"google.pubsub.topic.publish\" , \"resource\" : { \"name\" : \"projects/myProject/topics/myTopic\" , \"service\" : \"pubsub.googleapis.com\" } } }","title":"Google - Cloud Functions (potential future)/\u8c37\u6b4c - \u4e91\u51fd\u6570 (\u6f5c\u5728\u7684\u672a\u6765)"},{"location":"primer/#aws-cloudwatch-events-cloudwatch","text":"AWS \u4e0a\u7684\u5f88\u5927\u4e00\u90e8\u5206\u4e8b\u4ef6\u5904\u7406\u7cfb\u7edf\u90fd\u5728\u4f7f\u7528\u8fd9\u79cd\u683c\u5f0f\u3002 { \"version\" : \"0\" , \"id\" : \"6a7e8feb-b491-4cf7-a9f1-bf3703467718\" , \"detail-type\" : \"EC2 Instance State-change Notification\" , \"source\" : \"aws.ec2\" , \"account\" : \"111122223333\" , \"time\" : \"2017-12-22T18:43:48Z\" , \"region\" : \"us-west-1\" , \"resources\" : [ \"arn:aws:ec2:us-west-1:123456789012:instance/i-1234567890abcdef0\" ], \"detail\" : { \"instance-id\" : \"i-1234567890abcdef0\" , \"state\" : \"terminated\" } }","title":"AWS - CloudWatch Events/\u4e9a\u9a6c\u900a - CloudWatch \u4e8b\u4ef6"},{"location":"primer/#ibm-openwhisk-web-action-eventibm-openwhisk-web-action","text":"{ \"__ow_method\" : \"post\" , \"__ow_headers\" : { \"accept\" : \"*/*\" , \"connection\" : \"close\" , \"content-length\" : \"4\" , \"content-type\" : \"text/plain\" , \"host\" : \"172.17.0.1\" , \"user-agent\" : \"curl/7.43.0\" }, \"__ow_path\" : \"\" , \"__ow_body\" : \"Jane\" }","title":"IBM - OpenWhisk - Web Action Event/IBM - OpenWhisk - Web Action \u4e8b\u4ef6"},{"location":"primer/#openstack-audit-middleware-event-openstack-","text":"{ \"typeURI\" : \"http://schemas.dmtf.org/cloud/audit/1.0/event\" , \"id\" : \"d8304637-3f63-5092-9ab3-18c9781871a2\" , \"eventTime\" : \"2018-01-30T10:46:16.740253+00:00\" , \"action\" : \"delete\" , \"eventType\" : \"activity\" , \"outcome\" : \"success\" , \"reason\" : { \"reasonType\" : \"HTTP\" , \"reasonCode\" : \"204\" }, \"initiator\" : { \"typeURI\" : \"service/security/account/user\" , \"name\" : \"user1\" , \"domain\" : \"domain1\" , \"id\" : \"52d28347f0b4cf9cc1717c00adf41c74cc764fe440b47aacb8404670a7cd5d22\" , \"host\" : { \"address\" : \"127.0.0.1\" , \"agent\" : \"python-novaclient\" }, \"project_id\" : \"ae63ddf2076d4342a56eb049e37a7621\" }, \"target\" : { \"typeURI\" : \"compute/server\" , \"id\" : \"b1b475fc-ef0a-4899-87f3-674ac0d56855\" }, \"observer\" : { \"typeURI\" : \"service/compute\" , \"name\" : \"nova\" , \"id\" : \"1b5dbef1-c2e8-5614-888d-bb56bcf65749\" }, \"requestPath\" : \"/v2/ae63ddf2076d4342a56eb049e37a7621/servers/b1b475fc-ef0a-4899-87f3-674ac0d56855\" } Documentation","title":"OpenStack - Audit Middleware - Event /OpenStack - \u5ba1\u8ba1\u4e2d\u95f4\u4ef6 - \u4e8b\u4ef6"},{"location":"primer/#adobe-io-eventsadobe-io","text":"{ \"event_id\" : \"639fd17a-d0bb-40ca-83a4-e78612bce5dc\" , \"event\" : { \"@id\" : \"82235bac-2b81-4e70-90b5-2bd1f04b5c7b\" , \"@type\" : \"xdmCreated\" , \"xdmEventEnvelope:objectType\" : \"xdmAsset\" , \"activitystreams:to\" : { \"xdmImsUser:id\" : \"D13A1E7053E46A220A4C86E1@AdobeID\" , \"@type\" : \"xdmImsUser\" }, \"activitystreams:generator\" : { \"xdmContentRepository:root\" : \"https://cc-api-storage.adobe.io/\" , \"@type\" : \"xdmContentRepository\" }, \"activitystreams:actor\" : { \"xdmImsUser:id\" : \"D13A1E7053E46A220A4C86E1@AdobeID\" , \"@type\" : \"xdmImsUser\" }, \"activitystreams:object\" : { \"@type\" : \"xdmAsset\" , \"xdmAsset:asset_id\" : \"urn:aaid:sc:us:4123ba4c-93a8-4c5d-b979-ffbbe4318185\" , \"xdmAsset:asset_name\" : \"example.jpg\" , \"xdmAsset:etag\" : \"6fc55d0389d856ae7deccebba54f110e\" , \"xdmAsset:path\" : \"/MyFolder/example.jpg\" , \"xdmAsset:format\" : \"image/jpeg\" }, \"activitystreams:published\" : \"2016-07-16T19:20:30+01:00\" } } Documentation","title":"Adobe - I/O Events/Adobe - I/O \u4e8b\u4ef6"},{"location":"proprietary-specs/","text":"CloudEvent \u4e13\u6709\u534f\u8bae\u4e0e\u7f16\u7801\u89c4\u8303 \u00b6 \u514d\u8d23\u58f0\u660e\uff1aCloudEvents \u5e76\u4e0d\u652f\u6301\u8fd9\u4e9b\u534f\u8bae\u6216\u89c4\u8303\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u80fd\u4e0e CloudEvents \u7684\u5f53\u524d\u7248\u672c\u4fdd\u6301\u4e00\u81f4\u3002\u4f7f\u7528\u8fd9\u4e9b\u534f\u8bae\u7684\u9879\u76ee\u7ef4\u62a4\u8005\u5e94\u8be5\u4fdd\u8bc1\u8fd9\u4e9b\u534f\u8bae\u4e0e CloudEvents \u7684\u6700\u65b0\u7248\u672c\u7684\u517c\u5bb9\u6027\u3002 Apache RocketMQ Transport Binding Google Cloud Pub/Sub Protocol Binding \u60f3\u8981\u6dfb\u52a0\u4e00\u4e2a\u4e13\u5c5e\u7684\u4f20\u8f93\u5c42\u534f\u8bae\u7ed1\u5b9a\uff1f \u6839\u636e\u73b0\u6709\u7684\u7ed1\u5b9a\u89c4\u8303\u7684\u683c\u5f0f\u6765\u521b\u5efa\u81ea\u5df1\u7684\u89c4\u8303 (\u5982 http or amqp ) - \u8fd9\u4f1a\u5bf9\u76f8\u5e94\u7684 SDKs \u5f00\u53d1\u6709\u5e2e\u52a9\u3002 \u6ce8\u610f\uff1a \u8fd9\u4e2a\u65b0\u5efa\u7684\u89c4\u8303\u5fc5\u987b\u80fd\u88ab\u516c\u5f00\u8bbf\u95ee\uff0c\u540c\u65f6\u5b83\u5fc5\u987b\u88ab\u63d0\u51fa\u5b83\u7684\u7ec4\u7ec7\u6240\u7ba1\u7406\u3002 \u8fd9\u4e2a\u65b0\u5efa\u7684\u89c4\u8303\u5fc5\u987b\u660e\u786e\u5730\u6307\u51fa\u5b83\u652f\u6301\u7684 CloudEvents \u7248\u672c. \u4e3a\u8fd9\u4e2a\u65b0\u5efa\u7684\u89c4\u8303\u521b\u7acb\u4e00\u4e2a PR\u3002 \u56de\u590d\u5728\u8fd9\u4e2a PR \u4e0b\u7684\u76f8\u5173\u8bc4\u8bba\uff0c\u53ef\u80fd\u4f1a\u88ab\u8981\u6c42\u52a0\u5165\u5230\u5de5\u4f5c\u7ec4\u7684\u5e38\u89c4\u4f1a\u8bdd\u4e2d\u3002","title":"\u4e13\u6709\u89c4\u683c"},{"location":"proprietary-specs/#cloudevent","text":"\u514d\u8d23\u58f0\u660e\uff1aCloudEvents \u5e76\u4e0d\u652f\u6301\u8fd9\u4e9b\u534f\u8bae\u6216\u89c4\u8303\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u4eec\u80fd\u4e0e CloudEvents \u7684\u5f53\u524d\u7248\u672c\u4fdd\u6301\u4e00\u81f4\u3002\u4f7f\u7528\u8fd9\u4e9b\u534f\u8bae\u7684\u9879\u76ee\u7ef4\u62a4\u8005\u5e94\u8be5\u4fdd\u8bc1\u8fd9\u4e9b\u534f\u8bae\u4e0e CloudEvents \u7684\u6700\u65b0\u7248\u672c\u7684\u517c\u5bb9\u6027\u3002 Apache RocketMQ Transport Binding Google Cloud Pub/Sub Protocol Binding \u60f3\u8981\u6dfb\u52a0\u4e00\u4e2a\u4e13\u5c5e\u7684\u4f20\u8f93\u5c42\u534f\u8bae\u7ed1\u5b9a\uff1f \u6839\u636e\u73b0\u6709\u7684\u7ed1\u5b9a\u89c4\u8303\u7684\u683c\u5f0f\u6765\u521b\u5efa\u81ea\u5df1\u7684\u89c4\u8303 (\u5982 http or amqp ) - \u8fd9\u4f1a\u5bf9\u76f8\u5e94\u7684 SDKs \u5f00\u53d1\u6709\u5e2e\u52a9\u3002 \u6ce8\u610f\uff1a \u8fd9\u4e2a\u65b0\u5efa\u7684\u89c4\u8303\u5fc5\u987b\u80fd\u88ab\u516c\u5f00\u8bbf\u95ee\uff0c\u540c\u65f6\u5b83\u5fc5\u987b\u88ab\u63d0\u51fa\u5b83\u7684\u7ec4\u7ec7\u6240\u7ba1\u7406\u3002 \u8fd9\u4e2a\u65b0\u5efa\u7684\u89c4\u8303\u5fc5\u987b\u660e\u786e\u5730\u6307\u51fa\u5b83\u652f\u6301\u7684 CloudEvents \u7248\u672c. \u4e3a\u8fd9\u4e2a\u65b0\u5efa\u7684\u89c4\u8303\u521b\u7acb\u4e00\u4e2a PR\u3002 \u56de\u590d\u5728\u8fd9\u4e2a PR \u4e0b\u7684\u76f8\u5173\u8bc4\u8bba\uff0c\u53ef\u80fd\u4f1a\u88ab\u8981\u6c42\u52a0\u5165\u5230\u5de5\u4f5c\u7ec4\u7684\u5e38\u89c4\u4f1a\u8bdd\u4e2d\u3002","title":"CloudEvent \u4e13\u6709\u534f\u8bae\u4e0e\u7f16\u7801\u89c4\u8303"},{"location":"spec/","text":"CloudEvents \u6838\u5fc3\u89c4\u8303-1.0.3\uff08\u5236\u4f5c\u4e2d\uff09 \u00b6 \u6458\u8981 \u00b6 CloudEvents \u662f\u4e00\u4e2a\u7528\u4e8e\u5b9a\u4e49\u4e8b\u4ef6\u683c\u5f0f\u7684\u4f9b\u5e94\u5546\u4e2d\u7acb\u89c4\u8303\u3002 \u76ee\u5f55 \u00b6 \u6982\u89c8 \u7b26\u53f7\u548c\u672f\u8bed \u4e0a\u4e0b\u6587\u5c5e\u6027 \u4e8b\u4ef6\u6570\u636e \u5927\u5c0f\u9650\u5236 \u9690\u79c1\u4e0e\u5b89\u5168 \u793a\u4f8b Overview/\u6982\u89c8 \u00b6 \u4e8b\u4ef6(Events)\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e2d\u65e0\u5904\u4e0d\u5728\u3002\u4f46\u4e0d\u540c\u7684\u4e8b\u4ef6\u751f\u4ea7\u8005\u5f80\u5f80\u7528\u4e0d\u540c\u7684\u89c4\u8303\u6765\u63cf\u8ff0\u81ea\u5df1\u7684\u4e8b\u4ef6\u3002 \u5bf9\u4e8b\u4ef6\u7684\u7edf\u4e00\u63cf\u8ff0\u7684\u532e\u4e4f\u610f\u5473\u7740\u5f00\u53d1\u8005\u5fc5\u987b\u4e0d\u65ad\u91cd\u65b0\u5b66\u4e60\u5982\u4f55\u6d88\u8d39\u4e0d\u540c\u5b9a\u4e49\u7684\u4e8b\u4ef6\u3002 \u5b83\u540c\u6837\u9650\u5236\u4e86\u90a3\u4e9b\u7528\u6765\u5e2e\u52a9\u4e8b\u4ef6\u6570\u636e\u5b8c\u6210\u8de8\u73af\u5883\u4f20\u8f93\u7684\u5e93(\u5982 SDKs)\uff0c \u5de5\u5177(\u5982\u4e8b\u4ef6\u8def\u7531\u5668)\u548c\u57fa\u7840\u8bbe\u65bd(\u5982\u4e8b\u4ef6\u8ffd\u8e2a\u7cfb\u7edf)\u7684\u53d1\u5c55\u3002 \u603b\u4f53\u6765\u770b\uff0c\u8fd9\u79cd\u532e\u4e4f\u4e25\u91cd\u963b\u788d\u4e86\u4e8b\u4ef6\u6570\u636e\u7684\u53ef\u79fb\u690d\u6027\u548c\u751f\u4ea7\u529b\u3002 CloudEvents \u662f\u4e00\u4e2a\u4ee5\u901a\u7528\u683c\u5f0f\u6765\u63cf\u8ff0\u4e8b\u4ef6\u6570\u636e\u7684\u6807\u51c6\u3002\u5b83\u63d0\u4f9b\u4e86\u4e8b\u4ef6\u5728\u670d\u52a1\u3001\u5e73\u53f0\u548c\u7cfb\u7edf\u4e2d\u7684\u4e92\u64cd\u4f5c\u6027\u3002 \u4e8b\u4ef6\u683c\u5f0f\u6307\u5b9a\u5982\u4f55\u4f7f\u7528\u67d0\u4e9b\u7f16\u7801\u683c\u5f0f\u5e8f\u5217\u5316\u4e00\u4e2a CloudEvent\u3002 \u652f\u6301\u90a3\u4e9b\u7f16\u7801\u4e14\u517c\u5bb9 CloudEvents \u7684\u5b9e\u73b0\u5fc5\u987b\u9075\u5b88\u76f8\u5e94\u4e8b\u4ef6\u683c\u5f0f\u4e2d\u6307\u5b9a\u7684\u7f16\u7801\u89c4\u5219\u3002 \u6240\u6709\u5b9e\u73b0\u90fd\u5fc5\u987b\u652f\u6301 JSON \u683c\u5f0f \u3002 \u6709\u5173\u89c4\u8303\u80cc\u540e\u7684\u5386\u53f2\u3001\u5f00\u53d1\u548c\u8bbe\u8ba1\u539f\u7406\u7b49\u66f4\u591a\u4fe1\u606f\uff0c \u8bf7\u53c2\u9605 CloudEvents \u5165\u95e8\u6587\u6863 \u3002 Notations and Terminology/\u7b26\u53f7\u548c\u672f\u8bed \u00b6 Notational Conventions/\u7b26\u53f7\u7ea6\u5b9a \u00b6 \u672c\u6587\u6863\u4e2d\u7684\u5173\u952e\u8bcd \"MUST/ \u5fc5\u987b\", \"MUST NOT/ \u5fc5\u987b\u4e0d\", \"REQUIRED/ \u5fc5\u8981\", \"SHALL \u5373\u5c06\", \"SHALL NOT \u5373\u5c06\u4e0d\", \"SHOULD \u5e94\u8be5\", \"SHOULD NOT \u4e0d\u5e94\u8be5\", \"RECOMMENDED \u5efa\u8bae\", \"MAY \u53ef\u80fd\", and \"OPTIONAL \u53ef\u9009\" \u9700\u8981\u6309\u7167 RFC 2119 \u4e2d\u7684\u63cf\u8ff0\u6765\u7406\u89e3\u3002 \u4e3a\u6e05\u695a\u8d77\u89c1\uff0c\u5f53\u4e00\u4e2a\u529f\u80fd\u88ab\u6807\u8bb0\u4e3a\u201c OPTIONAL \u53ef\u9009\"\u201d\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u6d88\u606f\u7684 \u751f\u4ea7\u8005 \u548c \u6d88\u8d39\u8005 \u90fd\u53ef\u4ee5\u81ea\u884c\u9009\u62e9\u662f\u5426\u652f\u6301\u8be5\u529f\u80fd\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u751f\u4ea7\u8005\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u5728\u6d88\u606f\u4e2d\u5305\u542b\u8be5\u529f\u80fd\uff0c\u6d88\u8d39\u8005\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u9009\u62e9\u652f\u6301\u8be5\u529f\u80fd\u3002 \u4e0d\u652f\u6301\u8be5\u529f\u80fd\u7684\u6d88\u8d39\u8005\u5c06\u9ed8\u9ed8\u5730\u5ffd\u7565\u8be5\u90e8\u5206\u6d88\u606f\u3002 \u751f\u4ea7\u8005\u9700\u8981\u505a\u597d\u6d88\u8d39\u8005\u5e76\u6ca1\u6709\u542f\u7528\u8be5\u529f\u80fd\u7684\u51c6\u5907\u3002 \u4e2d\u95f4\u4eba \u5e94\u5f53\u8f6c\u53d1 OPTIONAL \u53ef\u9009\u5c5e\u6027\u3002 \u672f\u8bed \u00b6 \u672c\u89c4\u8303\u5b9a\u4e49\u4e86\u4e0b\u5217\u672f\u8bed\u3002 Occurrence/\u4e8b\u4ef6\u53d1\u751f \u00b6 \u201c\u4e8b\u4ef6\u53d1\u751f\u201d\u662f\u6307\u5728\u8f6f\u4ef6\u7cfb\u7edf\u8fd0\u884c\u671f\u95f4\u5bf9\u4e8b\u5b9e\u72b6\u6001\u7684\u6355\u83b7\u3002 \u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u7cfb\u7edf\u53d1\u51fa\u4e86\u4fe1\u53f7\u6216\u7cfb\u7edf\u89c2\u5bdf\u5230\u4fe1\u53f7\u3001\u72b6\u6001\u66f4\u6539\u3001\u8ba1\u65f6\u5668\u8d85\u65f6 \u6216\u4efb\u4f55\u5176\u4ed6\u503c\u5f97\u6ce8\u610f\u7684\u6d3b\u52a8\u800c\u53d1\u751f\u7684\u3002 \u4f8b\u5982\uff0c\u8bbe\u5907\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7535\u6c60\u7535\u91cf\u4f4e\u6216\u865a\u62df\u673a\u5373\u5c06\u6267\u884c\u8ba1\u5212\u7684\u91cd\u542f\u800c\u8fdb\u5165\u8b66\u62a5\u72b6\u6001\u3002 Event/\u4e8b\u4ef6 \u00b6 \u201c\u4e8b\u4ef6\u201d\u662f\u8868\u793a\u4e00\u6761\"\u53d1\u751f\"\u53ca\u5176\u4e0a\u4e0b\u6587\u7684\u6570\u636e\u8bb0\u5f55\u3002 \u4e8b\u4ef6\u4ece\u4e8b\u4ef6\u751f\u4ea7\u8005\uff08\u6e90\uff09\u8def\u7531\u5230\u5bf9\u5b83\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\u6d88\u8d39\u8005\u3002 \u4e8b\u4ef6\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u5e2e\u52a9\u5b8c\u6210\u8def\u7531\u64cd\u4f5c\uff0c\u4f46\u4e8b\u4ef6\u4e0d\u4f1a\u6807\u8bc6\u7279\u5b9a\u7684\u8def\u7531\u76ee\u7684\u5730\u3002 \u4e8b\u4ef6\u5c06\u5305\u542b\u4e24\u79cd\u7c7b\u578b\u7684\u4fe1\u606f\uff1a\u8868\u793a\"\u53d1\u751f\"\u7684 \u4e8b\u4ef6\u6570\u636e \u548c\u63d0\u4f9b\u6709\u5173\u4e8b\u4ef6\u7684\u73af\u5883\u4fe1\u606f\u7684 \u4e0a\u4e0b\u6587 \u5143\u6570\u636e\u3002 \u4e00\u6b21\"\u53d1\u751f\"\u53ef\u80fd\u5bfc\u81f4\u591a\u4e2a\u4e8b\u4ef6\u7684\u4ea7\u751f\u3002 Producer/\u751f\u4ea7\u8005 \u00b6 \u201c\u751f\u4ea7\u8005\u201d\u662f\u4e00\u79cd\u7279\u5b9a\u7684\u5b9e\u4f8b\u3001\u8fdb\u7a0b\u6216\u8bbe\u5907\uff0c\u5b83\u80fd\u591f\u521b\u5efa\u7528\u6765\u63cf\u8ff0 CloudEvent \u7684\u6570\u636e\u7ed3\u6784\u3002 Source/\u6e90 \u00b6 \"\u6e90\"\u662f\u4e8b\u4ef6\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u3002\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5b83\u53ef\u80fd\u7531\u591a\u4e2a \u751f\u4ea7\u8005 \u7ec4\u6210\u3002 \u5982\u679c\u4e00\u4e2a\u6e90\u65e0\u6cd5\u67e5\u770b\u5230 CloudEvents\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u6709\u5916\u90e8\u7684\u751f\u4ea7\u8005\u5728\u4ee3\u66ff\u6e90\u6765\u751f\u4ea7 CloudEvent\u3002 Consumer/\u6d88\u8d39\u8005 \u00b6 \u4e00\u4e2a\u201c\u6d88\u8d39\u8005\u201d\u4f1a\u63a5\u6536\u4e8b\u4ef6\u5e76\u6839\u636e\u4e8b\u4ef6\u91c7\u53d6\u4e00\u5b9a\u7684\u884c\u4e3a\u3002 \u5b83\u4f7f\u7528\u4e0a\u4e0b\u6587\u73af\u5883\u548c\u4e8b\u4ef6\u6570\u636e\u6765\u6267\u884c\u4e00\u4e9b\u903b\u8f91\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65b0\u4e8b\u4ef6\u7684\u53d1\u751f\u3002 Intermediary/\u4e2d\u95f4\u4eba \u00b6 \u4e00\u4e2a\u201c\u4e2d\u95f4\u4eba\u201d\u4f1a\u63a5\u6536\u5305\u542b\u4e8b\u4ef6\u7684\u6d88\u606f\uff0c\u5e76\u5c06\u5176\u8f6c\u53d1\u7ed9\u4e0b\u4e00\u4e2a\u63a5\u6536\u8005\uff0c\u4f46\u8be5\u63a5\u6536\u8005\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u4e2d\u95f4\u4eba\u6216\u4e8b\u4ef6 \u6d88\u8d39\u8005 \u3002 \u4e2d\u95f4\u4eba\u7684\u5178\u578b\u4efb\u52a1\u5c31\u662f\u6839\u636e \u4e0a\u4e0b\u6587 \u73af\u5883\u4e2d\u7684\u4fe1\u606f\u5c06\u4e8b\u4ef6\u8def\u7531\u5230\u63a5\u6536\u8005\u3002 Context/\u4e0a\u4e0b\u6587 \u00b6 \u4e0a\u4e0b\u6587\u73af\u5883\u5143\u6570\u636e\u88ab\u5c01\u88c5\u5728 \u4e0a\u4e0b\u6587-\u5c5e\u6027 \u4e2d\u3002 \u5de5\u5177\u548c\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528\u6b64\u4fe1\u606f\u6765\u8bc6\u522b\u4e8b\u4ef6\u4e0e\u7cfb\u7edf\u65b9\u9762\u6216\u4e8b\u4ef6\u4e0e\u5176\u4ed6\u4e8b\u4ef6\u7684\u5173\u7cfb\u3002 Data/\u6570\u636e \u00b6 Data \u63cf\u8ff0\u7684\u662f\u5173\u4e8e\"\u4e8b\u4ef6\u53d1\u751f\"\u7684\u7279\u5b9a\u57df\u4fe1\u606f\uff08\u5373\u6709\u6548\u8d1f\u8f7d)\u3002\u8fd9\u53ef\u80fd\u5305\u62ec\u6709\u5173\u201c\u4e8b\u4ef6\u53d1\u751f\u201d\u7684\u4fe1\u606f\u3001\u6709\u5173\u5df2\u66f4\u6539\u6570\u636e\u7684\u8be6\u7ec6\u4fe1\u606f\u7b49\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u4e8b\u4ef6\u6570\u636e \u90e8\u5206\u3002 Event Format/\u4e8b\u4ef6\u683c\u5f0f \u00b6 \u4e00\u4e2a\u4e8b\u4ef6\u683c\u5f0f\u4f1a\u6307\u5b9a\u5982\u4f55\u5c06 CloudEvent \u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u3002 \u72ec\u7acb\u4e8b\u4ef6\u683c\u5f0f\uff08\u4f8b\u5982 JSON \u683c\u5f0f \uff09\u6307\u5b9a\u72ec\u7acb\u4e8e\u4efb\u4f55\u534f\u8bae\u6216\u5b58\u50a8\u4ecb\u8d28\u7684\u5e8f\u5217\u5316\u3002 \u534f\u8bae\u7ed1\u5b9a\u53ef\u4ee5\u5b9a\u4e49\u4f9d\u8d56\u4e8e\u534f\u8bae\u7684\u683c\u5f0f\u3002 Message/\u6d88\u606f \u00b6 \u4e8b\u4ef6\u901a\u8fc7\u6d88\u606f\u4ece\u6e90\u4f20\u8f93\u5230\u76ee\u6807\u3002 \u201c\u7ed3\u6784\u5316\u6a21\u5f0f\u6d88\u606f\u201d\u662f\u4e00\u79cd\u4f7f\u7528\u72ec\u7acb\u4e8b\u4ef6\u683c\u5f0f\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5b8c\u5168\u7f16\u7801\u5e76\u5b58\u50a8\u5728\u6d88\u606f\u4f53\u4e2d\u7684\u6d88\u606f\u3002 \u201c\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6d88\u606f\u201d\u4f1a\u5c06\u4e8b\u4ef6\u6570\u636e\u5b58\u50a8\u5728\u6d88\u606f\u4f53\u4e2d\uff0c\u5e76\u5c06\u4e8b\u4ef6\u5c5e\u6027\u4f5c\u4e3a\u6d88\u606f\u5143\u6570\u636e\u7684\u4e00\u90e8\u5206\u5b58\u50a8\u4e0b\u6765\u3002 Protocol/\u534f\u8bae \u00b6 \u6d88\u606f\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u884c\u4e1a\u6807\u51c6\u534f\u8bae\uff08\u4f8b\u5982 HTTP\u3001AMQP\u3001MQTT\u3001SMTP\uff09\u3001\u5f00\u6e90\u534f\u8bae\uff08\u4f8b\u5982 Kafka\u3001NATS\uff09\u6216\u5e73\u53f0/\u4f9b\u5e94\u5546 \u4e13\u6709\u534f\u8bae\uff08\u4f8b\u5982 AWS Kinesis\u3001Azure \u4e8b\u4ef6\u7f51\u683c\uff09\u4f20\u8f93\u3002 Protocol Binding/\u534f\u8bae\u7ed1\u5b9a \u00b6 \u534f\u8bae\u7ed1\u5b9a\u63cf\u8ff0\u4e86\u5982\u4f55\u901a\u8fc7\u7ed9\u5b9a\u7684\u534f\u8bae\u53d1\u9001\u548c\u63a5\u6536\u4e8b\u4ef6\u3002 \u534f\u8bae\u7ed1\u5b9a\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 \u4e8b\u4ef6\u683c\u5f0f \uff0c\u5c06\u4e8b\u4ef6\u76f4\u63a5\u6620\u5c04\u5230\u4f20\u8f93\u5305\u7684\u6b63\u6587\uff0c\u6216\u8005\u53ef\u4ee5\u4e3a\u5305\u63d0\u4f9b\u989d\u5916\u7684\u683c\u5f0f\u548c\u7ed3\u6784\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u5316\u6a21\u5f0f\u6d88\u606f\u7684\u5305\u88c5\u5668\uff0c\u6216\u8005\u53ef\u4ee5\u5c06\u591a\u4e2a\u6d88\u606f\u4e00\u8d77\u6279\u5904\u7406\u5230\u4f20\u8f93\u5305\u6b63\u6587\u4e2d\u3002 Context Attributes/\u4e0a\u4e0b\u6587\u5c5e\u6027 \u00b6 \u6bcf\u4e2a\u7b26\u5408\u672c\u89c4\u8303\u7684 CloudEvent \u5fc5\u987b\u5305\u62ec\u6307\u5b9a\u4e3a REQUIRED/ \u5fc5\u8981 \u7684\u4e0a\u4e0b\u6587\u5c5e\u6027\uff0c \u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a OPTIONAL \u53ef\u9009\u7684\u4e0a\u4e0b\u6587\u5c5e\u6027\uff0c\u5e76\u4e14\u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a \u6269\u5c55\u5c5e\u6027 \u3002 \u6bcf\u4e2a\u4e0a\u4e0b\u6587\u5c5e\u6027\u53ea\u80fd\u5728\u4e00\u4e2a CloudEvent \u51fa\u73b0\u4e00\u6b21\u3002\u672c\u89c4\u8303\u4e2d\u5b9a\u4e49\u7684\u4e0a\u4e0b\u6587\u5c5e\u6027\uff08\u5bf9\u6807\u6269\u5c55\u4e0a\u4e0b\u6587\u5c5e\u6027\uff09\u79f0\u4e3a\u201c\u6838\u5fc3\u4e0a\u4e0b\u6587\u5c5e\u6027\u201d\u3002 \u8fd9\u4e9b\u5c5e\u6027\u867d\u7136\u63cf\u8ff0\u4e86\u4e8b\u4ef6\uff0c\u4f46\u88ab\u8bbe\u8ba1\u4e3a\u53ef\u4ee5\u72ec\u7acb\u4e8e\u4e8b\u4ef6\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u8fd9\u5141\u8bb8\u5728\u4e0d\u53cd\u5e8f\u5217\u5316\u4e8b\u4ef6\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u76ee\u7684\u5730\u68c0\u67e5\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u5c5e\u6027\u3002 Naming Convention/\u547d\u540d\u7ea6\u5b9a \u00b6 CloudEvents \u89c4\u8303\u5b9a\u4e49\u4e86\u5230\u5404\u79cd\u534f\u8bae\u548c\u7f16\u7801\u7684\u6620\u5c04\uff0c\u968f\u9644\u7684 CloudEvents SDK \u9762\u5411\u5404\u79cd\u8fd0\u884c\u65f6\u548c\u7f16\u7a0b\u8bed\u8a00\u3002 \u5176\u4e2d\u4e00\u4e9b\u5c06\u5143\u6570\u636e\u5143\u7d20\u533a\u5206\u5927\u5c0f\u5199\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u533a\u5206\uff0c\u5e76\u4e14\u5355\u4e2a CloudEvent \u53ef\u80fd\u901a\u8fc7\u6d89\u53ca\u5230\u534f\u8bae\u3001\u7f16\u7801\u548c\u8fd0\u884c\u65f6\u6df7\u5408\u7684\u591a\u4e2a\u8dc3\u70b9\u8fdb\u884c\u8def\u7531\u3002 \u56e0\u6b64\uff0c\u672c\u89c4\u8303\u9650\u5236\u4e86\u6240\u6709\u5c5e\u6027\u7684\u53ef\u7528\u5b57\u7b26\u96c6\uff0c\u4ee5\u9632\u6b62\u533a\u5206\u5927\u5c0f\u5199\u95ee\u9898\u6216\u4e0e\u901a\u7528\u8bed\u8a00\u4e2d\u6807\u8bc6\u7b26\u7684\u5408\u6cd5\u5b57\u7b26\u96c6\u51b2\u7a81\u95ee\u9898\u3002 \u5728\u8de8\u4f20\u8f93\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u65f6\uff0c\u4e3a\u4e86\u6700\u5927\u5316\u4e92\u64cd\u4f5c\u6027\u548c\u53ef\u79fb\u690d\u6027\uff0cCloudEvents \u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u7531\u6765\u81ea ASCII \u5b57\u7b26\u96c6\u7684\u5c0f\u5199\u5b57\u6bcd\uff08\u201ca\u201d\u5230\u201cz\u201d\uff09\u6216\u6570\u5b57\uff08\u201c0\u201d\u5230\u201c9\u201d\uff09\u7ec4\u6210\u3002 \u5c5e\u6027\u540d\u79f0\u5e94\u8be5\u662f\u63cf\u8ff0\u6027\u7684\u548c\u7b80\u6d01\u7684\uff0c\u5e76\u4e14\u957f\u5ea6\u4e0d\u5e94\u8d85\u8fc7 20 \u4e2a\u5b57\u7b26\u3002 CloudEvent \u5c5e\u6027\u4e0d\u80fd\u4f7f\u7528 data \u547d\u540d\uff1b\u56e0\u4e3a\u5b83\u662f\u4e3a\u67d0\u4e9b\u4e8b\u4ef6\u683c\u5f0f\u9884\u7559\u7684\u3002 Type System/\u7c7b\u578b\u7cfb\u7edf \u00b6 \u4ee5\u4e0b\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u53ef\u7528\u4e8e\u5c5e\u6027\u3002 \u8fd9\u4e9b\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e00\u79cd\u90fd\u53ef\u4ee5\u7531\u4e0d\u540c\u7684\u4e8b\u4ef6\u683c\u5f0f\u548c\u534f\u8bae\u5143\u6570\u636e\u5b57\u6bb5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8868\u793a\u3002 \u672c\u89c4\u8303\u4e3a\u6240\u6709\u5b9e\u73b0\u5fc5\u987b\u652f\u6301\u7684\u6bcf\u79cd\u7c7b\u578b\u5b9a\u4e49\u4e86\u89c4\u8303\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u3002 Boolean - \u201ctrue\u201d\u6216\u201cfalse\u201d\u7684\u5e03\u5c14\u503c\u3002 \u5b57\u7b26\u4e32\u7f16\u7801\uff1a\u533a\u5206\u5927\u5c0f\u5199\u7684 true \u6216 false \u503c\u3002 Integer -\u8303\u56f4\u5728 -2,147,483,648 \u5230 +2,147,483,647 \uff08\u5305\u542b\uff09\u4e4b\u95f4\u7684\u6574\u6570\u3002 \u8fd9\u662f\u6709\u7b26\u53f7 32 \u4f4d\u4e8c\u8fdb\u5236\u8865\u7801\u7f16\u7801\u7684\u8303\u56f4\u3002 \u4e8b\u4ef6\u683c\u5f0f\u4e0d\u5fc5\u4f7f\u7528\u6b64\u7f16\u7801\uff0c\u4f46\u5b83\u4eec\u5fc5\u987b\u4f7f\u7528\u5728\u6b64\u8303\u56f4\u5185\u7684 Integer \u503c\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: \u7b26\u5408 RFC 7159, \u7b2c 6 \u8282 JSON \u6570\u5b57\u7684\u6574\u6570\u90e8\u5206 String - \u5141\u8bb8\u7684 Unicode \u5b57\u7b26\u5e8f\u5217\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528\u4ee5\u4e0b\u5b57\u7b26\uff1a \u8303\u56f4 U+0000-U+001F \u548c U+007F-U+009F\uff08\u5305\u542b\u9996\u5c3e\uff09\u4e2d\u7684\u201c\u63a7\u5236\u5b57\u7b26\u201d\uff0c \u56e0\u4e3a\u5927\u591a\u6570\u6ca1\u6709\u5546\u5b9a\u7684\u542b\u4e49\uff0c\u8fd8\u6709\u4e00\u4e9b\uff0c\u4f8b\u5982 U+000A\uff08\u6362\u884c\u7b26\uff09\uff0c \u5728\u5982 HTTP \u8bf7\u6c42\u5934\u4e4b\u7c7b\u7684\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u53ef\u7528\u3002 - \u88ab Unicode \u6807\u8bc6\u4e3a\u975e\u5b57\u7b26\u7684 \u4ee3\u7801\u70b9\u3002 \u88ab Unicode \u6807\u8bc6\u4e3a\u4ee3\u7406\u9879\u7684\u4ee3\u7801\u70b9, \u8303\u56f4 U+D800-U+DBFF \u548c U+DC00-U+DFFF\uff08\u5305\u542b\u9996\u5c3e\uff09 , \u9664\u975e\u88ab\u5408\u7406\u7684\u7528\u4f5c\u4ee3\u7406\u5bf9. \u56e0\u6b64\uff08\u5728 JSON \u7b26\u53f7\u4e2d\uff09 \u201cuDEAD\u201d\u662f\u65e0\u6548\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u672a\u914d\u5bf9\u7684\u4ee3\u7406\uff0c\u800c\u201cuD800uDEAD\u201d\u662f\u5408\u6cd5\u7684\u3002 Binary - \u5b57\u8282\u5e8f\u5217. \u5b57\u7b26\u4e32\u7f16\u7801: Base64 \u7f16\u7801\uff0c\u7b26\u5408 RFC4648 . URI - \u7edd\u5bf9\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: RFC 3986 \u7b2c 4.3 \u8282 \u4e2d\u5b9a\u4e49\u7684 Absolute URI \u3002 URI-reference - \u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\u5f15\u7528\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: RFC 3986 \u7b2c 4.1 \u8282 \u4e2d\u5b9a\u4e49\u7684 URI-reference \u3002 Timestamp - \u4f7f\u7528\u516c\u5386\u7684\u65e5\u671f\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: RFC 3339 \u3002 \u6240\u6709\u4e0a\u4e0b\u6587\u5c5e\u6027\u503c\u5fc5\u987b\u662f\u4e0a\u9762\u5217\u51fa\u7684\u7c7b\u578b\u4e4b\u4e00\u3002 \u5c5e\u6027\u503c\u53ef\u4ee5\u8868\u793a\u4e3a\u539f\u751f\u7c7b\u578b\u6216\u89c4\u8303\u5b57\u7b26\u4e32\u3002 \u5f53\u5f3a\u7c7b\u578b\u7f16\u7a0b\u8bed\u8a00\u8868\u793a CloudEvent \u6216\u4efb\u4f55\u6269\u5c55\u65f6\uff0c \u5fc5\u987b\u80fd\u591f\u5728\u89c4\u8303\u5b57\u7b26\u4e32\u7f16\u7801\u4e0e\u5bf9\u5e94\u62bd\u8c61\u7c7b\u578b\u7684\u8fd0\u884c\u65f6/\u7f16\u7a0b\u8bed\u8a00\u7c7b\u578b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 \u4f8b\u5982\uff0c\u5728\u7ed9\u5b9a\u7684\u5b9e\u73b0\u4e2d\uff0c time \u5c5e\u6027\u53ef\u80fd\u7531\u7f16\u7a0b\u8bed\u8a00\u7684\u672c\u5730\u65f6\u95f4\u7c7b\u578b\u8868\u793a\uff0c\u4f46\u5b83\u5fc5\u987b\u662f\u53ef\u8bbe\u7f6e\u63d0\u4f9b RFC3339 \u5b57\u7b26\u4e32\u7684\uff0c \u5e76\u4e14\u5f53\u6620\u5c04\u5230 HTTP \u6d88\u606f\u5934\u65f6\uff0c\u5b83\u5fc5\u987b\u53ef\u8f6c\u6362\u4e3a RFC3339 \u5b57\u7b26\u4e32\u3002 CloudEvents \u534f\u8bae\u7ed1\u5b9a\u6216\u4e8b\u4ef6\u683c\u5f0f\u5b9e\u73b0\u540c\u6837\u5fc5\u987b\u80fd\u591f\u5728\u89c4\u8303\u5b57\u7b26\u4e32\u7f16\u7801\u4e0e\u534f\u8bae\u5143\u6570\u636e\u5b57\u6bb5\u4e2d\u7684\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 Timestamp \u7c7b\u578b\u7684\u5c5e\u6027\u503c\u786e\u5b9e\u53ef\u80fd\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8def\u7531\u901a\u8fc7\u591a\u4e2a\u8dc3\u70b9\uff0c \u5e76\u4e14\u4ec5\u5728\u751f\u4ea7\u8005\u548c\u6700\u7ec8\u6d88\u8d39\u8005\u5904\u5b9e\u73b0\u4e3a\u672c\u5730\u8fd0\u884c\u65f6/\u8bed\u8a00\u7c7b\u578b\u3002 Timestamp \u7c7b\u578b\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u672c\u5730\u534f\u8bae\u7c7b\u578b\u8def\u7531\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7aef\u6620\u5c04\u5230/\u4ece\u5404\u81ea\u7684\u8bed\u8a00/\u8fd0\u884c\u65f6\u7c7b\u578b\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u8f6c\u4e3a\u5b57\u7b26\u4e32\u683c\u5f0f\u3002 \u5e8f\u5217\u5316\u673a\u5236\u7684\u9009\u62e9\u5c06\u51b3\u5b9a\u4e0a\u4e0b\u6587\u5c5e\u6027\u548c\u4e8b\u4ef6\u6570\u636e\u5c06\u5982\u4f55\u5e8f\u5217\u5316\u3002 \u4f8b\u5982\uff0c\u5728 JSON \u5e8f\u5217\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0a\u4e0b\u6587\u5c5e\u6027\u548c\u4e8b\u4ef6\u6570\u636e\u53ef\u80fd\u90fd\u51fa\u73b0\u5728\u540c\u4e00\u4e2a JSON \u5bf9\u8c61\u4e2d\u3002 REQUIRED Attributes/\u5fc5\u8981\u5c5e\u6027 \u00b6 \u4e0b\u5217\u5c5e\u6027\u5fc5\u987b\u5728\u6240\u6709\u7684 CloudEvents \u4e2d\u5c55\u793a\uff1a id/\u6807\u8bc6 \u00b6 \u7c7b\u578b: String \u63cf\u8ff0: \u6807\u8bc6\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u751f\u4ea7\u8005\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u4e0d\u540c\u4e8b\u4ef6\u7684 source + id \u662f\u552f\u4e00\u7684\u3002 \u5982\u679c\u91cd\u590d\u7684\u4e8b\u4ef6\u88ab\u91cd\u65b0\u53d1\u9001\uff08\u4f8b\u5982\u7531\u4e8e\u7f51\u7edc\u9519\u8bef\uff09\uff0c\u5b83\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684 id \u3002 \u6d88\u8d39\u8005\u53ef\u4ee5\u5047\u8bbe\u5177\u6709\u76f8\u540c source \u548c id \u7684\u4e8b\u4ef6\u662f\u91cd\u590d\u7684\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32 \u5728\u751f\u4ea7\u8005\u7684\u8303\u56f4\u5185\u5fc5\u987b\u662f\u552f\u4e00\u7684 \u793a\u4f8b: \u4e00\u4e2a\u7531\u751f\u4ea7\u8005\u7ef4\u62a4\u7684\u4e8b\u4ef6\u8ba1\u6570\u5668 \u4e00\u4e2a UUID source/\u4e8b\u4ef6\u6e90 \u00b6 \u7c7b\u578b: URI-reference \u63cf\u8ff0: \u6807\u8bc6\u4e8b\u4ef6\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u80cc\u666f\u3002 \u8fd9\u901a\u5e38\u5305\u62ec\u8bf8\u5982\u4e8b\u4ef6\u6e90\u7c7b\u578b\u3001\u53d1\u5e03\u4e8b\u4ef6\u7684\u7ec4\u7ec7 \u6216\u4ea7\u751f\u4e8b\u4ef6\u7684\u8fc7\u7a0b\u7b49\u4fe1\u606f\u3002URI \u4e2d\u7f16\u7801\u7684\u6570\u636e\u80cc\u540e\u7684\u786e\u5207\u8bed\u6cd5\u548c\u8bed\u4e49\u7531\u4e8b\u4ef6\u751f\u4ea7\u8005\u5b9a\u4e49\u3002 \u751f\u4ea7\u8005\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u4e0d\u540c\u4e8b\u4ef6\u7684 source + id \u662f\u552f\u4e00\u7684\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u7684\u751f\u4ea7\u8005\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684 source \uff0c \u8fd9\u4f7f\u5f97\u751f\u6210\u552f\u4e00 ID \u53d8\u5f97\u5bb9\u6613\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u751f\u4ea7\u8005\u5c06\u62e5\u6709\u76f8\u540c\u7684\u6765\u6e90\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528 UUIDs\u3001URNs\u3001DNS \u6743\u5a01\u673a\u6784\u6216\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u6848\u6765\u521b\u5efa\u552f\u4e00\u7684 source \u6807\u8bc6\u7b26\u3002 \u4e00\u4e2a\u6765\u6e90\u53ef\u4ee5\u5305\u62ec\u591a\u4e2a\u751f\u4ea7\u8005\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u751f\u4ea7\u8005\u5fc5\u987b\u534f\u4f5c\u4ee5\u786e\u4fdd\u6bcf\u4e2a\u4e0d\u540c\u4e8b\u4ef6\u7684 source + id \u90fd\u662f\u552f\u4e00\u7684\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a URI-reference \u63a8\u8350\u4f7f\u7528 \u7edd\u5bf9 URI \u793a\u4f8b \u5177\u6709 DNS \u6743\u9650\u7684 Internet \u8303\u56f4\u552f\u4e00 URI\uff1a https://github.com/cloudevents mailto:cncf-wg-serverless@lists.cncf.io \u5177\u6709 UUID \u7684\u901a\u7528\u552f\u4e00 URN\uff1a urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66 \u5e94\u7528\u7a0b\u5e8f\u4e13\u6709\u7684\u6807\u8bc6\u7b26 /cloudevents/spec/pull/123 /sensors/tn-1234567/alerts 1-555-123-4567 specversion/\u89c4\u8303\u7248\u672c \u00b6 \u7c7b\u578b: String \u63cf\u8ff0: \u4e8b\u4ef6\u4f7f\u7528\u7684 CloudEvents \u89c4\u8303\u7684\u7248\u672c\u3002 \u8fd9\u8ba9\u89e3\u91ca\u4e0a\u4e0b\u6587\u73af\u5883\u66f4\u5bb9\u6613\u3002 \u5f53\u5f15\u7528\u8fd9\u4e2a\u7248\u672c\u7684\u89c4\u8303\u65f6\uff0c\u517c\u5bb9\u7684\u4e8b\u4ef6\u751f\u4ea7\u8005\u5fc5\u987b\u4f7f\u7528 1.0 \u7684\u503c\u3002 \u76ee\u524d\uff0c\u6b64\u5c5e\u6027\u4ec5\u5305\u542b\u201c\u4e3b\u8981\u201d\u548c\u201c\u6b21\u8981\u201d\u7248\u672c\u53f7\u3002\u8fd9\u5141\u8bb8\u5bf9\u89c4\u8303\u8fdb\u884c\u201c\u8865\u4e01\u201d\u66f4\u6539\uff0c\u800c\u65e0\u9700\u66f4\u6539\u5e8f\u5217\u5316\u4e2d\u6b64\u5c5e\u6027\u7684\u503c\u3002 \u6ce8\u610f\uff1a\u5bf9\u4e8e\u201c\u5019\u9009\u53d1\u5e03\u201d\u7248\u672c\uff0c\u540e\u7f00\u53ef\u80fd\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32 type/\u7c7b\u578b \u00b6 \u7c7b\u578b: String \u63cf\u8ff0: \u8be5\u5c5e\u6027\u5305\u542b\u4e00\u4e2a\u503c\uff0c\u63cf\u8ff0\u4e0e\u539f\u59cb\u4e8b\u4ef6\u76f8\u5173\u7684\u4e8b\u4ef6\u7c7b\u578b\u3002 \u8be5\u5c5e\u6027\u901a\u5e38\u7528\u4e8e\u8def\u7531\u3001\u53ef\u89c2\u5bdf\u6027\u3001\u7b56\u7565\u5b9e\u65bd\u7b49\u3002\u5176\u683c\u5f0f\u662f\u751f\u4ea7\u8005\u5b9a\u4e49\u7684\uff0c\u53ef\u80fd\u5305\u62ec\u8bf8\u5982 type \u7248\u672c\u4e4b\u7c7b\u7684\u4fe1\u606f\u3002 -\u4ece \u5165\u95e8\u6587\u6863-\u5c5e\u6027\u7248\u672c\u63a7\u5236 \u4e2d\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32 \u5e94\u8be5\u4ee5\u53cd\u5411 DNS \u540d\u79f0\u4f5c\u4e3a\u524d\u7f00\u3002\u8be5\u524d\u7f00\u57df\u8868\u660e\u4e86\u5b9a\u4e49\u6b64\u4e8b\u4ef6\u7c7b\u578b\u8bed\u4e49\u7684\u7ec4\u7ec7\u3002 \u793a\u4f8b com.github.pull_request.opened com.example.object.deleted.v2 OPTIONAL Attributes/\u53ef\u9009\u5c5e\u6027 \u00b6 \u4e0b\u5217\u5c5e\u6027\u5728 CloudEvents \u4e2d\u662f\u53ef\u9009\u7684\u3002\u5728 \u7b26\u53f7\u7ea6\u5b9a \u4e2d\u67e5\u770b\u66f4\u591a OPTIONAL \u53ef\u9009\u5b9a\u4e49\u7684\u4fe1\u606f\u3002 datacontenttype/data \u5185\u5bb9\u7c7b\u578b \u00b6 \u7c7b\u578b: String RFC 2046 \u63cf\u8ff0: data \u503c\u7684\u5185\u5bb9\u7c7b\u578b\u3002 \u6b64\u5c5e\u6027\u4f7f data \u80fd\u591f\u627f\u8f7d\u4efb\u4f55\u7c7b\u578b\u7684\u5185\u5bb9\uff0c \u56e0\u6b64\u683c\u5f0f\u548c\u7f16\u7801\u53ef\u80fd\u4e0e\u6240\u9009\u4e8b\u4ef6\u683c\u5f0f\u7684\u4e0d\u540c\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528 JSON envelope \u683c\u5f0f\u5448\u73b0\u7684\u4e8b\u4ef6\u53ef\u80fd\u5728\u6570\u636e\u4e2d\u643a\u5e26 XML \u7684\u6709\u6548\u8d1f\u8f7d\uff0c\u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u901a\u77e5\u6d88\u8d39\u8005 \u8bbe\u7f6e\"application/xml\"\u3002 \u5173\u4e8e data \u5185\u5bb9\u5982\u4f55\u63d0\u4f9b\u4e0d\u540c\u7684 datacontenttype \u7684\u503c\u7684\u89c4\u5219\u5728\u4e8b\u4ef6\u683c\u5f0f\u89c4\u8303\u4e2d\u5b9a\u4e49\u3002 \u4f8b\u5982\uff0cJSON \u4e8b\u4ef6\u683c\u5f0f\u5b9a\u4e49\u4e86 3.1 \u8282 \u4e2d\u7684\u5173\u7cfb\u3002 \u5bf9\u4e8e\u67d0\u4e9b\u4e8c\u8fdb\u5236\u6a21\u5f0f\u534f\u8bae\u7ed1\u5b9a\uff0c\u6b64\u5b57\u6bb5\u76f4\u63a5\u80fd\u6620\u5c04\u5230\u76f8\u5e94\u534f\u8bae\u7684\u5185\u5bb9\u7c7b\u578b\u7684\u5143\u6570\u636e\u5c5e\u6027\u4e0a\u3002 \u4e8c\u8fdb\u5236\u6a21\u5f0f\u548c\u5185\u5bb9\u7c7b\u578b\u5143\u6570\u636e\u6620\u5c04\u7684\u89c4\u8303\u89c4\u5219\u53ef\u4ee5\u5728\u5404\u81ea\u7684\u534f\u8bae\u4e2d\u627e\u5230\u3002 \u5728\u67d0\u4e9b\u4e8b\u4ef6\u683c\u5f0f\u4e2d\uff0c\u53ef\u4ee5\u7701\u7565 datacontenttype \u5c5e\u6027\u3002 \u4f8b\u5982\uff0c\u5982\u679c JSON \u683c\u5f0f\u7684\u4e8b\u4ef6\u6ca1\u6709 datacontenttype \u5c5e\u6027\uff0c \u5219\u8868\u793a\u8be5 data \u662f\u7b26\u5408\u201capplication/json\u201d\u5a92\u4f53\u7c7b\u578b\u7684 JSON \u503c\u3002 \u6362\u53e5\u8bdd\u8bf4\uff1a\u4e00\u4e2a\u6ca1\u6709 datacontenttype \u7684 JSON \u683c\u5f0f\u7684\u4e8b\u4ef6\u5b8c\u5168\u7b49\u540c\u4e8e \u4e00\u4e2a\u5e26\u6709 datacontenttype=\"application/json\" \u7684\u4e8b\u4ef6\u3002 \u5f53\u5c06\u6ca1\u6709 datacontenttype \u5c5e\u6027\u7684\u4e8b\u4ef6\u6d88\u606f\u8f6c\u6362\u4e3a\u4e0d\u540c\u7684\u683c\u5f0f\u6216\u534f\u8bae\u7ed1\u5b9a\u65f6\uff0c \u76ee\u6807 datacontenttype \u5e94\u8be5\u663e\u5f0f\u8bbe\u7f6e\u4e3a\u4e8b\u4ef6\u6e90\u7684\u9690\u542b\u6216\u9ed8\u8ba4\u7684 datacontenttype \u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5219\u5fc5\u987b\u9075\u5b88 RFC 2046 \u5236\u5b9a\u7684\u683c\u5f0f \u5a92\u4f53\u7c7b\u578b\u793a\u4f8b IANA Media Types dataschema/\u6570\u636e\u6a21\u5f0f \u00b6 \u7c7b\u578b: URI \u63cf\u8ff0: \u6807\u8bc6 data \u9075\u5b88\u7684\u89c4\u8303\u3002 \u5bf9\u6a21\u5f0f\u7684\u4e0d\u517c\u5bb9\u7684\u66f4\u6539\u5e94\u8be5\u7531\u4e0d\u540c\u7684 URI \u4f53\u73b0\u3002 \u5728 \u5165\u95e8\u6587\u6863-\u5c5e\u6027\u7248\u672c\u63a7\u5236 \u4e2d\u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5fc5\u987b\u662f\u975e\u7a7a\u7684 URI subject/\u4e3b\u9898 \u00b6 \u7c7b\u578b: String \u63cf\u8ff0: \u8fd9\u4e2a\u5c5e\u6027\u63cf\u8ff0\u4e86\u4e8b\u4ef6\u751f\u4ea7\u8005 (\u7531 source \u6807\u8bc6) \u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u7684\u4e3b\u9898\u4fe1\u606f\u3002 \u5728\u53d1\u5e03-\u8ba2\u9605\u573a\u666f\u4e2d\uff0c\u8ba2\u9605\u8005\u901a\u5e38\u4f1a\u8ba2\u9605 source \u53d1\u51fa\u7684\u4e8b\u4ef6\uff0c \u4f46\u5982\u679c source \u7684\u4e0a\u4e0b\u6587\u73af\u5883\u5177\u6709\u5185\u90e8\u5b50\u7ed3\u6784\uff0c \u5219\u5355\u72ec\u7684 source \u6807\u8bc6\u7b26\u53ef\u80fd\u4e0d\u8db3\u4ee5\u4f5c\u4e3a\u4efb\u4f55\u6307\u5b9a\u4e8b\u4ef6\u7684\u9650\u5b9a\u7b26\u3002 \u5f53\u4e2d\u95f4\u4ef6\u65e0\u6cd5\u89e3\u91ca data \u5185\u5bb9\u65f6\uff0c\u5728\u4e0a\u4e0b\u6587\u5143\u6570\u636e\u4e2d\u8bc6\u522b\u4e8b\u4ef6\u7684\u4e3b\u9898\uff08\u76f8\u5bf9\u4e8e\u4ec5\u4ec5\u5728 data \u8d1f\u8f7d\u4e2d\uff09\u5728\u901a\u8fc7\u8ba2\u9605\u8fc7\u6ee4\u573a\u666f\u4e2d\u7279\u522b\u6709\u7528\u3002 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u8ba2\u9605\u8005\u53ef\u80fd\u4ec5\u4ec5\u5bf9 blobs \u4e2d\u540d\u5b57\u4ee5 .jpg \u6216\u8005 .jpeg \u7ed3\u5c3e\u548c\u53ef\u4ee5\u4e3a\u8be5\u4e8b\u4ef6\u5b50\u96c6\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u6709\u6548\u7684\u5b57\u7b26\u4e32\u540e\u7f00\u8fc7\u6ee4\u5668\u7684 subject \u5c5e\u6027\u611f\u5174\u8da3\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32 \u793a\u4f8b: \u8ba2\u9605\u8005\u53ef\u80fd\u5bf9\u5728 blob \u5728 blob \u5b58\u50a8\u5bb9\u5668\u4e2d\u521b\u5efa\u7684\u65f6\u5019\u611f\u5174\u8da3\u5e76\u8ba2\u9605\u3002 \u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\uff0c\u4e8b\u4ef6 source \u6807\u793a\u51fa\u8ba2\u9605\u7684\u8303\u56f4\uff08\u5b58\u50a8\u5bb9\u5668\uff09\uff0c type \u6807\u8bc6\u51fa blob \u521b\u5efa\" \u8fd9\u4e2a\u4e8b\u4ef6\uff0c id \u552f\u4e00\u6807\u8bc6\u51fa\u4e8b\u4ef6\u793a\u4f8b\uff0c\u4ee5\u533a\u5206\u5df2\u521b\u5efa\u540c\u540d blob \u7684\u4e8b\u4ef6\uff0c \u800c\u65b0\u521b\u5efa\u7684 blob \u7684\u540d\u5b57\u53ef\u4ee5\u653e\u5728 subject \u5c5e\u6027\u4e2d\uff1a source : https://example.com/storage/tenant/container subject : mynewfile.jpg time/\u65f6\u95f4 \u00b6 \u7c7b\u578b: Timestamp \u63cf\u8ff0: \u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u6233\u3002 \u5982\u679c\u65e0\u6cd5\u786e\u5b9a\u53d1\u751f\u7684\u65f6\u95f4\uff0c\u5219 CloudEvents \u751f\u4ea7\u8005\u53ef\u4ee5\u5c06\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u65f6\u95f4\uff08\u4f8b\u5982\u5f53\u524d\u65f6\u95f4\uff09\u3002 \u4f46\u662f\u5728\u8fd9\u65b9\u9762\uff0c\u540c\u4e00 source \u7684\u6240\u6709\u751f\u4ea7\u8005\u5fc5\u987b\u4fdd\u6301\u4e00\u81f4\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u4e48\u5b83\u4eec\u90fd\u4f7f\u7528\u53d1\u751f\u7684\u5b9e\u9645\u65f6\u95f4\uff0c\u8981\u4e48\u5b83\u4eec\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u7b97\u6cd5\u6765\u786e\u5b9a\u6240\u4f7f\u7528\u7684\u503c\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5219\u5fc5\u987b\u9075\u5b88 RFC 3339 Extension Context Attributes/\u6269\u5c55\u4e0a\u4e0b\u6587\u5c5e\u6027 \u00b6 CloudEvent \u53ef\u4ee5\u5305\u542b\u4efb\u610f\u6570\u91cf\u7684\u5177\u6709\u4e0d\u540c\u540d\u79f0\u7684\u9644\u52a0\u4e0a\u4e0b\u6587\u5c5e\u6027\uff0c\u88ab\u79f0\u4e3a\u201c\u6269\u5c55\u5c5e\u6027\"\u3002 \u6269\u5c55\u5c5e\u6027\u5fc5\u987b\u9075\u5faa\u76f8\u540c\u7684 \u547d\u540d\u7ea6\u5b9a \u5e76\u4f7f\u7528\u4e0e\u6807\u51c6\u5c5e\u6027\u76f8\u540c\u7684 \u7c7b\u578b\u7cfb\u7edf \u3002 \u6269\u5c55\u5c5e\u6027\u5728\u672c\u89c4\u8303\u4e2d\u6ca1\u6709\u5b9a\u4e49\u597d\u7684\u542b\u4e49\uff0c \u5b83\u4eec\u5141\u8bb8\u5916\u90e8\u7cfb\u7edf\u5c06\u5143\u6570\u636e\u9644\u52a0\u5230\u4e8b\u4ef6\uff0c\u5c31\u50cf HTTP \u81ea\u5b9a\u4e49\u8bf7\u6c42\u5934\u4e00\u6837\u3002 \u6269\u5c55\u5c5e\u6027\u603b\u662f\u5982\u6807\u51c6\u5c5e\u6027\u4e00\u6837\uff0c\u6839\u636e\u7ed1\u5b9a\u89c4\u5219\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u7136\u800c\uff0c\u8be5\u89c4\u8303\u4e0d\u963b\u6b62\u6269\u5c55\u5c06\u4e8b\u4ef6\u5c5e\u6027\u503c\u590d\u5236\u5230\u6d88\u606f\u7684\u5176\u4ed6\u90e8\u5206\uff0c \u4ee5\u4fbf\u4e0e\u4e5f\u5176\u5b83\u5904\u7406\u6d88\u606f\u7684\u975e CloudEvents \u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3002 \u5982\u679c\u590d\u5236\u7684\u503c\u4e0e\u4e91\u4e8b\u4ef6\u5e8f\u5217\u5316\u503c\u4e0d\u540c\uff0c\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u6269\u5c55\u89c4\u8303\u5e94\u8be5\u6307\u5b9a\u63a5\u6536\u8005\u5982\u4f55\u89e3\u91ca\u6d88\u606f\u3002 Defining Extensions/\u5b9a\u4e49\u6269\u5c55 \u00b6 \u5728\u3010CloudEvent-\u5c5e\u6027\u6269\u5c55](primer.md#cloudevent-attribute-extensions) \u67e5\u9605\u6709\u5173\u6269\u5c55\u4f7f\u7528\u548c\u5b9a\u4e49\u7b49\u76f8\u5173\u4fe1\u606f\u3002 \u6269\u5c55\u7684\u5b9a\u4e49\u5e94\u8be5\u5b8c\u5168\u5b9a\u4e49\u5c5e\u6027\u7684\u65b9\u65b9\u9762\u9762\u2014\u2014\u4f8b\u5982 \u5b83\u7684\u540d\u79f0\u3001\u7c7b\u578b\u3001\u8bed\u4e49\u542b\u4e49\u548c\u53ef\u80fd\u7684\u503c\u3002 \u65b0\u7684\u6269\u5c55\u5b9a\u4e49\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a\u8db3\u591f\u63cf\u8ff0\u6027\u7684\u540d\u79f0\u6765\u51cf\u5c11\u4e0e\u5176\u4ed6\u6269\u5c55\u7684\u540d\u79f0\u51b2\u7a81\u7684\u673a\u4f1a\u3002 \u7279\u522b\u662f\uff0c\u6269\u5c55\u4f5c\u8005\u5e94\u8be5\u68c0\u67e5 \u6269\u5c55\u6587\u4ef6 \u4e2d\u5df2\u77e5\u7684\u6269\u5c55\u96c6\u2014\u2014\u4e0d\u4ec5\u662f\u53ef\u80fd\u7684\u540d\u79f0\u51b2\u7a81\uff0c\u8fd8\u6709\u76f8\u540c\u76ee\u7684\u51b2\u7a81\u7684\u6269\u5c55\u3002 \u8bb8\u591a\u534f\u8bae\u4e3a\u53d1\u9001\u8005\u63d0\u4f9b\u4e86\u5305\u542b\u989d\u5916\u5143\u6570\u636e\u7684\u80fd\u529b\uff0c\u4f8b\u5982\u4f5c\u4e3a HTTP \u8bf7\u6c42\u5934\u3002 \u867d\u7136\u6ca1\u6709\u5f3a\u5236\u8981\u6c42 CloudEvents \u63a5\u53d7\u8005\u5904\u7406\u548c\u4f20\u9012\u5b83\u4eec\uff0c \u4f46\u5efa\u8bae\u63a5\u53d7\u8005\u901a\u8fc7\u67d0\u79cd\u673a\u5236\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u660e\u786e\u5b83\u4eec\u662f\u975e CloudEvents \u7684\u5143\u6570\u636e\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u8bf4\u660e\u4e86 CloudEvents \u5bf9\u9644\u52a0\u5c5e\u6027\u7684\u9700\u6c42\u3002 \u5728\u8bb8\u591a\u7269\u8054\u7f51\u548c\u4f01\u4e1a\u7528\u4f8b\u4e2d\uff0c\u4e8b\u4ef6\u53ef\u7528\u4e8e\u8de8\u591a\u79cd\u7c7b\u578b\u4e8b\u4ef6\u6267\u884c\u64cd\u4f5c\u7684 serverless \u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 \u4e3a\u4e86\u652f\u6301\u8fd9\u6837\u7684\u7528\u4f8b\uff0c\u4e8b\u4ef6\u751f\u4ea7\u8005\u9700\u8981\u5411\u201c\u4e0a\u4e0b\u6587\u5c5e\u6027\u201d\u6dfb\u52a0\u989d\u5916\u7684\u8eab\u4efd\u5c5e\u6027\uff0c \u4e8b\u4ef6\u6d88\u8d39\u8005\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\u5c06\u8fd9\u4e2a\u4e8b\u4ef6\u4e0e\u5176\u4ed6\u4e8b\u4ef6\u76f8\u5173\u8054\u3002 \u5982\u679c\u6b64\u7c7b\u8eab\u4efd\u5c5e\u6027\u6070\u597d\u662f\u4e8b\u4ef6\u201c\u6570\u636e\u201d\u7684\u4e00\u90e8\u5206\uff0c \u5219\u4e8b\u4ef6\u751f\u4ea7\u8005\u8fd8\u4f1a\u5c06\u8eab\u4efd\u5c5e\u6027\u6dfb\u52a0\u5230\u201c\u4e0a\u4e0b\u6587\u5c5e\u6027\u201d\u4e2d\uff0c \u4ee5\u4fbf\u4e8b\u4ef6\u6d88\u8d39\u8005\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u6b64\u4fe1\u606f\uff0c\u800c\u65e0\u9700\u89e3\u7801\u548c\u68c0\u67e5\u4e8b\u4ef6\u6570\u636e\u3002 \u6b64\u7c7b\u8eab\u4efd\u5c5e\u6027\u8fd8\u53ef\u7528\u4e8e\u5e2e\u52a9\u4e2d\u95f4\u7f51\u5173\u786e\u5b9a\u5982\u4f55\u8def\u7531\u4e8b\u4ef6\u3002 Event Data/\u4e8b\u4ef6\u6570\u636e \u00b6 \u6b63\u5982 \u6570\u636e \u6240\u5b9a\u4e49\u7684\u90a3\u6837\uff0cCloudEvents \u53ef\u4ee5\u5305\u62ec\u6709\u5173\u4e8b\u4ef6\u7684\u7279\u5b9a\u57df\u7684\u4fe1\u606f\u3002 \u8fd9\u4e9b\u4fe1\u606f\u5c06\u88ab\u5c01\u88c5\u5728 data \u4e2d\u3002 \u63cf\u8ff0: \u4e8b\u4ef6\u8d1f\u8f7d\u3002 \u672c\u89c4\u8303\u5bf9\u8be5\u4fe1\u606f\u7684\u7c7b\u578b\u4e0d\u4f5c\u4efb\u4f55\u9650\u5236\u3002 \u5b83\u88ab\u7f16\u7801\u4e3a\u4e00\u79cd\u5a92\u4f53\u683c\u5f0f\uff0c\u8fd9\u79cd\u683c\u5f0f\u7531 datacontenttype \u5c5e\u6027(\u5982 application/json)\u6307\u5b9a\uff0c\u5f53\u5b58\u5728\u8fd9\u4e9b\u76f8\u5e94\u7684\u5c5e\u6027\u65f6\uff0c\u9075\u5faa dataschema \u683c\u5f0f\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 Size Limits/\u5927\u5c0f\u9650\u5236 \u00b6 \u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0cCloudEvents \u5c06\u901a\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u901a\u7528\u4e2d\u95f4\u4eba\u8fdb\u884c\u8f6c\u53d1\uff0c \u6bcf\u4e2a\u4e2d\u95f4\u4eba\u90fd\u53ef\u80fd\u5bf9\u8f6c\u53d1\u4e8b\u4ef6\u7684\u5927\u5c0f\u65bd\u52a0\u9650\u5236\u3002 CloudEvents \u4e5f\u53ef\u80fd\u76f4\u63a5\u88ab\u8def\u7531\u5230\u6d88\u8d39\u8005\uff0c\u5982\u5d4c\u5165\u5f0f\u8bbe\u5907\uff0c \u8fd9\u4e9b\u8bbe\u5907\u662f\u53d7\u5b58\u50a8\u6216\u5185\u5b58\u9650\u5236\u7684\uff0c\u5bf9\u5355\u4e2a\u5927\u578b\u4e8b\u4ef6\u8868\u73b0\u4e0d\u4f73\u3002 \u4e8b\u4ef6\u7684\u201c\u5927\u5c0f\u201d\u662f\u5b83\u7684\u7ebf\u8def\u5927\u5c0f\uff0c\u5305\u62ec\u5728\u7ebf\u8def\u4e0a\u4e3a\u4e8b\u4ef6\u4f20\u8f93\u7684\u6bcf\u4e00\u4f4d\uff1a \u534f\u8bae\u5e27\u5143\u6570\u636e\u3001\u4e8b\u4ef6\u5143\u6570\u636e\u548c\u4e8b\u4ef6\u6570\u636e\uff0c\u57fa\u4e8e\u6240\u9009\u7684\u4e8b\u4ef6\u683c\u5f0f\u548c\u6240\u9009\u7684\u534f\u8bae\u7ed1\u5b9a\u3002 \u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u9700\u8981\u8de8\u4e0d\u540c\u534f\u8bae\u8def\u7531\u4e8b\u4ef6\u6216\u91cd\u65b0\u7f16\u7801\u4e8b\u4ef6\uff0c \u5e94\u7528\u7a0b\u5e8f\u80fd\u4f7f\u7528\u7684\u6548\u7387\u6700\u4f4e\u7684\u534f\u8bae\u548c\u7f16\u7801\uff0c\u90fd\u9700\u8981\u7b26\u5408\u8fd9\u4e9b\u5927\u5c0f\u9650\u5236\uff1a \u4e2d\u95f4\u4eba\u8f6c\u53d1\u7684\u4e8b\u4ef6\u5927\u5c0f\u5fc5\u987b\u4e3a 64 KB \u6216\u66f4\u5c0f\u3002 \u6d88\u8d39\u8005\u5e94\u8be5\u80fd\u63a5\u53d7\u5927\u5c0f\u81f3\u5c11\u4e3a 64 KB \u7684\u4e8b\u4ef6\u3002 \u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e0a\u8ff0\u89c4\u5219\u5c06\u5141\u8bb8\u751f\u4ea7\u8005\u5b89\u5168\u5730\u53d1\u5e03\u6700\u5927 64KB \u7684\u4e8b\u4ef6\u3002 \u8fd9\u91cc\u7684\u5b89\u5168\u610f\u5473\u7740\u751f\u4ea7\u8005\u671f\u671b\u4e8b\u4ef6\u88ab\u6240\u6709\u4e2d\u95f4\u4eba\u63a5\u53d7\u5e76\u5408\u7406\u5730\u8f6c\u53d1\u3002 \u5b83\u662f\u6307\u5728\u4efb\u4f55\u7279\u5b9a\u6d88\u8d39\u8005\u7684\u63a7\u5236\u4e4b\u4e0b\uff0c\u65e0\u8bba\u6d88\u8d39\u8005\u662f\u5426\u7531\u4e8e\u672c\u5730\u8003\u8651\u800c\u9009\u62e9\u63a5\u53d7\u6216\u62d2\u7edd\u8be5\u5927\u5c0f\u7684\u4e8b\u4ef6\u3002 \u901a\u5e38\uff0cCloudEvents \u53d1\u5e03\u8005\u5e94\u8be5\u901a\u8fc7\u907f\u514d\u5c06\u5927\u578b\u6570\u636e\u9879\u5d4c\u5165\u5230\u4e8b\u4ef6\u800c\u4f7f\u7528\u4e8b\u4ef6\u6709\u6548\u94fe\u63a5\u5230\u6b64\u7c7b\u6570\u636e\u9879\uff0c\u6765\u4fdd\u6301\u4e8b\u4ef6\u7d27\u51d1\u3002 \u4ece\u8bbf\u95ee\u63a7\u5236\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u66f4\u5e7f\u6cdb\u7684\u4e8b\u4ef6\u5206\u5e03\u5f0f\u5316\u6709\u5e2e\u52a9\uff0c \u56e0\u4e3a\u901a\u8fc7\u89e3\u6790\u94fe\u63a5\u8bbf\u95ee\u4e0e\u4e8b\u4ef6\u76f8\u5173\u7684\u7ec6\u8282\u80fd\u5b9e\u73b0\u5dee\u5f02\u5316\u8bbf\u95ee\u63a7\u5236\u548c\u9009\u62e9\u6027\u62ab\u9732\uff0c \u800c\u4e0d\u662f\u5c06\u654f\u611f\u8be6\u7ec6\u6570\u636e\u76f4\u63a5\u5d4c\u5165\u5230\u4e8b\u4ef6\u4e2d\u3002 Privacy and Security/\u9690\u79c1\u4e0e\u5b89\u5168 \u00b6 \u4e92\u64cd\u4f5c\u6027\u662f\u672c\u89c4\u8303\u80cc\u540e\u7684\u4e3b\u8981\u9a71\u52a8\u529b\uff0c\u5b9e\u73b0\u6b64\u76ee\u6807\u9700\u8981\u4e00\u4e9b\u4fe1\u606f\u660e\u786e\u53ef\u7528\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u4fe1\u606f\u7684\u6cc4\u6f0f\u3002 \u8003\u8651\u4ee5\u4e0b\u4e8b\u9879\u4ee5\u9632\u6b62\u4fe1\u606f\u610f\u5916\u6cc4\u6f0f\uff0c\u5c24\u5176\u662f\u5728\u5229\u7528\u7b2c\u4e09\u65b9\u5e73\u53f0\u548c\u901a\u4fe1\u7f51\u7edc\u65f6\uff1a \u4e0a\u4e0b\u6587\u5c5e\u6027 \u654f\u611f\u4fe1\u606f\u4e0d\u5e94\u5728\u4e0a\u4e0b\u6587\u5c5e\u6027\u4e2d\u643a\u5e26\u3002 CloudEvent \u751f\u4ea7\u8005\u3001\u6d88\u8d39\u8005\u548c\u4e2d\u95f4\u4eba\u53ef\u4ee5\u81ea\u67e5\u5e76\u8bb0\u5f55\u4e0b\u4e0a\u4e0b\u6587\u5c5e\u6027\u3002 \u6570\u636e \u7279\u5b9a\u7684 \u4e8b\u4ef6\u6570\u636e \u5e94\u8be5\u88ab\u52a0\u5bc6\u4ee5\u9650\u5236\u5bf9\u53d7\u4fe1\u4efb\u65b9\u7684\u53ef\u89c1\u6027\u3002 \u7528\u4e8e\u8fd9\u79cd\u52a0\u5bc6\u7684\u673a\u5236\u662f\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u534f\u8bae\uff0c\u4e0d\u5728\u672c\u89c4\u8303\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002 \u534f\u8bae\u7ed1\u5b9a \u5e94\u8be5\u91c7\u7528\u534f\u8bae\u7ea7\u522b\u7684\u5b89\u5168\u6027\u673a\u5236\u6765\u786e\u4fdd CloudEvents \u5b8c\u6210\u53ef\u4fe1\u548c\u5b89\u5168\u7684\u4ea4\u6362\u3002 Example/\u793a\u4f8b \u00b6 \u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86\u4e00\u4e2a\u5e8f\u5217\u5316\u4e3a JSON \u7684 CloudEvent\uff1a { \"specversion\" : \"1.0\" , \"type\" : \"com.github.pull_request.opened\" , \"source\" : \"https://github.com/cloudevents/spec/pull\" , \"subject\" : \"123\" , \"id\" : \"A234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"text/xml\" , \"data\" : \"<much wow=\\\"xml\\\"/>\" }","title":"\u89c4\u8303"},{"location":"spec/#cloudevents-103","text":"","title":"CloudEvents \u6838\u5fc3\u89c4\u8303-1.0.3\uff08\u5236\u4f5c\u4e2d\uff09"},{"location":"spec/#_1","text":"CloudEvents \u662f\u4e00\u4e2a\u7528\u4e8e\u5b9a\u4e49\u4e8b\u4ef6\u683c\u5f0f\u7684\u4f9b\u5e94\u5546\u4e2d\u7acb\u89c4\u8303\u3002","title":"\u6458\u8981"},{"location":"spec/#_2","text":"\u6982\u89c8 \u7b26\u53f7\u548c\u672f\u8bed \u4e0a\u4e0b\u6587\u5c5e\u6027 \u4e8b\u4ef6\u6570\u636e \u5927\u5c0f\u9650\u5236 \u9690\u79c1\u4e0e\u5b89\u5168 \u793a\u4f8b","title":"\u76ee\u5f55"},{"location":"spec/#overview","text":"\u4e8b\u4ef6(Events)\u5728\u73b0\u4ee3\u7cfb\u7edf\u4e2d\u65e0\u5904\u4e0d\u5728\u3002\u4f46\u4e0d\u540c\u7684\u4e8b\u4ef6\u751f\u4ea7\u8005\u5f80\u5f80\u7528\u4e0d\u540c\u7684\u89c4\u8303\u6765\u63cf\u8ff0\u81ea\u5df1\u7684\u4e8b\u4ef6\u3002 \u5bf9\u4e8b\u4ef6\u7684\u7edf\u4e00\u63cf\u8ff0\u7684\u532e\u4e4f\u610f\u5473\u7740\u5f00\u53d1\u8005\u5fc5\u987b\u4e0d\u65ad\u91cd\u65b0\u5b66\u4e60\u5982\u4f55\u6d88\u8d39\u4e0d\u540c\u5b9a\u4e49\u7684\u4e8b\u4ef6\u3002 \u5b83\u540c\u6837\u9650\u5236\u4e86\u90a3\u4e9b\u7528\u6765\u5e2e\u52a9\u4e8b\u4ef6\u6570\u636e\u5b8c\u6210\u8de8\u73af\u5883\u4f20\u8f93\u7684\u5e93(\u5982 SDKs)\uff0c \u5de5\u5177(\u5982\u4e8b\u4ef6\u8def\u7531\u5668)\u548c\u57fa\u7840\u8bbe\u65bd(\u5982\u4e8b\u4ef6\u8ffd\u8e2a\u7cfb\u7edf)\u7684\u53d1\u5c55\u3002 \u603b\u4f53\u6765\u770b\uff0c\u8fd9\u79cd\u532e\u4e4f\u4e25\u91cd\u963b\u788d\u4e86\u4e8b\u4ef6\u6570\u636e\u7684\u53ef\u79fb\u690d\u6027\u548c\u751f\u4ea7\u529b\u3002 CloudEvents \u662f\u4e00\u4e2a\u4ee5\u901a\u7528\u683c\u5f0f\u6765\u63cf\u8ff0\u4e8b\u4ef6\u6570\u636e\u7684\u6807\u51c6\u3002\u5b83\u63d0\u4f9b\u4e86\u4e8b\u4ef6\u5728\u670d\u52a1\u3001\u5e73\u53f0\u548c\u7cfb\u7edf\u4e2d\u7684\u4e92\u64cd\u4f5c\u6027\u3002 \u4e8b\u4ef6\u683c\u5f0f\u6307\u5b9a\u5982\u4f55\u4f7f\u7528\u67d0\u4e9b\u7f16\u7801\u683c\u5f0f\u5e8f\u5217\u5316\u4e00\u4e2a CloudEvent\u3002 \u652f\u6301\u90a3\u4e9b\u7f16\u7801\u4e14\u517c\u5bb9 CloudEvents \u7684\u5b9e\u73b0\u5fc5\u987b\u9075\u5b88\u76f8\u5e94\u4e8b\u4ef6\u683c\u5f0f\u4e2d\u6307\u5b9a\u7684\u7f16\u7801\u89c4\u5219\u3002 \u6240\u6709\u5b9e\u73b0\u90fd\u5fc5\u987b\u652f\u6301 JSON \u683c\u5f0f \u3002 \u6709\u5173\u89c4\u8303\u80cc\u540e\u7684\u5386\u53f2\u3001\u5f00\u53d1\u548c\u8bbe\u8ba1\u539f\u7406\u7b49\u66f4\u591a\u4fe1\u606f\uff0c \u8bf7\u53c2\u9605 CloudEvents \u5165\u95e8\u6587\u6863 \u3002","title":"Overview/\u6982\u89c8"},{"location":"spec/#notations-and-terminology","text":"","title":"Notations and Terminology/\u7b26\u53f7\u548c\u672f\u8bed"},{"location":"spec/#notational-conventions","text":"\u672c\u6587\u6863\u4e2d\u7684\u5173\u952e\u8bcd \"MUST/ \u5fc5\u987b\", \"MUST NOT/ \u5fc5\u987b\u4e0d\", \"REQUIRED/ \u5fc5\u8981\", \"SHALL \u5373\u5c06\", \"SHALL NOT \u5373\u5c06\u4e0d\", \"SHOULD \u5e94\u8be5\", \"SHOULD NOT \u4e0d\u5e94\u8be5\", \"RECOMMENDED \u5efa\u8bae\", \"MAY \u53ef\u80fd\", and \"OPTIONAL \u53ef\u9009\" \u9700\u8981\u6309\u7167 RFC 2119 \u4e2d\u7684\u63cf\u8ff0\u6765\u7406\u89e3\u3002 \u4e3a\u6e05\u695a\u8d77\u89c1\uff0c\u5f53\u4e00\u4e2a\u529f\u80fd\u88ab\u6807\u8bb0\u4e3a\u201c OPTIONAL \u53ef\u9009\"\u201d\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u6d88\u606f\u7684 \u751f\u4ea7\u8005 \u548c \u6d88\u8d39\u8005 \u90fd\u53ef\u4ee5\u81ea\u884c\u9009\u62e9\u662f\u5426\u652f\u6301\u8be5\u529f\u80fd\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u751f\u4ea7\u8005\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u5728\u6d88\u606f\u4e2d\u5305\u542b\u8be5\u529f\u80fd\uff0c\u6d88\u8d39\u8005\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u9009\u62e9\u652f\u6301\u8be5\u529f\u80fd\u3002 \u4e0d\u652f\u6301\u8be5\u529f\u80fd\u7684\u6d88\u8d39\u8005\u5c06\u9ed8\u9ed8\u5730\u5ffd\u7565\u8be5\u90e8\u5206\u6d88\u606f\u3002 \u751f\u4ea7\u8005\u9700\u8981\u505a\u597d\u6d88\u8d39\u8005\u5e76\u6ca1\u6709\u542f\u7528\u8be5\u529f\u80fd\u7684\u51c6\u5907\u3002 \u4e2d\u95f4\u4eba \u5e94\u5f53\u8f6c\u53d1 OPTIONAL \u53ef\u9009\u5c5e\u6027\u3002","title":"Notational Conventions/\u7b26\u53f7\u7ea6\u5b9a"},{"location":"spec/#_3","text":"\u672c\u89c4\u8303\u5b9a\u4e49\u4e86\u4e0b\u5217\u672f\u8bed\u3002","title":"\u672f\u8bed"},{"location":"spec/#occurrence","text":"\u201c\u4e8b\u4ef6\u53d1\u751f\u201d\u662f\u6307\u5728\u8f6f\u4ef6\u7cfb\u7edf\u8fd0\u884c\u671f\u95f4\u5bf9\u4e8b\u5b9e\u72b6\u6001\u7684\u6355\u83b7\u3002 \u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u7cfb\u7edf\u53d1\u51fa\u4e86\u4fe1\u53f7\u6216\u7cfb\u7edf\u89c2\u5bdf\u5230\u4fe1\u53f7\u3001\u72b6\u6001\u66f4\u6539\u3001\u8ba1\u65f6\u5668\u8d85\u65f6 \u6216\u4efb\u4f55\u5176\u4ed6\u503c\u5f97\u6ce8\u610f\u7684\u6d3b\u52a8\u800c\u53d1\u751f\u7684\u3002 \u4f8b\u5982\uff0c\u8bbe\u5907\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7535\u6c60\u7535\u91cf\u4f4e\u6216\u865a\u62df\u673a\u5373\u5c06\u6267\u884c\u8ba1\u5212\u7684\u91cd\u542f\u800c\u8fdb\u5165\u8b66\u62a5\u72b6\u6001\u3002","title":"Occurrence/\u4e8b\u4ef6\u53d1\u751f"},{"location":"spec/#event","text":"\u201c\u4e8b\u4ef6\u201d\u662f\u8868\u793a\u4e00\u6761\"\u53d1\u751f\"\u53ca\u5176\u4e0a\u4e0b\u6587\u7684\u6570\u636e\u8bb0\u5f55\u3002 \u4e8b\u4ef6\u4ece\u4e8b\u4ef6\u751f\u4ea7\u8005\uff08\u6e90\uff09\u8def\u7531\u5230\u5bf9\u5b83\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\u6d88\u8d39\u8005\u3002 \u4e8b\u4ef6\u4e2d\u5305\u542b\u7684\u4fe1\u606f\u5e2e\u52a9\u5b8c\u6210\u8def\u7531\u64cd\u4f5c\uff0c\u4f46\u4e8b\u4ef6\u4e0d\u4f1a\u6807\u8bc6\u7279\u5b9a\u7684\u8def\u7531\u76ee\u7684\u5730\u3002 \u4e8b\u4ef6\u5c06\u5305\u542b\u4e24\u79cd\u7c7b\u578b\u7684\u4fe1\u606f\uff1a\u8868\u793a\"\u53d1\u751f\"\u7684 \u4e8b\u4ef6\u6570\u636e \u548c\u63d0\u4f9b\u6709\u5173\u4e8b\u4ef6\u7684\u73af\u5883\u4fe1\u606f\u7684 \u4e0a\u4e0b\u6587 \u5143\u6570\u636e\u3002 \u4e00\u6b21\"\u53d1\u751f\"\u53ef\u80fd\u5bfc\u81f4\u591a\u4e2a\u4e8b\u4ef6\u7684\u4ea7\u751f\u3002","title":"Event/\u4e8b\u4ef6"},{"location":"spec/#producer","text":"\u201c\u751f\u4ea7\u8005\u201d\u662f\u4e00\u79cd\u7279\u5b9a\u7684\u5b9e\u4f8b\u3001\u8fdb\u7a0b\u6216\u8bbe\u5907\uff0c\u5b83\u80fd\u591f\u521b\u5efa\u7528\u6765\u63cf\u8ff0 CloudEvent \u7684\u6570\u636e\u7ed3\u6784\u3002","title":"Producer/\u751f\u4ea7\u8005"},{"location":"spec/#source","text":"\"\u6e90\"\u662f\u4e8b\u4ef6\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u3002\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u5b83\u53ef\u80fd\u7531\u591a\u4e2a \u751f\u4ea7\u8005 \u7ec4\u6210\u3002 \u5982\u679c\u4e00\u4e2a\u6e90\u65e0\u6cd5\u67e5\u770b\u5230 CloudEvents\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u6709\u5916\u90e8\u7684\u751f\u4ea7\u8005\u5728\u4ee3\u66ff\u6e90\u6765\u751f\u4ea7 CloudEvent\u3002","title":"Source/\u6e90"},{"location":"spec/#consumer","text":"\u4e00\u4e2a\u201c\u6d88\u8d39\u8005\u201d\u4f1a\u63a5\u6536\u4e8b\u4ef6\u5e76\u6839\u636e\u4e8b\u4ef6\u91c7\u53d6\u4e00\u5b9a\u7684\u884c\u4e3a\u3002 \u5b83\u4f7f\u7528\u4e0a\u4e0b\u6587\u73af\u5883\u548c\u4e8b\u4ef6\u6570\u636e\u6765\u6267\u884c\u4e00\u4e9b\u903b\u8f91\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u65b0\u4e8b\u4ef6\u7684\u53d1\u751f\u3002","title":"Consumer/\u6d88\u8d39\u8005"},{"location":"spec/#intermediary","text":"\u4e00\u4e2a\u201c\u4e2d\u95f4\u4eba\u201d\u4f1a\u63a5\u6536\u5305\u542b\u4e8b\u4ef6\u7684\u6d88\u606f\uff0c\u5e76\u5c06\u5176\u8f6c\u53d1\u7ed9\u4e0b\u4e00\u4e2a\u63a5\u6536\u8005\uff0c\u4f46\u8be5\u63a5\u6536\u8005\u53ef\u80fd\u662f\u53e6\u4e00\u4e2a\u4e2d\u95f4\u4eba\u6216\u4e8b\u4ef6 \u6d88\u8d39\u8005 \u3002 \u4e2d\u95f4\u4eba\u7684\u5178\u578b\u4efb\u52a1\u5c31\u662f\u6839\u636e \u4e0a\u4e0b\u6587 \u73af\u5883\u4e2d\u7684\u4fe1\u606f\u5c06\u4e8b\u4ef6\u8def\u7531\u5230\u63a5\u6536\u8005\u3002","title":"Intermediary/\u4e2d\u95f4\u4eba"},{"location":"spec/#context","text":"\u4e0a\u4e0b\u6587\u73af\u5883\u5143\u6570\u636e\u88ab\u5c01\u88c5\u5728 \u4e0a\u4e0b\u6587-\u5c5e\u6027 \u4e2d\u3002 \u5de5\u5177\u548c\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u53ef\u4ee5\u4f7f\u7528\u6b64\u4fe1\u606f\u6765\u8bc6\u522b\u4e8b\u4ef6\u4e0e\u7cfb\u7edf\u65b9\u9762\u6216\u4e8b\u4ef6\u4e0e\u5176\u4ed6\u4e8b\u4ef6\u7684\u5173\u7cfb\u3002","title":"Context/\u4e0a\u4e0b\u6587"},{"location":"spec/#data","text":"Data \u63cf\u8ff0\u7684\u662f\u5173\u4e8e\"\u4e8b\u4ef6\u53d1\u751f\"\u7684\u7279\u5b9a\u57df\u4fe1\u606f\uff08\u5373\u6709\u6548\u8d1f\u8f7d)\u3002\u8fd9\u53ef\u80fd\u5305\u62ec\u6709\u5173\u201c\u4e8b\u4ef6\u53d1\u751f\u201d\u7684\u4fe1\u606f\u3001\u6709\u5173\u5df2\u66f4\u6539\u6570\u636e\u7684\u8be6\u7ec6\u4fe1\u606f\u7b49\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 \u4e8b\u4ef6\u6570\u636e \u90e8\u5206\u3002","title":"Data/\u6570\u636e"},{"location":"spec/#event-format","text":"\u4e00\u4e2a\u4e8b\u4ef6\u683c\u5f0f\u4f1a\u6307\u5b9a\u5982\u4f55\u5c06 CloudEvent \u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u3002 \u72ec\u7acb\u4e8b\u4ef6\u683c\u5f0f\uff08\u4f8b\u5982 JSON \u683c\u5f0f \uff09\u6307\u5b9a\u72ec\u7acb\u4e8e\u4efb\u4f55\u534f\u8bae\u6216\u5b58\u50a8\u4ecb\u8d28\u7684\u5e8f\u5217\u5316\u3002 \u534f\u8bae\u7ed1\u5b9a\u53ef\u4ee5\u5b9a\u4e49\u4f9d\u8d56\u4e8e\u534f\u8bae\u7684\u683c\u5f0f\u3002","title":"Event Format/\u4e8b\u4ef6\u683c\u5f0f"},{"location":"spec/#message","text":"\u4e8b\u4ef6\u901a\u8fc7\u6d88\u606f\u4ece\u6e90\u4f20\u8f93\u5230\u76ee\u6807\u3002 \u201c\u7ed3\u6784\u5316\u6a21\u5f0f\u6d88\u606f\u201d\u662f\u4e00\u79cd\u4f7f\u7528\u72ec\u7acb\u4e8b\u4ef6\u683c\u5f0f\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5b8c\u5168\u7f16\u7801\u5e76\u5b58\u50a8\u5728\u6d88\u606f\u4f53\u4e2d\u7684\u6d88\u606f\u3002 \u201c\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6d88\u606f\u201d\u4f1a\u5c06\u4e8b\u4ef6\u6570\u636e\u5b58\u50a8\u5728\u6d88\u606f\u4f53\u4e2d\uff0c\u5e76\u5c06\u4e8b\u4ef6\u5c5e\u6027\u4f5c\u4e3a\u6d88\u606f\u5143\u6570\u636e\u7684\u4e00\u90e8\u5206\u5b58\u50a8\u4e0b\u6765\u3002","title":"Message/\u6d88\u606f"},{"location":"spec/#protocol","text":"\u6d88\u606f\u53ef\u4ee5\u901a\u8fc7\u5404\u79cd\u884c\u4e1a\u6807\u51c6\u534f\u8bae\uff08\u4f8b\u5982 HTTP\u3001AMQP\u3001MQTT\u3001SMTP\uff09\u3001\u5f00\u6e90\u534f\u8bae\uff08\u4f8b\u5982 Kafka\u3001NATS\uff09\u6216\u5e73\u53f0/\u4f9b\u5e94\u5546 \u4e13\u6709\u534f\u8bae\uff08\u4f8b\u5982 AWS Kinesis\u3001Azure \u4e8b\u4ef6\u7f51\u683c\uff09\u4f20\u8f93\u3002","title":"Protocol/\u534f\u8bae"},{"location":"spec/#protocol-binding","text":"\u534f\u8bae\u7ed1\u5b9a\u63cf\u8ff0\u4e86\u5982\u4f55\u901a\u8fc7\u7ed9\u5b9a\u7684\u534f\u8bae\u53d1\u9001\u548c\u63a5\u6536\u4e8b\u4ef6\u3002 \u534f\u8bae\u7ed1\u5b9a\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 \u4e8b\u4ef6\u683c\u5f0f \uff0c\u5c06\u4e8b\u4ef6\u76f4\u63a5\u6620\u5c04\u5230\u4f20\u8f93\u5305\u7684\u6b63\u6587\uff0c\u6216\u8005\u53ef\u4ee5\u4e3a\u5305\u63d0\u4f9b\u989d\u5916\u7684\u683c\u5f0f\u548c\u7ed3\u6784\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u5316\u6a21\u5f0f\u6d88\u606f\u7684\u5305\u88c5\u5668\uff0c\u6216\u8005\u53ef\u4ee5\u5c06\u591a\u4e2a\u6d88\u606f\u4e00\u8d77\u6279\u5904\u7406\u5230\u4f20\u8f93\u5305\u6b63\u6587\u4e2d\u3002","title":"Protocol Binding/\u534f\u8bae\u7ed1\u5b9a"},{"location":"spec/#context-attributes","text":"\u6bcf\u4e2a\u7b26\u5408\u672c\u89c4\u8303\u7684 CloudEvent \u5fc5\u987b\u5305\u62ec\u6307\u5b9a\u4e3a REQUIRED/ \u5fc5\u8981 \u7684\u4e0a\u4e0b\u6587\u5c5e\u6027\uff0c \u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a OPTIONAL \u53ef\u9009\u7684\u4e0a\u4e0b\u6587\u5c5e\u6027\uff0c\u5e76\u4e14\u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a \u6269\u5c55\u5c5e\u6027 \u3002 \u6bcf\u4e2a\u4e0a\u4e0b\u6587\u5c5e\u6027\u53ea\u80fd\u5728\u4e00\u4e2a CloudEvent \u51fa\u73b0\u4e00\u6b21\u3002\u672c\u89c4\u8303\u4e2d\u5b9a\u4e49\u7684\u4e0a\u4e0b\u6587\u5c5e\u6027\uff08\u5bf9\u6807\u6269\u5c55\u4e0a\u4e0b\u6587\u5c5e\u6027\uff09\u79f0\u4e3a\u201c\u6838\u5fc3\u4e0a\u4e0b\u6587\u5c5e\u6027\u201d\u3002 \u8fd9\u4e9b\u5c5e\u6027\u867d\u7136\u63cf\u8ff0\u4e86\u4e8b\u4ef6\uff0c\u4f46\u88ab\u8bbe\u8ba1\u4e3a\u53ef\u4ee5\u72ec\u7acb\u4e8e\u4e8b\u4ef6\u6570\u636e\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u8fd9\u5141\u8bb8\u5728\u4e0d\u53cd\u5e8f\u5217\u5316\u4e8b\u4ef6\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u76ee\u7684\u5730\u68c0\u67e5\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u5c5e\u6027\u3002","title":"Context Attributes/\u4e0a\u4e0b\u6587\u5c5e\u6027"},{"location":"spec/#naming-convention","text":"CloudEvents \u89c4\u8303\u5b9a\u4e49\u4e86\u5230\u5404\u79cd\u534f\u8bae\u548c\u7f16\u7801\u7684\u6620\u5c04\uff0c\u968f\u9644\u7684 CloudEvents SDK \u9762\u5411\u5404\u79cd\u8fd0\u884c\u65f6\u548c\u7f16\u7a0b\u8bed\u8a00\u3002 \u5176\u4e2d\u4e00\u4e9b\u5c06\u5143\u6570\u636e\u5143\u7d20\u533a\u5206\u5927\u5c0f\u5199\uff0c\u800c\u53e6\u4e00\u4e9b\u5219\u4e0d\u533a\u5206\uff0c\u5e76\u4e14\u5355\u4e2a CloudEvent \u53ef\u80fd\u901a\u8fc7\u6d89\u53ca\u5230\u534f\u8bae\u3001\u7f16\u7801\u548c\u8fd0\u884c\u65f6\u6df7\u5408\u7684\u591a\u4e2a\u8dc3\u70b9\u8fdb\u884c\u8def\u7531\u3002 \u56e0\u6b64\uff0c\u672c\u89c4\u8303\u9650\u5236\u4e86\u6240\u6709\u5c5e\u6027\u7684\u53ef\u7528\u5b57\u7b26\u96c6\uff0c\u4ee5\u9632\u6b62\u533a\u5206\u5927\u5c0f\u5199\u95ee\u9898\u6216\u4e0e\u901a\u7528\u8bed\u8a00\u4e2d\u6807\u8bc6\u7b26\u7684\u5408\u6cd5\u5b57\u7b26\u96c6\u51b2\u7a81\u95ee\u9898\u3002 \u5728\u8de8\u4f20\u8f93\u534f\u8bae\u548c\u6d88\u606f\u683c\u5f0f\u65f6\uff0c\u4e3a\u4e86\u6700\u5927\u5316\u4e92\u64cd\u4f5c\u6027\u548c\u53ef\u79fb\u690d\u6027\uff0cCloudEvents \u5c5e\u6027\u540d\u79f0\u5fc5\u987b\u7531\u6765\u81ea ASCII \u5b57\u7b26\u96c6\u7684\u5c0f\u5199\u5b57\u6bcd\uff08\u201ca\u201d\u5230\u201cz\u201d\uff09\u6216\u6570\u5b57\uff08\u201c0\u201d\u5230\u201c9\u201d\uff09\u7ec4\u6210\u3002 \u5c5e\u6027\u540d\u79f0\u5e94\u8be5\u662f\u63cf\u8ff0\u6027\u7684\u548c\u7b80\u6d01\u7684\uff0c\u5e76\u4e14\u957f\u5ea6\u4e0d\u5e94\u8d85\u8fc7 20 \u4e2a\u5b57\u7b26\u3002 CloudEvent \u5c5e\u6027\u4e0d\u80fd\u4f7f\u7528 data \u547d\u540d\uff1b\u56e0\u4e3a\u5b83\u662f\u4e3a\u67d0\u4e9b\u4e8b\u4ef6\u683c\u5f0f\u9884\u7559\u7684\u3002","title":"Naming Convention/\u547d\u540d\u7ea6\u5b9a"},{"location":"spec/#type-system","text":"\u4ee5\u4e0b\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u53ef\u7528\u4e8e\u5c5e\u6027\u3002 \u8fd9\u4e9b\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e00\u79cd\u90fd\u53ef\u4ee5\u7531\u4e0d\u540c\u7684\u4e8b\u4ef6\u683c\u5f0f\u548c\u534f\u8bae\u5143\u6570\u636e\u5b57\u6bb5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8868\u793a\u3002 \u672c\u89c4\u8303\u4e3a\u6240\u6709\u5b9e\u73b0\u5fc5\u987b\u652f\u6301\u7684\u6bcf\u79cd\u7c7b\u578b\u5b9a\u4e49\u4e86\u89c4\u8303\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u3002 Boolean - \u201ctrue\u201d\u6216\u201cfalse\u201d\u7684\u5e03\u5c14\u503c\u3002 \u5b57\u7b26\u4e32\u7f16\u7801\uff1a\u533a\u5206\u5927\u5c0f\u5199\u7684 true \u6216 false \u503c\u3002 Integer -\u8303\u56f4\u5728 -2,147,483,648 \u5230 +2,147,483,647 \uff08\u5305\u542b\uff09\u4e4b\u95f4\u7684\u6574\u6570\u3002 \u8fd9\u662f\u6709\u7b26\u53f7 32 \u4f4d\u4e8c\u8fdb\u5236\u8865\u7801\u7f16\u7801\u7684\u8303\u56f4\u3002 \u4e8b\u4ef6\u683c\u5f0f\u4e0d\u5fc5\u4f7f\u7528\u6b64\u7f16\u7801\uff0c\u4f46\u5b83\u4eec\u5fc5\u987b\u4f7f\u7528\u5728\u6b64\u8303\u56f4\u5185\u7684 Integer \u503c\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: \u7b26\u5408 RFC 7159, \u7b2c 6 \u8282 JSON \u6570\u5b57\u7684\u6574\u6570\u90e8\u5206 String - \u5141\u8bb8\u7684 Unicode \u5b57\u7b26\u5e8f\u5217\u3002 \u4e0d\u5141\u8bb8\u4f7f\u7528\u4ee5\u4e0b\u5b57\u7b26\uff1a \u8303\u56f4 U+0000-U+001F \u548c U+007F-U+009F\uff08\u5305\u542b\u9996\u5c3e\uff09\u4e2d\u7684\u201c\u63a7\u5236\u5b57\u7b26\u201d\uff0c \u56e0\u4e3a\u5927\u591a\u6570\u6ca1\u6709\u5546\u5b9a\u7684\u542b\u4e49\uff0c\u8fd8\u6709\u4e00\u4e9b\uff0c\u4f8b\u5982 U+000A\uff08\u6362\u884c\u7b26\uff09\uff0c \u5728\u5982 HTTP \u8bf7\u6c42\u5934\u4e4b\u7c7b\u7684\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u53ef\u7528\u3002 - \u88ab Unicode \u6807\u8bc6\u4e3a\u975e\u5b57\u7b26\u7684 \u4ee3\u7801\u70b9\u3002 \u88ab Unicode \u6807\u8bc6\u4e3a\u4ee3\u7406\u9879\u7684\u4ee3\u7801\u70b9, \u8303\u56f4 U+D800-U+DBFF \u548c U+DC00-U+DFFF\uff08\u5305\u542b\u9996\u5c3e\uff09 , \u9664\u975e\u88ab\u5408\u7406\u7684\u7528\u4f5c\u4ee3\u7406\u5bf9. \u56e0\u6b64\uff08\u5728 JSON \u7b26\u53f7\u4e2d\uff09 \u201cuDEAD\u201d\u662f\u65e0\u6548\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u672a\u914d\u5bf9\u7684\u4ee3\u7406\uff0c\u800c\u201cuD800uDEAD\u201d\u662f\u5408\u6cd5\u7684\u3002 Binary - \u5b57\u8282\u5e8f\u5217. \u5b57\u7b26\u4e32\u7f16\u7801: Base64 \u7f16\u7801\uff0c\u7b26\u5408 RFC4648 . URI - \u7edd\u5bf9\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: RFC 3986 \u7b2c 4.3 \u8282 \u4e2d\u5b9a\u4e49\u7684 Absolute URI \u3002 URI-reference - \u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\u5f15\u7528\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: RFC 3986 \u7b2c 4.1 \u8282 \u4e2d\u5b9a\u4e49\u7684 URI-reference \u3002 Timestamp - \u4f7f\u7528\u516c\u5386\u7684\u65e5\u671f\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u3002 \u5b57\u7b26\u4e32\u7f16\u7801: RFC 3339 \u3002 \u6240\u6709\u4e0a\u4e0b\u6587\u5c5e\u6027\u503c\u5fc5\u987b\u662f\u4e0a\u9762\u5217\u51fa\u7684\u7c7b\u578b\u4e4b\u4e00\u3002 \u5c5e\u6027\u503c\u53ef\u4ee5\u8868\u793a\u4e3a\u539f\u751f\u7c7b\u578b\u6216\u89c4\u8303\u5b57\u7b26\u4e32\u3002 \u5f53\u5f3a\u7c7b\u578b\u7f16\u7a0b\u8bed\u8a00\u8868\u793a CloudEvent \u6216\u4efb\u4f55\u6269\u5c55\u65f6\uff0c \u5fc5\u987b\u80fd\u591f\u5728\u89c4\u8303\u5b57\u7b26\u4e32\u7f16\u7801\u4e0e\u5bf9\u5e94\u62bd\u8c61\u7c7b\u578b\u7684\u8fd0\u884c\u65f6/\u7f16\u7a0b\u8bed\u8a00\u7c7b\u578b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 \u4f8b\u5982\uff0c\u5728\u7ed9\u5b9a\u7684\u5b9e\u73b0\u4e2d\uff0c time \u5c5e\u6027\u53ef\u80fd\u7531\u7f16\u7a0b\u8bed\u8a00\u7684\u672c\u5730\u65f6\u95f4\u7c7b\u578b\u8868\u793a\uff0c\u4f46\u5b83\u5fc5\u987b\u662f\u53ef\u8bbe\u7f6e\u63d0\u4f9b RFC3339 \u5b57\u7b26\u4e32\u7684\uff0c \u5e76\u4e14\u5f53\u6620\u5c04\u5230 HTTP \u6d88\u606f\u5934\u65f6\uff0c\u5b83\u5fc5\u987b\u53ef\u8f6c\u6362\u4e3a RFC3339 \u5b57\u7b26\u4e32\u3002 CloudEvents \u534f\u8bae\u7ed1\u5b9a\u6216\u4e8b\u4ef6\u683c\u5f0f\u5b9e\u73b0\u540c\u6837\u5fc5\u987b\u80fd\u591f\u5728\u89c4\u8303\u5b57\u7b26\u4e32\u7f16\u7801\u4e0e\u534f\u8bae\u5143\u6570\u636e\u5b57\u6bb5\u4e2d\u7684\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 Timestamp \u7c7b\u578b\u7684\u5c5e\u6027\u503c\u786e\u5b9e\u53ef\u80fd\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8def\u7531\u901a\u8fc7\u591a\u4e2a\u8dc3\u70b9\uff0c \u5e76\u4e14\u4ec5\u5728\u751f\u4ea7\u8005\u548c\u6700\u7ec8\u6d88\u8d39\u8005\u5904\u5b9e\u73b0\u4e3a\u672c\u5730\u8fd0\u884c\u65f6/\u8bed\u8a00\u7c7b\u578b\u3002 Timestamp \u7c7b\u578b\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u672c\u5730\u534f\u8bae\u7c7b\u578b\u8def\u7531\uff0c \u5e76\u4e14\u53ef\u4ee5\u5728\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7aef\u6620\u5c04\u5230/\u4ece\u5404\u81ea\u7684\u8bed\u8a00/\u8fd0\u884c\u65f6\u7c7b\u578b\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u8f6c\u4e3a\u5b57\u7b26\u4e32\u683c\u5f0f\u3002 \u5e8f\u5217\u5316\u673a\u5236\u7684\u9009\u62e9\u5c06\u51b3\u5b9a\u4e0a\u4e0b\u6587\u5c5e\u6027\u548c\u4e8b\u4ef6\u6570\u636e\u5c06\u5982\u4f55\u5e8f\u5217\u5316\u3002 \u4f8b\u5982\uff0c\u5728 JSON \u5e8f\u5217\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0a\u4e0b\u6587\u5c5e\u6027\u548c\u4e8b\u4ef6\u6570\u636e\u53ef\u80fd\u90fd\u51fa\u73b0\u5728\u540c\u4e00\u4e2a JSON \u5bf9\u8c61\u4e2d\u3002","title":"Type System/\u7c7b\u578b\u7cfb\u7edf"},{"location":"spec/#required-attributes","text":"\u4e0b\u5217\u5c5e\u6027\u5fc5\u987b\u5728\u6240\u6709\u7684 CloudEvents \u4e2d\u5c55\u793a\uff1a","title":"REQUIRED Attributes/\u5fc5\u8981\u5c5e\u6027"},{"location":"spec/#id","text":"\u7c7b\u578b: String \u63cf\u8ff0: \u6807\u8bc6\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u751f\u4ea7\u8005\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u4e0d\u540c\u4e8b\u4ef6\u7684 source + id \u662f\u552f\u4e00\u7684\u3002 \u5982\u679c\u91cd\u590d\u7684\u4e8b\u4ef6\u88ab\u91cd\u65b0\u53d1\u9001\uff08\u4f8b\u5982\u7531\u4e8e\u7f51\u7edc\u9519\u8bef\uff09\uff0c\u5b83\u53ef\u80fd\u5177\u6709\u76f8\u540c\u7684 id \u3002 \u6d88\u8d39\u8005\u53ef\u4ee5\u5047\u8bbe\u5177\u6709\u76f8\u540c source \u548c id \u7684\u4e8b\u4ef6\u662f\u91cd\u590d\u7684\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32 \u5728\u751f\u4ea7\u8005\u7684\u8303\u56f4\u5185\u5fc5\u987b\u662f\u552f\u4e00\u7684 \u793a\u4f8b: \u4e00\u4e2a\u7531\u751f\u4ea7\u8005\u7ef4\u62a4\u7684\u4e8b\u4ef6\u8ba1\u6570\u5668 \u4e00\u4e2a UUID","title":"id/\u6807\u8bc6"},{"location":"spec/#source_1","text":"\u7c7b\u578b: URI-reference \u63cf\u8ff0: \u6807\u8bc6\u4e8b\u4ef6\u53d1\u751f\u7684\u4e0a\u4e0b\u6587\u80cc\u666f\u3002 \u8fd9\u901a\u5e38\u5305\u62ec\u8bf8\u5982\u4e8b\u4ef6\u6e90\u7c7b\u578b\u3001\u53d1\u5e03\u4e8b\u4ef6\u7684\u7ec4\u7ec7 \u6216\u4ea7\u751f\u4e8b\u4ef6\u7684\u8fc7\u7a0b\u7b49\u4fe1\u606f\u3002URI \u4e2d\u7f16\u7801\u7684\u6570\u636e\u80cc\u540e\u7684\u786e\u5207\u8bed\u6cd5\u548c\u8bed\u4e49\u7531\u4e8b\u4ef6\u751f\u4ea7\u8005\u5b9a\u4e49\u3002 \u751f\u4ea7\u8005\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u4e0d\u540c\u4e8b\u4ef6\u7684 source + id \u662f\u552f\u4e00\u7684\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u4e0d\u540c\u7684\u751f\u4ea7\u8005\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684 source \uff0c \u8fd9\u4f7f\u5f97\u751f\u6210\u552f\u4e00 ID \u53d8\u5f97\u5bb9\u6613\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u751f\u4ea7\u8005\u5c06\u62e5\u6709\u76f8\u540c\u7684\u6765\u6e90\u3002 \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528 UUIDs\u3001URNs\u3001DNS \u6743\u5a01\u673a\u6784\u6216\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u6848\u6765\u521b\u5efa\u552f\u4e00\u7684 source \u6807\u8bc6\u7b26\u3002 \u4e00\u4e2a\u6765\u6e90\u53ef\u4ee5\u5305\u62ec\u591a\u4e2a\u751f\u4ea7\u8005\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u751f\u4ea7\u8005\u5fc5\u987b\u534f\u4f5c\u4ee5\u786e\u4fdd\u6bcf\u4e2a\u4e0d\u540c\u4e8b\u4ef6\u7684 source + id \u90fd\u662f\u552f\u4e00\u7684\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a URI-reference \u63a8\u8350\u4f7f\u7528 \u7edd\u5bf9 URI \u793a\u4f8b \u5177\u6709 DNS \u6743\u9650\u7684 Internet \u8303\u56f4\u552f\u4e00 URI\uff1a https://github.com/cloudevents mailto:cncf-wg-serverless@lists.cncf.io \u5177\u6709 UUID \u7684\u901a\u7528\u552f\u4e00 URN\uff1a urn:uuid:6e8bc430-9c3a-11d9-9669-0800200c9a66 \u5e94\u7528\u7a0b\u5e8f\u4e13\u6709\u7684\u6807\u8bc6\u7b26 /cloudevents/spec/pull/123 /sensors/tn-1234567/alerts 1-555-123-4567","title":"source/\u4e8b\u4ef6\u6e90"},{"location":"spec/#specversion","text":"\u7c7b\u578b: String \u63cf\u8ff0: \u4e8b\u4ef6\u4f7f\u7528\u7684 CloudEvents \u89c4\u8303\u7684\u7248\u672c\u3002 \u8fd9\u8ba9\u89e3\u91ca\u4e0a\u4e0b\u6587\u73af\u5883\u66f4\u5bb9\u6613\u3002 \u5f53\u5f15\u7528\u8fd9\u4e2a\u7248\u672c\u7684\u89c4\u8303\u65f6\uff0c\u517c\u5bb9\u7684\u4e8b\u4ef6\u751f\u4ea7\u8005\u5fc5\u987b\u4f7f\u7528 1.0 \u7684\u503c\u3002 \u76ee\u524d\uff0c\u6b64\u5c5e\u6027\u4ec5\u5305\u542b\u201c\u4e3b\u8981\u201d\u548c\u201c\u6b21\u8981\u201d\u7248\u672c\u53f7\u3002\u8fd9\u5141\u8bb8\u5bf9\u89c4\u8303\u8fdb\u884c\u201c\u8865\u4e01\u201d\u66f4\u6539\uff0c\u800c\u65e0\u9700\u66f4\u6539\u5e8f\u5217\u5316\u4e2d\u6b64\u5c5e\u6027\u7684\u503c\u3002 \u6ce8\u610f\uff1a\u5bf9\u4e8e\u201c\u5019\u9009\u53d1\u5e03\u201d\u7248\u672c\uff0c\u540e\u7f00\u53ef\u80fd\u7528\u4e8e\u6d4b\u8bd5\u76ee\u7684\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32","title":"specversion/\u89c4\u8303\u7248\u672c"},{"location":"spec/#type","text":"\u7c7b\u578b: String \u63cf\u8ff0: \u8be5\u5c5e\u6027\u5305\u542b\u4e00\u4e2a\u503c\uff0c\u63cf\u8ff0\u4e0e\u539f\u59cb\u4e8b\u4ef6\u76f8\u5173\u7684\u4e8b\u4ef6\u7c7b\u578b\u3002 \u8be5\u5c5e\u6027\u901a\u5e38\u7528\u4e8e\u8def\u7531\u3001\u53ef\u89c2\u5bdf\u6027\u3001\u7b56\u7565\u5b9e\u65bd\u7b49\u3002\u5176\u683c\u5f0f\u662f\u751f\u4ea7\u8005\u5b9a\u4e49\u7684\uff0c\u53ef\u80fd\u5305\u62ec\u8bf8\u5982 type \u7248\u672c\u4e4b\u7c7b\u7684\u4fe1\u606f\u3002 -\u4ece \u5165\u95e8\u6587\u6863-\u5c5e\u6027\u7248\u672c\u63a7\u5236 \u4e2d\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\u3002 \u7ea6\u675f\u6761\u4ef6: \u5fc5\u8981\u7684 \u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32 \u5e94\u8be5\u4ee5\u53cd\u5411 DNS \u540d\u79f0\u4f5c\u4e3a\u524d\u7f00\u3002\u8be5\u524d\u7f00\u57df\u8868\u660e\u4e86\u5b9a\u4e49\u6b64\u4e8b\u4ef6\u7c7b\u578b\u8bed\u4e49\u7684\u7ec4\u7ec7\u3002 \u793a\u4f8b com.github.pull_request.opened com.example.object.deleted.v2","title":"type/\u7c7b\u578b"},{"location":"spec/#optional-attributes","text":"\u4e0b\u5217\u5c5e\u6027\u5728 CloudEvents \u4e2d\u662f\u53ef\u9009\u7684\u3002\u5728 \u7b26\u53f7\u7ea6\u5b9a \u4e2d\u67e5\u770b\u66f4\u591a OPTIONAL \u53ef\u9009\u5b9a\u4e49\u7684\u4fe1\u606f\u3002","title":"OPTIONAL Attributes/\u53ef\u9009\u5c5e\u6027"},{"location":"spec/#datacontenttypedata","text":"\u7c7b\u578b: String RFC 2046 \u63cf\u8ff0: data \u503c\u7684\u5185\u5bb9\u7c7b\u578b\u3002 \u6b64\u5c5e\u6027\u4f7f data \u80fd\u591f\u627f\u8f7d\u4efb\u4f55\u7c7b\u578b\u7684\u5185\u5bb9\uff0c \u56e0\u6b64\u683c\u5f0f\u548c\u7f16\u7801\u53ef\u80fd\u4e0e\u6240\u9009\u4e8b\u4ef6\u683c\u5f0f\u7684\u4e0d\u540c\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528 JSON envelope \u683c\u5f0f\u5448\u73b0\u7684\u4e8b\u4ef6\u53ef\u80fd\u5728\u6570\u636e\u4e2d\u643a\u5e26 XML \u7684\u6709\u6548\u8d1f\u8f7d\uff0c\u8fd9\u4e2a\u5c5e\u6027\u53ef\u4ee5\u7528\u6765\u901a\u77e5\u6d88\u8d39\u8005 \u8bbe\u7f6e\"application/xml\"\u3002 \u5173\u4e8e data \u5185\u5bb9\u5982\u4f55\u63d0\u4f9b\u4e0d\u540c\u7684 datacontenttype \u7684\u503c\u7684\u89c4\u5219\u5728\u4e8b\u4ef6\u683c\u5f0f\u89c4\u8303\u4e2d\u5b9a\u4e49\u3002 \u4f8b\u5982\uff0cJSON \u4e8b\u4ef6\u683c\u5f0f\u5b9a\u4e49\u4e86 3.1 \u8282 \u4e2d\u7684\u5173\u7cfb\u3002 \u5bf9\u4e8e\u67d0\u4e9b\u4e8c\u8fdb\u5236\u6a21\u5f0f\u534f\u8bae\u7ed1\u5b9a\uff0c\u6b64\u5b57\u6bb5\u76f4\u63a5\u80fd\u6620\u5c04\u5230\u76f8\u5e94\u534f\u8bae\u7684\u5185\u5bb9\u7c7b\u578b\u7684\u5143\u6570\u636e\u5c5e\u6027\u4e0a\u3002 \u4e8c\u8fdb\u5236\u6a21\u5f0f\u548c\u5185\u5bb9\u7c7b\u578b\u5143\u6570\u636e\u6620\u5c04\u7684\u89c4\u8303\u89c4\u5219\u53ef\u4ee5\u5728\u5404\u81ea\u7684\u534f\u8bae\u4e2d\u627e\u5230\u3002 \u5728\u67d0\u4e9b\u4e8b\u4ef6\u683c\u5f0f\u4e2d\uff0c\u53ef\u4ee5\u7701\u7565 datacontenttype \u5c5e\u6027\u3002 \u4f8b\u5982\uff0c\u5982\u679c JSON \u683c\u5f0f\u7684\u4e8b\u4ef6\u6ca1\u6709 datacontenttype \u5c5e\u6027\uff0c \u5219\u8868\u793a\u8be5 data \u662f\u7b26\u5408\u201capplication/json\u201d\u5a92\u4f53\u7c7b\u578b\u7684 JSON \u503c\u3002 \u6362\u53e5\u8bdd\u8bf4\uff1a\u4e00\u4e2a\u6ca1\u6709 datacontenttype \u7684 JSON \u683c\u5f0f\u7684\u4e8b\u4ef6\u5b8c\u5168\u7b49\u540c\u4e8e \u4e00\u4e2a\u5e26\u6709 datacontenttype=\"application/json\" \u7684\u4e8b\u4ef6\u3002 \u5f53\u5c06\u6ca1\u6709 datacontenttype \u5c5e\u6027\u7684\u4e8b\u4ef6\u6d88\u606f\u8f6c\u6362\u4e3a\u4e0d\u540c\u7684\u683c\u5f0f\u6216\u534f\u8bae\u7ed1\u5b9a\u65f6\uff0c \u76ee\u6807 datacontenttype \u5e94\u8be5\u663e\u5f0f\u8bbe\u7f6e\u4e3a\u4e8b\u4ef6\u6e90\u7684\u9690\u542b\u6216\u9ed8\u8ba4\u7684 datacontenttype \u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5219\u5fc5\u987b\u9075\u5b88 RFC 2046 \u5236\u5b9a\u7684\u683c\u5f0f \u5a92\u4f53\u7c7b\u578b\u793a\u4f8b IANA Media Types","title":"datacontenttype/data \u5185\u5bb9\u7c7b\u578b"},{"location":"spec/#dataschema","text":"\u7c7b\u578b: URI \u63cf\u8ff0: \u6807\u8bc6 data \u9075\u5b88\u7684\u89c4\u8303\u3002 \u5bf9\u6a21\u5f0f\u7684\u4e0d\u517c\u5bb9\u7684\u66f4\u6539\u5e94\u8be5\u7531\u4e0d\u540c\u7684 URI \u4f53\u73b0\u3002 \u5728 \u5165\u95e8\u6587\u6863-\u5c5e\u6027\u7248\u672c\u63a7\u5236 \u4e2d\u67e5\u770b\u66f4\u591a\u4fe1\u606f\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5fc5\u987b\u662f\u975e\u7a7a\u7684 URI","title":"dataschema/\u6570\u636e\u6a21\u5f0f"},{"location":"spec/#subject","text":"\u7c7b\u578b: String \u63cf\u8ff0: \u8fd9\u4e2a\u5c5e\u6027\u63cf\u8ff0\u4e86\u4e8b\u4ef6\u751f\u4ea7\u8005 (\u7531 source \u6807\u8bc6) \u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u7684\u4e3b\u9898\u4fe1\u606f\u3002 \u5728\u53d1\u5e03-\u8ba2\u9605\u573a\u666f\u4e2d\uff0c\u8ba2\u9605\u8005\u901a\u5e38\u4f1a\u8ba2\u9605 source \u53d1\u51fa\u7684\u4e8b\u4ef6\uff0c \u4f46\u5982\u679c source \u7684\u4e0a\u4e0b\u6587\u73af\u5883\u5177\u6709\u5185\u90e8\u5b50\u7ed3\u6784\uff0c \u5219\u5355\u72ec\u7684 source \u6807\u8bc6\u7b26\u53ef\u80fd\u4e0d\u8db3\u4ee5\u4f5c\u4e3a\u4efb\u4f55\u6307\u5b9a\u4e8b\u4ef6\u7684\u9650\u5b9a\u7b26\u3002 \u5f53\u4e2d\u95f4\u4ef6\u65e0\u6cd5\u89e3\u91ca data \u5185\u5bb9\u65f6\uff0c\u5728\u4e0a\u4e0b\u6587\u5143\u6570\u636e\u4e2d\u8bc6\u522b\u4e8b\u4ef6\u7684\u4e3b\u9898\uff08\u76f8\u5bf9\u4e8e\u4ec5\u4ec5\u5728 data \u8d1f\u8f7d\u4e2d\uff09\u5728\u901a\u8fc7\u8ba2\u9605\u8fc7\u6ee4\u573a\u666f\u4e2d\u7279\u522b\u6709\u7528\u3002 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u8ba2\u9605\u8005\u53ef\u80fd\u4ec5\u4ec5\u5bf9 blobs \u4e2d\u540d\u5b57\u4ee5 .jpg \u6216\u8005 .jpeg \u7ed3\u5c3e\u548c\u53ef\u4ee5\u4e3a\u8be5\u4e8b\u4ef6\u5b50\u96c6\u6784\u5efa\u4e00\u4e2a\u7b80\u5355\u6709\u6548\u7684\u5b57\u7b26\u4e32\u540e\u7f00\u8fc7\u6ee4\u5668\u7684 subject \u5c5e\u6027\u611f\u5174\u8da3\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5fc5\u987b\u662f\u975e\u7a7a\u5b57\u7b26\u4e32 \u793a\u4f8b: \u8ba2\u9605\u8005\u53ef\u80fd\u5bf9\u5728 blob \u5728 blob \u5b58\u50a8\u5bb9\u5668\u4e2d\u521b\u5efa\u7684\u65f6\u5019\u611f\u5174\u8da3\u5e76\u8ba2\u9605\u3002 \u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\uff0c\u4e8b\u4ef6 source \u6807\u793a\u51fa\u8ba2\u9605\u7684\u8303\u56f4\uff08\u5b58\u50a8\u5bb9\u5668\uff09\uff0c type \u6807\u8bc6\u51fa blob \u521b\u5efa\" \u8fd9\u4e2a\u4e8b\u4ef6\uff0c id \u552f\u4e00\u6807\u8bc6\u51fa\u4e8b\u4ef6\u793a\u4f8b\uff0c\u4ee5\u533a\u5206\u5df2\u521b\u5efa\u540c\u540d blob \u7684\u4e8b\u4ef6\uff0c \u800c\u65b0\u521b\u5efa\u7684 blob \u7684\u540d\u5b57\u53ef\u4ee5\u653e\u5728 subject \u5c5e\u6027\u4e2d\uff1a source : https://example.com/storage/tenant/container subject : mynewfile.jpg","title":"subject/\u4e3b\u9898"},{"location":"spec/#time","text":"\u7c7b\u578b: Timestamp \u63cf\u8ff0: \u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4\u6233\u3002 \u5982\u679c\u65e0\u6cd5\u786e\u5b9a\u53d1\u751f\u7684\u65f6\u95f4\uff0c\u5219 CloudEvents \u751f\u4ea7\u8005\u53ef\u4ee5\u5c06\u6b64\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u65f6\u95f4\uff08\u4f8b\u5982\u5f53\u524d\u65f6\u95f4\uff09\u3002 \u4f46\u662f\u5728\u8fd9\u65b9\u9762\uff0c\u540c\u4e00 source \u7684\u6240\u6709\u751f\u4ea7\u8005\u5fc5\u987b\u4fdd\u6301\u4e00\u81f4\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u8981\u4e48\u5b83\u4eec\u90fd\u4f7f\u7528\u53d1\u751f\u7684\u5b9e\u9645\u65f6\u95f4\uff0c\u8981\u4e48\u5b83\u4eec\u90fd\u4f7f\u7528\u76f8\u540c\u7684\u7b97\u6cd5\u6765\u786e\u5b9a\u6240\u4f7f\u7528\u7684\u503c\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684 \u82e5\u6709\u5219\u5fc5\u987b\u9075\u5b88 RFC 3339","title":"time/\u65f6\u95f4"},{"location":"spec/#extension-context-attributes","text":"CloudEvent \u53ef\u4ee5\u5305\u542b\u4efb\u610f\u6570\u91cf\u7684\u5177\u6709\u4e0d\u540c\u540d\u79f0\u7684\u9644\u52a0\u4e0a\u4e0b\u6587\u5c5e\u6027\uff0c\u88ab\u79f0\u4e3a\u201c\u6269\u5c55\u5c5e\u6027\"\u3002 \u6269\u5c55\u5c5e\u6027\u5fc5\u987b\u9075\u5faa\u76f8\u540c\u7684 \u547d\u540d\u7ea6\u5b9a \u5e76\u4f7f\u7528\u4e0e\u6807\u51c6\u5c5e\u6027\u76f8\u540c\u7684 \u7c7b\u578b\u7cfb\u7edf \u3002 \u6269\u5c55\u5c5e\u6027\u5728\u672c\u89c4\u8303\u4e2d\u6ca1\u6709\u5b9a\u4e49\u597d\u7684\u542b\u4e49\uff0c \u5b83\u4eec\u5141\u8bb8\u5916\u90e8\u7cfb\u7edf\u5c06\u5143\u6570\u636e\u9644\u52a0\u5230\u4e8b\u4ef6\uff0c\u5c31\u50cf HTTP \u81ea\u5b9a\u4e49\u8bf7\u6c42\u5934\u4e00\u6837\u3002 \u6269\u5c55\u5c5e\u6027\u603b\u662f\u5982\u6807\u51c6\u5c5e\u6027\u4e00\u6837\uff0c\u6839\u636e\u7ed1\u5b9a\u89c4\u5219\u8fdb\u884c\u5e8f\u5217\u5316\u3002 \u7136\u800c\uff0c\u8be5\u89c4\u8303\u4e0d\u963b\u6b62\u6269\u5c55\u5c06\u4e8b\u4ef6\u5c5e\u6027\u503c\u590d\u5236\u5230\u6d88\u606f\u7684\u5176\u4ed6\u90e8\u5206\uff0c \u4ee5\u4fbf\u4e0e\u4e5f\u5176\u5b83\u5904\u7406\u6d88\u606f\u7684\u975e CloudEvents \u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3002 \u5982\u679c\u590d\u5236\u7684\u503c\u4e0e\u4e91\u4e8b\u4ef6\u5e8f\u5217\u5316\u503c\u4e0d\u540c\uff0c\u6267\u884c\u6b64\u64cd\u4f5c\u7684\u6269\u5c55\u89c4\u8303\u5e94\u8be5\u6307\u5b9a\u63a5\u6536\u8005\u5982\u4f55\u89e3\u91ca\u6d88\u606f\u3002","title":"Extension Context Attributes/\u6269\u5c55\u4e0a\u4e0b\u6587\u5c5e\u6027"},{"location":"spec/#defining-extensions","text":"\u5728\u3010CloudEvent-\u5c5e\u6027\u6269\u5c55](primer.md#cloudevent-attribute-extensions) \u67e5\u9605\u6709\u5173\u6269\u5c55\u4f7f\u7528\u548c\u5b9a\u4e49\u7b49\u76f8\u5173\u4fe1\u606f\u3002 \u6269\u5c55\u7684\u5b9a\u4e49\u5e94\u8be5\u5b8c\u5168\u5b9a\u4e49\u5c5e\u6027\u7684\u65b9\u65b9\u9762\u9762\u2014\u2014\u4f8b\u5982 \u5b83\u7684\u540d\u79f0\u3001\u7c7b\u578b\u3001\u8bed\u4e49\u542b\u4e49\u548c\u53ef\u80fd\u7684\u503c\u3002 \u65b0\u7684\u6269\u5c55\u5b9a\u4e49\u5e94\u8be5\u4f7f\u7528\u4e00\u4e2a\u8db3\u591f\u63cf\u8ff0\u6027\u7684\u540d\u79f0\u6765\u51cf\u5c11\u4e0e\u5176\u4ed6\u6269\u5c55\u7684\u540d\u79f0\u51b2\u7a81\u7684\u673a\u4f1a\u3002 \u7279\u522b\u662f\uff0c\u6269\u5c55\u4f5c\u8005\u5e94\u8be5\u68c0\u67e5 \u6269\u5c55\u6587\u4ef6 \u4e2d\u5df2\u77e5\u7684\u6269\u5c55\u96c6\u2014\u2014\u4e0d\u4ec5\u662f\u53ef\u80fd\u7684\u540d\u79f0\u51b2\u7a81\uff0c\u8fd8\u6709\u76f8\u540c\u76ee\u7684\u51b2\u7a81\u7684\u6269\u5c55\u3002 \u8bb8\u591a\u534f\u8bae\u4e3a\u53d1\u9001\u8005\u63d0\u4f9b\u4e86\u5305\u542b\u989d\u5916\u5143\u6570\u636e\u7684\u80fd\u529b\uff0c\u4f8b\u5982\u4f5c\u4e3a HTTP \u8bf7\u6c42\u5934\u3002 \u867d\u7136\u6ca1\u6709\u5f3a\u5236\u8981\u6c42 CloudEvents \u63a5\u53d7\u8005\u5904\u7406\u548c\u4f20\u9012\u5b83\u4eec\uff0c \u4f46\u5efa\u8bae\u63a5\u53d7\u8005\u901a\u8fc7\u67d0\u79cd\u673a\u5236\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u660e\u786e\u5b83\u4eec\u662f\u975e CloudEvents \u7684\u5143\u6570\u636e\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u8bf4\u660e\u4e86 CloudEvents \u5bf9\u9644\u52a0\u5c5e\u6027\u7684\u9700\u6c42\u3002 \u5728\u8bb8\u591a\u7269\u8054\u7f51\u548c\u4f01\u4e1a\u7528\u4f8b\u4e2d\uff0c\u4e8b\u4ef6\u53ef\u7528\u4e8e\u8de8\u591a\u79cd\u7c7b\u578b\u4e8b\u4ef6\u6267\u884c\u64cd\u4f5c\u7684 serverless \u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 \u4e3a\u4e86\u652f\u6301\u8fd9\u6837\u7684\u7528\u4f8b\uff0c\u4e8b\u4ef6\u751f\u4ea7\u8005\u9700\u8981\u5411\u201c\u4e0a\u4e0b\u6587\u5c5e\u6027\u201d\u6dfb\u52a0\u989d\u5916\u7684\u8eab\u4efd\u5c5e\u6027\uff0c \u4e8b\u4ef6\u6d88\u8d39\u8005\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\u5c06\u8fd9\u4e2a\u4e8b\u4ef6\u4e0e\u5176\u4ed6\u4e8b\u4ef6\u76f8\u5173\u8054\u3002 \u5982\u679c\u6b64\u7c7b\u8eab\u4efd\u5c5e\u6027\u6070\u597d\u662f\u4e8b\u4ef6\u201c\u6570\u636e\u201d\u7684\u4e00\u90e8\u5206\uff0c \u5219\u4e8b\u4ef6\u751f\u4ea7\u8005\u8fd8\u4f1a\u5c06\u8eab\u4efd\u5c5e\u6027\u6dfb\u52a0\u5230\u201c\u4e0a\u4e0b\u6587\u5c5e\u6027\u201d\u4e2d\uff0c \u4ee5\u4fbf\u4e8b\u4ef6\u6d88\u8d39\u8005\u53ef\u4ee5\u8f7b\u677e\u8bbf\u95ee\u6b64\u4fe1\u606f\uff0c\u800c\u65e0\u9700\u89e3\u7801\u548c\u68c0\u67e5\u4e8b\u4ef6\u6570\u636e\u3002 \u6b64\u7c7b\u8eab\u4efd\u5c5e\u6027\u8fd8\u53ef\u7528\u4e8e\u5e2e\u52a9\u4e2d\u95f4\u7f51\u5173\u786e\u5b9a\u5982\u4f55\u8def\u7531\u4e8b\u4ef6\u3002","title":"Defining Extensions/\u5b9a\u4e49\u6269\u5c55"},{"location":"spec/#event-data","text":"\u6b63\u5982 \u6570\u636e \u6240\u5b9a\u4e49\u7684\u90a3\u6837\uff0cCloudEvents \u53ef\u4ee5\u5305\u62ec\u6709\u5173\u4e8b\u4ef6\u7684\u7279\u5b9a\u57df\u7684\u4fe1\u606f\u3002 \u8fd9\u4e9b\u4fe1\u606f\u5c06\u88ab\u5c01\u88c5\u5728 data \u4e2d\u3002 \u63cf\u8ff0: \u4e8b\u4ef6\u8d1f\u8f7d\u3002 \u672c\u89c4\u8303\u5bf9\u8be5\u4fe1\u606f\u7684\u7c7b\u578b\u4e0d\u4f5c\u4efb\u4f55\u9650\u5236\u3002 \u5b83\u88ab\u7f16\u7801\u4e3a\u4e00\u79cd\u5a92\u4f53\u683c\u5f0f\uff0c\u8fd9\u79cd\u683c\u5f0f\u7531 datacontenttype \u5c5e\u6027(\u5982 application/json)\u6307\u5b9a\uff0c\u5f53\u5b58\u5728\u8fd9\u4e9b\u76f8\u5e94\u7684\u5c5e\u6027\u65f6\uff0c\u9075\u5faa dataschema \u683c\u5f0f\u3002 \u7ea6\u675f\u6761\u4ef6: \u53ef\u9009\u7684","title":"Event Data/\u4e8b\u4ef6\u6570\u636e"},{"location":"spec/#size-limits","text":"\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0cCloudEvents \u5c06\u901a\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u901a\u7528\u4e2d\u95f4\u4eba\u8fdb\u884c\u8f6c\u53d1\uff0c \u6bcf\u4e2a\u4e2d\u95f4\u4eba\u90fd\u53ef\u80fd\u5bf9\u8f6c\u53d1\u4e8b\u4ef6\u7684\u5927\u5c0f\u65bd\u52a0\u9650\u5236\u3002 CloudEvents \u4e5f\u53ef\u80fd\u76f4\u63a5\u88ab\u8def\u7531\u5230\u6d88\u8d39\u8005\uff0c\u5982\u5d4c\u5165\u5f0f\u8bbe\u5907\uff0c \u8fd9\u4e9b\u8bbe\u5907\u662f\u53d7\u5b58\u50a8\u6216\u5185\u5b58\u9650\u5236\u7684\uff0c\u5bf9\u5355\u4e2a\u5927\u578b\u4e8b\u4ef6\u8868\u73b0\u4e0d\u4f73\u3002 \u4e8b\u4ef6\u7684\u201c\u5927\u5c0f\u201d\u662f\u5b83\u7684\u7ebf\u8def\u5927\u5c0f\uff0c\u5305\u62ec\u5728\u7ebf\u8def\u4e0a\u4e3a\u4e8b\u4ef6\u4f20\u8f93\u7684\u6bcf\u4e00\u4f4d\uff1a \u534f\u8bae\u5e27\u5143\u6570\u636e\u3001\u4e8b\u4ef6\u5143\u6570\u636e\u548c\u4e8b\u4ef6\u6570\u636e\uff0c\u57fa\u4e8e\u6240\u9009\u7684\u4e8b\u4ef6\u683c\u5f0f\u548c\u6240\u9009\u7684\u534f\u8bae\u7ed1\u5b9a\u3002 \u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u9700\u8981\u8de8\u4e0d\u540c\u534f\u8bae\u8def\u7531\u4e8b\u4ef6\u6216\u91cd\u65b0\u7f16\u7801\u4e8b\u4ef6\uff0c \u5e94\u7528\u7a0b\u5e8f\u80fd\u4f7f\u7528\u7684\u6548\u7387\u6700\u4f4e\u7684\u534f\u8bae\u548c\u7f16\u7801\uff0c\u90fd\u9700\u8981\u7b26\u5408\u8fd9\u4e9b\u5927\u5c0f\u9650\u5236\uff1a \u4e2d\u95f4\u4eba\u8f6c\u53d1\u7684\u4e8b\u4ef6\u5927\u5c0f\u5fc5\u987b\u4e3a 64 KB \u6216\u66f4\u5c0f\u3002 \u6d88\u8d39\u8005\u5e94\u8be5\u80fd\u63a5\u53d7\u5927\u5c0f\u81f3\u5c11\u4e3a 64 KB \u7684\u4e8b\u4ef6\u3002 \u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e0a\u8ff0\u89c4\u5219\u5c06\u5141\u8bb8\u751f\u4ea7\u8005\u5b89\u5168\u5730\u53d1\u5e03\u6700\u5927 64KB \u7684\u4e8b\u4ef6\u3002 \u8fd9\u91cc\u7684\u5b89\u5168\u610f\u5473\u7740\u751f\u4ea7\u8005\u671f\u671b\u4e8b\u4ef6\u88ab\u6240\u6709\u4e2d\u95f4\u4eba\u63a5\u53d7\u5e76\u5408\u7406\u5730\u8f6c\u53d1\u3002 \u5b83\u662f\u6307\u5728\u4efb\u4f55\u7279\u5b9a\u6d88\u8d39\u8005\u7684\u63a7\u5236\u4e4b\u4e0b\uff0c\u65e0\u8bba\u6d88\u8d39\u8005\u662f\u5426\u7531\u4e8e\u672c\u5730\u8003\u8651\u800c\u9009\u62e9\u63a5\u53d7\u6216\u62d2\u7edd\u8be5\u5927\u5c0f\u7684\u4e8b\u4ef6\u3002 \u901a\u5e38\uff0cCloudEvents \u53d1\u5e03\u8005\u5e94\u8be5\u901a\u8fc7\u907f\u514d\u5c06\u5927\u578b\u6570\u636e\u9879\u5d4c\u5165\u5230\u4e8b\u4ef6\u800c\u4f7f\u7528\u4e8b\u4ef6\u6709\u6548\u94fe\u63a5\u5230\u6b64\u7c7b\u6570\u636e\u9879\uff0c\u6765\u4fdd\u6301\u4e8b\u4ef6\u7d27\u51d1\u3002 \u4ece\u8bbf\u95ee\u63a7\u5236\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u66f4\u5e7f\u6cdb\u7684\u4e8b\u4ef6\u5206\u5e03\u5f0f\u5316\u6709\u5e2e\u52a9\uff0c \u56e0\u4e3a\u901a\u8fc7\u89e3\u6790\u94fe\u63a5\u8bbf\u95ee\u4e0e\u4e8b\u4ef6\u76f8\u5173\u7684\u7ec6\u8282\u80fd\u5b9e\u73b0\u5dee\u5f02\u5316\u8bbf\u95ee\u63a7\u5236\u548c\u9009\u62e9\u6027\u62ab\u9732\uff0c \u800c\u4e0d\u662f\u5c06\u654f\u611f\u8be6\u7ec6\u6570\u636e\u76f4\u63a5\u5d4c\u5165\u5230\u4e8b\u4ef6\u4e2d\u3002","title":"Size Limits/\u5927\u5c0f\u9650\u5236"},{"location":"spec/#privacy-and-security","text":"\u4e92\u64cd\u4f5c\u6027\u662f\u672c\u89c4\u8303\u80cc\u540e\u7684\u4e3b\u8981\u9a71\u52a8\u529b\uff0c\u5b9e\u73b0\u6b64\u76ee\u6807\u9700\u8981\u4e00\u4e9b\u4fe1\u606f\u660e\u786e\u53ef\u7528\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u4fe1\u606f\u7684\u6cc4\u6f0f\u3002 \u8003\u8651\u4ee5\u4e0b\u4e8b\u9879\u4ee5\u9632\u6b62\u4fe1\u606f\u610f\u5916\u6cc4\u6f0f\uff0c\u5c24\u5176\u662f\u5728\u5229\u7528\u7b2c\u4e09\u65b9\u5e73\u53f0\u548c\u901a\u4fe1\u7f51\u7edc\u65f6\uff1a \u4e0a\u4e0b\u6587\u5c5e\u6027 \u654f\u611f\u4fe1\u606f\u4e0d\u5e94\u5728\u4e0a\u4e0b\u6587\u5c5e\u6027\u4e2d\u643a\u5e26\u3002 CloudEvent \u751f\u4ea7\u8005\u3001\u6d88\u8d39\u8005\u548c\u4e2d\u95f4\u4eba\u53ef\u4ee5\u81ea\u67e5\u5e76\u8bb0\u5f55\u4e0b\u4e0a\u4e0b\u6587\u5c5e\u6027\u3002 \u6570\u636e \u7279\u5b9a\u7684 \u4e8b\u4ef6\u6570\u636e \u5e94\u8be5\u88ab\u52a0\u5bc6\u4ee5\u9650\u5236\u5bf9\u53d7\u4fe1\u4efb\u65b9\u7684\u53ef\u89c1\u6027\u3002 \u7528\u4e8e\u8fd9\u79cd\u52a0\u5bc6\u7684\u673a\u5236\u662f\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u534f\u8bae\uff0c\u4e0d\u5728\u672c\u89c4\u8303\u7684\u8ba8\u8bba\u8303\u56f4\u5185\u3002 \u534f\u8bae\u7ed1\u5b9a \u5e94\u8be5\u91c7\u7528\u534f\u8bae\u7ea7\u522b\u7684\u5b89\u5168\u6027\u673a\u5236\u6765\u786e\u4fdd CloudEvents \u5b8c\u6210\u53ef\u4fe1\u548c\u5b89\u5168\u7684\u4ea4\u6362\u3002","title":"Privacy and Security/\u9690\u79c1\u4e0e\u5b89\u5168"},{"location":"spec/#example","text":"\u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86\u4e00\u4e2a\u5e8f\u5217\u5316\u4e3a JSON \u7684 CloudEvent\uff1a { \"specversion\" : \"1.0\" , \"type\" : \"com.github.pull_request.opened\" , \"source\" : \"https://github.com/cloudevents/spec/pull\" , \"subject\" : \"123\" , \"id\" : \"A234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"text/xml\" , \"data\" : \"<much wow=\\\"xml\\\"/>\" }","title":"Example/\u793a\u4f8b"},{"location":"translations/","text":"Translation list of the cloudevents spec \u00b6 Documents Status Last edited Version /cloudevents/adapters/aws-s3.md Ready to start /cloudevents/adapters/couchdb.md Ready to start /cloudevents/adapters/github.md Ready to start /cloudevents/adapters/gitlab.md Ready to start /cloudevents/bindings/amqp-protocol-binding.md Ready to start /cloudevents/bindings/http-protocol-binding.md Ready to start /cloudevents/bindings/kafka-protocol-binding.md Ready to start /cloudevents/bindings/mqtt-protocol-binding.md Ready to start /cloudevents/bindings/nats-protocol-binding.md Ready to start /cloudevents/bindings/websockets-protocol-binding.md Ready to start /cloudevents/extensions/dataref.md Ready to start /cloudevents/extensions/distributed-tracing.md Ready to start /cloudevents/extensions/partitioning.md Ready to start /cloudevents/extensions/sampledrate.md Ready to start /cloudevents/extensions/sequence.md Ready to start /cloudevents/formats/avro-format.md Ready to start /cloudevents/formats/json-format.md Ready to start /cloudevents/formats/protobuf-format.md Ready to start /cloudevents/working-drafts/xml-format.md Ready to start /cloudevents/adapters.md Ready to start /cloudevents/documented-extensions.md Ready to start /cloudevents/http-webhook.md Ready to start /cloudevents/primer.md Ready to start /cloudevents/proprietary-specs.md Ready to start /cloudevents/README.md PR reviewing 2022-03-26T13:54:11.254Z - /cloudevents/RELEASE_NOTES.md Ready to start - /cloudevents/SDK.md Ready to start /cloudevents/spec.md Ready to start","title":"\u7ffb\u8bd1"},{"location":"translations/#translation-list-of-the-cloudevents-spec","text":"Documents Status Last edited Version /cloudevents/adapters/aws-s3.md Ready to start /cloudevents/adapters/couchdb.md Ready to start /cloudevents/adapters/github.md Ready to start /cloudevents/adapters/gitlab.md Ready to start /cloudevents/bindings/amqp-protocol-binding.md Ready to start /cloudevents/bindings/http-protocol-binding.md Ready to start /cloudevents/bindings/kafka-protocol-binding.md Ready to start /cloudevents/bindings/mqtt-protocol-binding.md Ready to start /cloudevents/bindings/nats-protocol-binding.md Ready to start /cloudevents/bindings/websockets-protocol-binding.md Ready to start /cloudevents/extensions/dataref.md Ready to start /cloudevents/extensions/distributed-tracing.md Ready to start /cloudevents/extensions/partitioning.md Ready to start /cloudevents/extensions/sampledrate.md Ready to start /cloudevents/extensions/sequence.md Ready to start /cloudevents/formats/avro-format.md Ready to start /cloudevents/formats/json-format.md Ready to start /cloudevents/formats/protobuf-format.md Ready to start /cloudevents/working-drafts/xml-format.md Ready to start /cloudevents/adapters.md Ready to start /cloudevents/documented-extensions.md Ready to start /cloudevents/http-webhook.md Ready to start /cloudevents/primer.md Ready to start /cloudevents/proprietary-specs.md Ready to start /cloudevents/README.md PR reviewing 2022-03-26T13:54:11.254Z - /cloudevents/RELEASE_NOTES.md Ready to start - /cloudevents/SDK.md Ready to start /cloudevents/spec.md Ready to start","title":"Translation list of the cloudevents spec"},{"location":"SDK/","text":"CloudEvents SDK \u8981\u6c42 \u00b6 \u672c\u6587\u6863\u65e8\u5728\u63cf\u8ff0\u5bf9\u65b0\u5efa CloudEvents \u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\uff08SDKs\uff09\u7684\u6700\u4f4e\u8981\u6c42\u96c6\u3002\u5f00\u53d1\u8005\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u8fd9\u4e9b SDKs \u6765\u589e\u5f3a\u5e76\u52a0\u901f CloudEvents \u7684\u96c6\u6210\u3002\u4ee5\u4e0b SDKs \u4f5c\u4e3a\u793e\u533a\u7684\u91cd\u8981\u6210\u679c\u5c06\u4f1a\u88ab CloudEvents \u56e2\u961f\u652f\u6301\u5e76\u7ef4\u62a4\u4e0b\u53bb\uff1a CSharp Go SDK Java SDK JavaScript SDK PHP SDK PowerShell Python SDK Ruby SDK Rust SDK \u672c\u6587\u6863\u4e3a CloudEvents \u7684 SDK \u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u6307\u5bfc\u548c\u8981\u6c42\u3002\u5b83\u5c06\u4f34\u968f\u7740 ClodEvents \u6838\u5fc3\u89c4\u8303\u4e0d\u65ad\u66f4\u65b0\u4e0b\u53bb\u3002 \u8d21\u732e\u88ab\u63a5\u53d7\u7684\u6761\u4ef6 \u00b6 CloudEvents \u56e2\u961f\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u7684\u793e\u533a\u5341\u5206\u6b22\u8fce\u65b0\u7684\u6210\u5458\u4ee5\u53ca\u4ed6\u4eec\u7684\u8d21\u732e\u3002\u4f46\u4e3a\u4e86\u786e\u4fdd\u65b0\u8d21\u732e\u7684 SDK \u80fd\u591f\u88ab\u652f\u6301\u548c\u7ef4\u62a4\uff0cCloudEvents \u5c0f\u7ec4\u8981\u6c42\u5fc5\u987b\u786e\u4fdd\u4ee5\u4e0b\u5185\u5bb9\uff1a \u6bcf\u4e2a SDK \u90fd\u9700\u8981\u6d3b\u8dc3\u7684\u8054\u7cfb\u4eba\u6216\u7ec4\u7ec7\u652f\u6301\u3002 \u6bcf\u4e2a SDK \u90fd\u5fc5\u987b\u652f\u6301\u6700\u65b0\u7248\uff08N\uff09\u4ee5\u53ca\u524d\u4e00\uff08N-1\uff09\u5927\u7248\u672c\u7684 CloudEvents \u89c4\u8303 \u3002 \u5728\u4e00\u4e2a\u5927\u7248\u672c\u4e2d\uff0cSDK \u53ea\u9700\u8981\u652f\u6301\u5b83\u6700\u65b0\u7684\u5c0f\u7248\u672c\u5373\u53ef\u3002 \u6211\u4eec\u4e0d\u5f3a\u5236\u8981\u6c42 SDK \u5bf9\u5019\u9009\u7248\u672c\u63d0\u4f9b\u652f\u6301\uff0c\u4f46\u5f3a\u70c8\u5efa\u8bae\u4f5c\u8005\u8fd9\u6837\u505a\u3002 \u6ce8\u610f\uff1av1.0 \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u53ea\u8981 v1.0 \u8fd8\u662f\u6700\u65b0\u7248\u672c\uff0cSDKs \u5728\u652f\u6301\u5b83\u7684\u540c\u65f6\u4e5f\u5e94\u8be5\u652f\u6301 v0.3\u3002 \u6280\u672f\u6027\u8981\u6c42 \u00b6 \u6bcf\u4e2a SDK \u90fd\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u540c\u65f6\u652f\u6301 CloudEvents \u89c4\u8303\u7684\u91cc\u7a0b\u7891\u7248\u672c\u548c\u6b63\u5728\u5f00\u53d1\u4e2d\u7684\u7248\u672c\u3002 \u5c06 CloudEvents \u6807\u51c6\u4e8b\u4ef6\u7ecf\u8fc7\u7f16\u7801\u5b58\u5728\u7279\u5b9a\u4f20\u8f93\u534f\u8bae\u7684\u6d88\u606f\u4e2d\u3002 \u5c06\u7279\u5b9a\u7684\u4f20\u8f93\u5c42\u6d88\u606f\u89e3\u7801\u6210\u4e3a CloudEvents \u6807\u51c6\u683c\u5f0f\u4e8b\u4ef6\u3002 \u4f7f\u7528\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0 SDK\u3002 \u4f7f\u7528\u8fd9\u4e9b\u7f16\u7a0b\u8bed\u8a00\u7684\u6d41\u884c\u7248\u672c\u3002 \u540c\u65f6\u652f\u6301 HTTP \u4f20\u8f93\u4e2d\u7684 structured \u548c binary \u4e24\u79cd\u6a21\u578b\u3002 \u5bf9\u8c61\u6a21\u578b\u7ed3\u6784\u5efa\u8bae \u00b6 \u6bcf\u4e2a SDK \u90fd\u5e94\u8be5\u63d0\u4f9b\u4e00\u79cd\u7528\u6765\u8868\u793a\u6807\u51c6\u4e8b\u4ef6\u7684\u901a\u7528\u683c\u5f0f\uff0c\u8fd9\u79cd\u683c\u5f0f\u662f\u7c7b/\u5bf9\u8c61/\u7ed3\u6784\u8fd9\u6837\u7684\u5f62\u5f0f\u3002 SDK \u5e94\u4f7f\u7528\u6237\u80fd\u591f\u7ed5\u8fc7 CloudEvents \u4e8b\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u7279\u5b9a\u7f16\u7801\u548c\u89e3\u7801\u3002\u4e8b\u4ef6\u5bf9\u8c61\u7684\u4e00\u822c\u4f20\u8f93\u6d41\u7a0b\u5e94\u8be5\u662f\uff1a \u4e8b\u4ef6 (-> \u6d88\u606f) -> \u7f51\u7edc\u4f20\u8f93 \u4ee5\u53ca \u7f51\u7edc\u4f20\u8f93 (-> \u6d88\u606f) -> \u4e8b\u4ef6 \u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4e3a SDK \u5b9e\u73b0\u4e00\u4e2a\u4f20\u8f93\u5c42\u7684\u5305\u88c5\u7c7b\uff0c\u91cd\u70b9\u5e94\u8be5\u662f\u5b9e\u73b0\u5f53\u524d\u7f16\u7a0b\u8bed\u8a00\u4e0e\u9ad8\u7b49\u7ea7\u7684 \u4e8b\u4ef6 \u5bf9\u8c61\u7684\u4ea4\u4e92\uff0c\u5e76\u63d0\u4f9b\u5de5\u5177\u6765\u83b7\u53d6 \u4e8b\u4ef6 \uff0c\u4ee5\u53ca\u5c06 \u4e8b\u4ef6 \u8f6c\u6362\u4e3a\u4f60\u9009\u62e9\u7684\u4f20\u8f93\u5b9e\u73b0\u80fd\u4f7f\u7528\u7684\u683c\u5f0f\u3002 Event \u4f5c\u4e3a\u4e00\u4e2a\u9ad8\u5c42\u7ea7\u7684\u6982\u5ff5\uff0c\u5b83\u7684 SDK \u9700\u8981\u80fd\u5e2e\u52a9\u4ee5\u4e0b\u4efb\u52a1\uff1a \u6784\u9020\u4e00\u4e2a\u4e8b\u4ef6. \u5c06\u4e00\u4e2a\u4e8b\u4ef6\u4ee5\u7ed9\u5b9a\u7684\u4f20\u8f93\u534f\u8bae\u548c\u7f16\u7801\u65b9\u5f0f\u8fdb\u884c\u7f16\u7801\uff08\u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u5c06\u4e8b\u4ef6\u7f16\u5199\u5165\u4f20\u8f93\u6d88\u606f\u4e2d\uff09\u3002 \u5c06\u4e00\u4e2a\u4e8b\u4ef6\u4ee5\u7ed9\u5b9a\u4f20\u8f93\u534f\u8bae\u7684\u6d88\u606f\u3001\u8bf7\u6c42\u6216\u54cd\u5e94\u683c\u5f0f\u8fdb\u884c\u89e3\u7801\u3002 \u6784\u5efa\u4e00\u4e2a\u4e8b\u4ef6 \u00b6 SDK \u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u901a\u8fc7\u5355\u6761\u6216\u591a\u6761\u6d88\u606f\u6784\u5efa\u4e8b\u4ef6\u3002SDK \u7684\u4f7f\u7528\u8005\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u5feb\u901f\u5730\u6784\u5efa CloudEvents \u683c\u5f0f\u7684\u4e8b\u4ef6\u6216\u662f\u5c06\u4ed6\u4eec\u7684\u4e8b\u4ef6\u6570\u636e\u8f6c\u6362\u4e3a CloudEvents \u683c\u5f0f\u7684\u4e8b\u4ef6\u3002\u5728\u5b9e\u8df5\u4e2d\u4e8b\u4ef6\u6784\u5efa\u901a\u5e38\u6709\u4e24\u79cd\u5f62\u5f0f\u3002 \u4e8b\u4ef6\u521b\u5efa \"\u6211\u6709\u4e00\u4e9b\u8fd8\u4e0d\u662f CloudEvent \u7684\u6570\u636e\uff0c\u6211\u5e0c\u671b\u5c06\u5b83\u4eec\u53d8\u6210 CloudEvent\u3002\" \u4e8b\u4ef6\u8f6c\u6362 \"\u6211\u6709\u4e00\u4e2a CloudEvent \u683c\u5f0f\u7684\u4e8b\u4ef6\uff0c\u6211\u5e0c\u671b\u5b83\u53d8\u6210\u4e0d\u540c\u7684\u4e8b\u4ef6\u3002\" \"\u6211\u6709\u4e00\u4e2a CloudEvent \u683c\u5f0f\u7684\u4e8b\u4ef6\uff0c\u6211\u5e0c\u671b\u5b83\u8f6c\u6362\u4e0d\u540c\u7684\u683c\u5f0f\u3002\" \u4e8b\u4ef6\u7684\u521b\u5efa\u662f SDK \u4e2d\u6700\u5e38\u89c1\u7684\u7528\u6cd5\u3002 \u4e8b\u4ef6\u8f6c\u6362\u53ef\u4ee5\u901a\u8fc7\u5b58\u53d6\u6a21\u5f0f\u5b9e\u73b0\uff0c\u6bd4\u5982\u6dfb\u52a0 getter \u6216 setter \u65b9\u6cd5\u3002 \u4f46\u662f\u76f4\u63a5\u7684 key \u8bbf\u95ee\u6216\u8005\u662f named-key \u8bbf\u95ee\u51fd\u6570\u4e5f\u662f\u53ef\u4ee5\u5229\u7528\u7684\u3002 \u65e0\u8bba\u662f\u90a3\u79cd\u60c5\u51b5\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u6839\u636e\u53c2\u6570\u96c6\u6765\u9a8c\u8bc1\u6700\u7ec8\u4e8b\u4ef6\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5728\u53c2\u6570\u96c6\u4e2d\uff0cCloudEvents \u89c4\u8303\u7684\u7248\u672c\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002 \u7f16\u7801/\u89e3\u7801\u4e00\u4e2a\u4e8b\u4ef6 \u00b6 \u6bcf\u4e2a SDK \u5e94\u8be5\u652f\u6301\u5728\u4f20\u8f93\u534f\u8bae\u548c\u7f16\u7801\u65b9\u9762\u5bf9\u4e00\u4e2a\u4e8b\u4ef6\u8fdb\u884c\u7f16\u7801\u548c\u89e3\u7801\u3002\u7ed3\u6784\u5316\u7684\u7f16\u7801\u662f\u6700\u5bb9\u6613\u652f\u6301\u7684\uff0c\u56e0\u4e3a\u5b83\u5c31\u662f json \u683c\u5f0f\u3002\u4f46\u662f Binary \u5bf9\u4e8e\u4e0d\u540c\u7684\u4f20\u8f93\u534f\u8bae\u800c\u8a00\u5c31\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u4e86\u3002 \u6570\u636e \u00b6 \u4e8b\u4ef6\u6570\u636e\u7684\u8bbf\u95ee\u5219\u6709\u5f88\u591a\u79cd\u60c5\u51b5\u9700\u8981\u8003\u8651\uff0c\u6bd4\u5982\u4e8b\u4ef6\u53ef\u80fd\u88ab\u7f16\u7801\u4e3a base64 \u683c\u5f0f\u7684\u7ed3\u6784\u5316\u6570\u636e\uff0c\u6216\u662f json \u8fd9\u79cd\u4f20\u8f93\u683c\u5f0f\u3002SDK \u5fc5\u987b\u8981\u63d0\u4f9b\u65b9\u6cd5\u5c06\u4e8b\u4ef6\u6570\u636e\u4ece\u8fd9\u4e9b\u683c\u5f0f\u4e2d\u8f6c\u6362\u4e3a\u672c\u5730\u7684\u683c\u5f0f\u3002 \u6269\u5c55 \u00b6 SDK \u652f\u6301 CloudEvents \u7684\u6269\u5c55\u4e5f\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4f46\u662f\u63d0\u4f9b\u4e00\u4e2a\u80fd\u955c\u50cf\u6570\u636e\u8bbf\u95ee\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u3002 \u9a8c\u8bc1 \u00b6 \u5bf9\u4e8e\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u9a8c\u8bc1\u90fd\u5fc5\u987b\u662f\u53ef\u884c\u7684\u3002\u540c\u65f6\u9a8c\u8bc1\u529f\u80fd\u5fc5\u987b\u8981\u5c06 CloudEvents \u89c4\u8303\u7684\u7248\u672c\u8003\u8651\u5728\u5185\u3002\u5bf9\u4e8e SDK \u7684\u6240\u6709\u8981\u6c42\u90fd\u8981\u6839\u636e\u4e0d\u540c\u7248\u672c\u7684\u89c4\u8303\u4e00\u4e00\u5b9e\u73b0\u3002 \u6587\u6863 \u00b6 \u6bcf\u4e2a SDK \u5fc5\u987b\u63d0\u4f9b\u4e0d\u540c\u7684\u4f8b\u5b50\uff0c\u6700\u5c11\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u57fa\u4e8e HTTP \u4f20\u8f93\u5e76\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\u7684\u4f8b\u5b50\uff1a \u6784\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u7f16\u7801\u5e76\u53d1\u9001\u4e00\u4e2a\u6784\u5efa\u597d\u7684\u4e8b\u4ef6\u3002 \u63a5\u6536\u5e76\u89e3\u7801\u4e00\u4e2a\u4e8b\u4ef6\u3002","title":"\u5f00\u53d1\u7ec4\u4ef6"},{"location":"SDK/#cloudevents-sdk","text":"\u672c\u6587\u6863\u65e8\u5728\u63cf\u8ff0\u5bf9\u65b0\u5efa CloudEvents \u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\uff08SDKs\uff09\u7684\u6700\u4f4e\u8981\u6c42\u96c6\u3002\u5f00\u53d1\u8005\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u8fd9\u4e9b SDKs \u6765\u589e\u5f3a\u5e76\u52a0\u901f CloudEvents \u7684\u96c6\u6210\u3002\u4ee5\u4e0b SDKs \u4f5c\u4e3a\u793e\u533a\u7684\u91cd\u8981\u6210\u679c\u5c06\u4f1a\u88ab CloudEvents \u56e2\u961f\u652f\u6301\u5e76\u7ef4\u62a4\u4e0b\u53bb\uff1a CSharp Go SDK Java SDK JavaScript SDK PHP SDK PowerShell Python SDK Ruby SDK Rust SDK \u672c\u6587\u6863\u4e3a CloudEvents \u7684 SDK \u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u6307\u5bfc\u548c\u8981\u6c42\u3002\u5b83\u5c06\u4f34\u968f\u7740 ClodEvents \u6838\u5fc3\u89c4\u8303\u4e0d\u65ad\u66f4\u65b0\u4e0b\u53bb\u3002","title":"CloudEvents SDK \u8981\u6c42"},{"location":"SDK/#_1","text":"CloudEvents \u56e2\u961f\u4f5c\u4e3a\u4e00\u4e2a\u5f00\u6e90\u7684\u793e\u533a\u5341\u5206\u6b22\u8fce\u65b0\u7684\u6210\u5458\u4ee5\u53ca\u4ed6\u4eec\u7684\u8d21\u732e\u3002\u4f46\u4e3a\u4e86\u786e\u4fdd\u65b0\u8d21\u732e\u7684 SDK \u80fd\u591f\u88ab\u652f\u6301\u548c\u7ef4\u62a4\uff0cCloudEvents \u5c0f\u7ec4\u8981\u6c42\u5fc5\u987b\u786e\u4fdd\u4ee5\u4e0b\u5185\u5bb9\uff1a \u6bcf\u4e2a SDK \u90fd\u9700\u8981\u6d3b\u8dc3\u7684\u8054\u7cfb\u4eba\u6216\u7ec4\u7ec7\u652f\u6301\u3002 \u6bcf\u4e2a SDK \u90fd\u5fc5\u987b\u652f\u6301\u6700\u65b0\u7248\uff08N\uff09\u4ee5\u53ca\u524d\u4e00\uff08N-1\uff09\u5927\u7248\u672c\u7684 CloudEvents \u89c4\u8303 \u3002 \u5728\u4e00\u4e2a\u5927\u7248\u672c\u4e2d\uff0cSDK \u53ea\u9700\u8981\u652f\u6301\u5b83\u6700\u65b0\u7684\u5c0f\u7248\u672c\u5373\u53ef\u3002 \u6211\u4eec\u4e0d\u5f3a\u5236\u8981\u6c42 SDK \u5bf9\u5019\u9009\u7248\u672c\u63d0\u4f9b\u652f\u6301\uff0c\u4f46\u5f3a\u70c8\u5efa\u8bae\u4f5c\u8005\u8fd9\u6837\u505a\u3002 \u6ce8\u610f\uff1av1.0 \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u6211\u4eec\u5efa\u8bae\u53ea\u8981 v1.0 \u8fd8\u662f\u6700\u65b0\u7248\u672c\uff0cSDKs \u5728\u652f\u6301\u5b83\u7684\u540c\u65f6\u4e5f\u5e94\u8be5\u652f\u6301 v0.3\u3002","title":"\u8d21\u732e\u88ab\u63a5\u53d7\u7684\u6761\u4ef6"},{"location":"SDK/#_2","text":"\u6bcf\u4e2a SDK \u90fd\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff1a \u540c\u65f6\u652f\u6301 CloudEvents \u89c4\u8303\u7684\u91cc\u7a0b\u7891\u7248\u672c\u548c\u6b63\u5728\u5f00\u53d1\u4e2d\u7684\u7248\u672c\u3002 \u5c06 CloudEvents \u6807\u51c6\u4e8b\u4ef6\u7ecf\u8fc7\u7f16\u7801\u5b58\u5728\u7279\u5b9a\u4f20\u8f93\u534f\u8bae\u7684\u6d88\u606f\u4e2d\u3002 \u5c06\u7279\u5b9a\u7684\u4f20\u8f93\u5c42\u6d88\u606f\u89e3\u7801\u6210\u4e3a CloudEvents \u6807\u51c6\u683c\u5f0f\u4e8b\u4ef6\u3002 \u4f7f\u7528\u5e38\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0 SDK\u3002 \u4f7f\u7528\u8fd9\u4e9b\u7f16\u7a0b\u8bed\u8a00\u7684\u6d41\u884c\u7248\u672c\u3002 \u540c\u65f6\u652f\u6301 HTTP \u4f20\u8f93\u4e2d\u7684 structured \u548c binary \u4e24\u79cd\u6a21\u578b\u3002","title":"\u6280\u672f\u6027\u8981\u6c42"},{"location":"SDK/#_3","text":"\u6bcf\u4e2a SDK \u90fd\u5e94\u8be5\u63d0\u4f9b\u4e00\u79cd\u7528\u6765\u8868\u793a\u6807\u51c6\u4e8b\u4ef6\u7684\u901a\u7528\u683c\u5f0f\uff0c\u8fd9\u79cd\u683c\u5f0f\u662f\u7c7b/\u5bf9\u8c61/\u7ed3\u6784\u8fd9\u6837\u7684\u5f62\u5f0f\u3002 SDK \u5e94\u4f7f\u7528\u6237\u80fd\u591f\u7ed5\u8fc7 CloudEvents \u4e8b\u4ef6\u4f20\u8f93\u534f\u8bae\u7684\u7279\u5b9a\u7f16\u7801\u548c\u89e3\u7801\u3002\u4e8b\u4ef6\u5bf9\u8c61\u7684\u4e00\u822c\u4f20\u8f93\u6d41\u7a0b\u5e94\u8be5\u662f\uff1a \u4e8b\u4ef6 (-> \u6d88\u606f) -> \u7f51\u7edc\u4f20\u8f93 \u4ee5\u53ca \u7f51\u7edc\u4f20\u8f93 (-> \u6d88\u606f) -> \u4e8b\u4ef6 \u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4e3a SDK \u5b9e\u73b0\u4e00\u4e2a\u4f20\u8f93\u5c42\u7684\u5305\u88c5\u7c7b\uff0c\u91cd\u70b9\u5e94\u8be5\u662f\u5b9e\u73b0\u5f53\u524d\u7f16\u7a0b\u8bed\u8a00\u4e0e\u9ad8\u7b49\u7ea7\u7684 \u4e8b\u4ef6 \u5bf9\u8c61\u7684\u4ea4\u4e92\uff0c\u5e76\u63d0\u4f9b\u5de5\u5177\u6765\u83b7\u53d6 \u4e8b\u4ef6 \uff0c\u4ee5\u53ca\u5c06 \u4e8b\u4ef6 \u8f6c\u6362\u4e3a\u4f60\u9009\u62e9\u7684\u4f20\u8f93\u5b9e\u73b0\u80fd\u4f7f\u7528\u7684\u683c\u5f0f\u3002 Event \u4f5c\u4e3a\u4e00\u4e2a\u9ad8\u5c42\u7ea7\u7684\u6982\u5ff5\uff0c\u5b83\u7684 SDK \u9700\u8981\u80fd\u5e2e\u52a9\u4ee5\u4e0b\u4efb\u52a1\uff1a \u6784\u9020\u4e00\u4e2a\u4e8b\u4ef6. \u5c06\u4e00\u4e2a\u4e8b\u4ef6\u4ee5\u7ed9\u5b9a\u7684\u4f20\u8f93\u534f\u8bae\u548c\u7f16\u7801\u65b9\u5f0f\u8fdb\u884c\u7f16\u7801\uff08\u5982\u679c\u6709\u9700\u8981\u7684\u8bdd\u5c06\u4e8b\u4ef6\u7f16\u5199\u5165\u4f20\u8f93\u6d88\u606f\u4e2d\uff09\u3002 \u5c06\u4e00\u4e2a\u4e8b\u4ef6\u4ee5\u7ed9\u5b9a\u4f20\u8f93\u534f\u8bae\u7684\u6d88\u606f\u3001\u8bf7\u6c42\u6216\u54cd\u5e94\u683c\u5f0f\u8fdb\u884c\u89e3\u7801\u3002","title":"\u5bf9\u8c61\u6a21\u578b\u7ed3\u6784\u5efa\u8bae"},{"location":"SDK/#_4","text":"SDK \u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u901a\u8fc7\u5355\u6761\u6216\u591a\u6761\u6d88\u606f\u6784\u5efa\u4e8b\u4ef6\u3002SDK \u7684\u4f7f\u7528\u8005\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u5feb\u901f\u5730\u6784\u5efa CloudEvents \u683c\u5f0f\u7684\u4e8b\u4ef6\u6216\u662f\u5c06\u4ed6\u4eec\u7684\u4e8b\u4ef6\u6570\u636e\u8f6c\u6362\u4e3a CloudEvents \u683c\u5f0f\u7684\u4e8b\u4ef6\u3002\u5728\u5b9e\u8df5\u4e2d\u4e8b\u4ef6\u6784\u5efa\u901a\u5e38\u6709\u4e24\u79cd\u5f62\u5f0f\u3002 \u4e8b\u4ef6\u521b\u5efa \"\u6211\u6709\u4e00\u4e9b\u8fd8\u4e0d\u662f CloudEvent \u7684\u6570\u636e\uff0c\u6211\u5e0c\u671b\u5c06\u5b83\u4eec\u53d8\u6210 CloudEvent\u3002\" \u4e8b\u4ef6\u8f6c\u6362 \"\u6211\u6709\u4e00\u4e2a CloudEvent \u683c\u5f0f\u7684\u4e8b\u4ef6\uff0c\u6211\u5e0c\u671b\u5b83\u53d8\u6210\u4e0d\u540c\u7684\u4e8b\u4ef6\u3002\" \"\u6211\u6709\u4e00\u4e2a CloudEvent \u683c\u5f0f\u7684\u4e8b\u4ef6\uff0c\u6211\u5e0c\u671b\u5b83\u8f6c\u6362\u4e0d\u540c\u7684\u683c\u5f0f\u3002\" \u4e8b\u4ef6\u7684\u521b\u5efa\u662f SDK \u4e2d\u6700\u5e38\u89c1\u7684\u7528\u6cd5\u3002 \u4e8b\u4ef6\u8f6c\u6362\u53ef\u4ee5\u901a\u8fc7\u5b58\u53d6\u6a21\u5f0f\u5b9e\u73b0\uff0c\u6bd4\u5982\u6dfb\u52a0 getter \u6216 setter \u65b9\u6cd5\u3002 \u4f46\u662f\u76f4\u63a5\u7684 key \u8bbf\u95ee\u6216\u8005\u662f named-key \u8bbf\u95ee\u51fd\u6570\u4e5f\u662f\u53ef\u4ee5\u5229\u7528\u7684\u3002 \u65e0\u8bba\u662f\u90a3\u79cd\u60c5\u51b5\uff0c\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u6839\u636e\u53c2\u6570\u96c6\u6765\u9a8c\u8bc1\u6700\u7ec8\u4e8b\u4ef6\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5728\u53c2\u6570\u96c6\u4e2d\uff0cCloudEvents \u89c4\u8303\u7684\u7248\u672c\u662f\u81f3\u5173\u91cd\u8981\u7684\u3002","title":"\u6784\u5efa\u4e00\u4e2a\u4e8b\u4ef6"},{"location":"SDK/#_5","text":"\u6bcf\u4e2a SDK \u5e94\u8be5\u652f\u6301\u5728\u4f20\u8f93\u534f\u8bae\u548c\u7f16\u7801\u65b9\u9762\u5bf9\u4e00\u4e2a\u4e8b\u4ef6\u8fdb\u884c\u7f16\u7801\u548c\u89e3\u7801\u3002\u7ed3\u6784\u5316\u7684\u7f16\u7801\u662f\u6700\u5bb9\u6613\u652f\u6301\u7684\uff0c\u56e0\u4e3a\u5b83\u5c31\u662f json \u683c\u5f0f\u3002\u4f46\u662f Binary \u5bf9\u4e8e\u4e0d\u540c\u7684\u4f20\u8f93\u534f\u8bae\u800c\u8a00\u5c31\u53ef\u80fd\u5b8c\u5168\u4e0d\u540c\u4e86\u3002","title":"\u7f16\u7801/\u89e3\u7801\u4e00\u4e2a\u4e8b\u4ef6"},{"location":"SDK/#_6","text":"\u4e8b\u4ef6\u6570\u636e\u7684\u8bbf\u95ee\u5219\u6709\u5f88\u591a\u79cd\u60c5\u51b5\u9700\u8981\u8003\u8651\uff0c\u6bd4\u5982\u4e8b\u4ef6\u53ef\u80fd\u88ab\u7f16\u7801\u4e3a base64 \u683c\u5f0f\u7684\u7ed3\u6784\u5316\u6570\u636e\uff0c\u6216\u662f json \u8fd9\u79cd\u4f20\u8f93\u683c\u5f0f\u3002SDK \u5fc5\u987b\u8981\u63d0\u4f9b\u65b9\u6cd5\u5c06\u4e8b\u4ef6\u6570\u636e\u4ece\u8fd9\u4e9b\u683c\u5f0f\u4e2d\u8f6c\u6362\u4e3a\u672c\u5730\u7684\u683c\u5f0f\u3002","title":"\u6570\u636e"},{"location":"SDK/#_7","text":"SDK \u652f\u6301 CloudEvents \u7684\u6269\u5c55\u4e5f\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4f46\u662f\u63d0\u4f9b\u4e00\u4e2a\u80fd\u955c\u50cf\u6570\u636e\u8bbf\u95ee\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u3002","title":"\u6269\u5c55"},{"location":"SDK/#_8","text":"\u5bf9\u4e8e\u6bcf\u4e2a\u4e8b\u4ef6\u7684\u9a8c\u8bc1\u90fd\u5fc5\u987b\u662f\u53ef\u884c\u7684\u3002\u540c\u65f6\u9a8c\u8bc1\u529f\u80fd\u5fc5\u987b\u8981\u5c06 CloudEvents \u89c4\u8303\u7684\u7248\u672c\u8003\u8651\u5728\u5185\u3002\u5bf9\u4e8e SDK \u7684\u6240\u6709\u8981\u6c42\u90fd\u8981\u6839\u636e\u4e0d\u540c\u7248\u672c\u7684\u89c4\u8303\u4e00\u4e00\u5b9e\u73b0\u3002","title":"\u9a8c\u8bc1"},{"location":"SDK/#_9","text":"\u6bcf\u4e2a SDK \u5fc5\u987b\u63d0\u4f9b\u4e0d\u540c\u7684\u4f8b\u5b50\uff0c\u6700\u5c11\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u57fa\u4e8e HTTP \u4f20\u8f93\u5e76\u5b9e\u73b0\u4ee5\u4e0b\u529f\u80fd\u7684\u4f8b\u5b50\uff1a \u6784\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u7f16\u7801\u5e76\u53d1\u9001\u4e00\u4e2a\u6784\u5efa\u597d\u7684\u4e8b\u4ef6\u3002 \u63a5\u6536\u5e76\u89e3\u7801\u4e00\u4e2a\u4e8b\u4ef6\u3002","title":"\u6587\u6863"},{"location":"SDK/sdk-javascript/","text":"JavaScript SDK for CloudEvents \u00b6 https://cloudevents.github.io/sdk-javascript/ The CloudEvents SDK for JavaScript. Features \u00b6 Represent CloudEvents in memory Serialize and deserialize CloudEvents in different event formats . Send and recieve CloudEvents with via different protocol bindings . Note: Supports CloudEvent version 1.0 Installation \u00b6 The CloudEvents SDK requires a current LTS version of Node.js. At the moment those are Node.js 12.x, Node.js 14.x and Node.js 16.x. To install in your Node.js project: npm install cloudevents Receiving and Emitting Events \u00b6 Receiving Events \u00b6 You can choose any popular web framework for port binding. A CloudEvent object can be created by simply providing the HTTP protocol binding the incoming headers and request body. const app = require ( \"express\" )(); const { HTTP } = require ( \"cloudevents\" ); app . post ( \"/\" , ( req , res ) => { // body and headers come from an incoming HTTP request, e.g. express.js const receivedEvent = HTTP . toEvent ({ headers : req . headers , body : req . body }); console . log ( receivedEvent ); }); Emitting Events \u00b6 The easiest way to send events is to use the built-in HTTP emitter. const { httpTransport , emitterFor , CloudEvent } = require ( \"cloudevents\" ); // Create an emitter to send events to a reciever const emit = emitterFor ( httpTransport ( \"https://my.receiver.com/endpoint\" )); // Create a new CloudEvent const ce = new CloudEvent ({ type , source , data }); // Send it to the endpoint - encoded as HTTP binary by default emit ( ce ); If you prefer to use another transport mechanism for sending events over HTTP, you can use the HTTP binding to create a Message which has properties for headers and body , allowing greater flexibility and customization. For example, the axios module is used here to send a CloudEvent. const axios = require ( \"axios\" ). default ; const { HTTP , CloudEvent } = require ( \"cloudevents\" ); const ce = new CloudEvent ({ type , source , data }); const message = HTTP . binary ( ce ); // Or HTTP.structured(ce) axios ({ method : \"post\" , url : \"...\" , data : message . body , headers : message . headers , }); You may also use the emitterFor() function as a convenience. const axios = require ( \"axios\" ). default ; const { emitterFor , Mode , CloudEvent } = require ( \"cloudevents\" ); function sendWithAxios ( message ) { // Do what you need with the message headers // and body in this function, then send the // event axios ({ method : \"post\" , url : \"...\" , data : message . body , headers : message . headers , }); } const emit = emitterFor ( sendWithAxios , { mode : Mode . BINARY }); emit ( new CloudEvent ({ type , source , data })); You may also use the Emitter singleton to send your CloudEvents . const { emitterFor , httpTransport , Mode , CloudEvent , Emitter } = require ( \"cloudevents\" ); // Create a CloudEvent emitter function to send events to our receiver const emit = emitterFor ( httpTransport ( \"https://example.com/receiver\" )); // Use the emit() function to send a CloudEvent to its endpoint when a \"cloudevent\" event is emitted // (see: https://nodejs.org/api/events.html#class-eventemitter) Emitter . on ( \"cloudevent\" , emit ); ... // In any part of the code, calling `emit()` on a `CloudEvent` instance will send the event new CloudEvent ({ type , source , data }). emit (); // You can also have several listeners to send the event to several endpoints CloudEvent Objects \u00b6 All created CloudEvent objects are read-only. If you need to update a property or add a new extension to an existing cloud event object, you can use the cloneWith method. This will return a new CloudEvent with any update or new properties. For example: const { CloudEvent , } = require ( \"cloudevents\" ); // Create a new CloudEvent const ce = new CloudEvent ({...}); // Add a new extension to an existing CloudEvent const ce2 = ce . cloneWith ({ extension : \"Value\" }); You can create a CloudEvent object in many ways, for example, in TypeScript: import { CloudEvent , CloudEventV1 , CloudEventV1Attributes } from \"cloudevents\" ; const ce : CloudEventV1 < string > = { specversion : \"1.0\" , source : \"/some/source\" , type : \"example\" , id : \"1234\" , }; const event = new CloudEvent ( ce ); const ce2 : CloudEventV1Attributes < string > = { specversion : \"1.0\" , source : \"/some/source\" , type : \"example\" , }; const event2 = new CloudEvent ( ce2 ); const event3 = new CloudEvent ({ source : \"/some/source\" , type : \"example\" , }); Example Applications \u00b6 There are a few trivial example applications in the examples folder . There you will find Express.js, TypeScript and Websocket examples. API Transition Guide \u00b6 Guide Link Supported specification features \u00b6 Core Specification v0.3 v1.0 CloudEvents Core Event Formats v0.3 v1.0 AVRO Event Format JSON Event Format Protocol Bindings v0.3 v1.0 AMQP Protocol Binding HTTP Protocol Binding Kafka Protocol Binding MQTT Protocol Binding NATS Protocol Binding Content Modes v0.3 v1.0 HTTP Binary HTTP Structured HTTP Batch Kafka Binary Kafka Structured Kafka Batch MQTT Binary MQTT Structured Community \u00b6 There are bi-weekly calls immediately following the Serverless/CloudEvents call at 9am PT (US Pacific). Which means they will typically start at 10am PT, but if the other call ends early then the SDK call will start early as well. See the CloudEvents meeting minutes to determine which week will have the call. Slack: #cloudeventssdk channel under CNCF's Slack workspace . Email: https://lists.cncf.io/g/cncf-cloudevents-sdk Maintainers \u00b6 Currently active maintainers who may be found in the CNCF Slack. Lance Ball (@lance) Lucas Holmquist (@lholmquist) Contributing \u00b6 We love contributions from the community! Please check the Contributor's Guide for information on how to get involved. Each SDK may have its own unique processes, tooling and guidelines, common governance related material can be found in the CloudEvents community directory. In particular, in there you will find information concerning how SDK projects are managed , guidelines for how PR reviews and approval, and our Code of Conduct information.","title":"JavaScript SDK"},{"location":"SDK/sdk-javascript/#javascript-sdk-for-cloudevents","text":"https://cloudevents.github.io/sdk-javascript/ The CloudEvents SDK for JavaScript.","title":"JavaScript SDK for CloudEvents"},{"location":"SDK/sdk-javascript/#features","text":"Represent CloudEvents in memory Serialize and deserialize CloudEvents in different event formats . Send and recieve CloudEvents with via different protocol bindings . Note: Supports CloudEvent version 1.0","title":"Features"},{"location":"SDK/sdk-javascript/#installation","text":"The CloudEvents SDK requires a current LTS version of Node.js. At the moment those are Node.js 12.x, Node.js 14.x and Node.js 16.x. To install in your Node.js project: npm install cloudevents","title":"Installation"},{"location":"SDK/sdk-javascript/#receiving-and-emitting-events","text":"","title":"Receiving and Emitting Events"},{"location":"SDK/sdk-javascript/#receiving-events","text":"You can choose any popular web framework for port binding. A CloudEvent object can be created by simply providing the HTTP protocol binding the incoming headers and request body. const app = require ( \"express\" )(); const { HTTP } = require ( \"cloudevents\" ); app . post ( \"/\" , ( req , res ) => { // body and headers come from an incoming HTTP request, e.g. express.js const receivedEvent = HTTP . toEvent ({ headers : req . headers , body : req . body }); console . log ( receivedEvent ); });","title":"Receiving Events"},{"location":"SDK/sdk-javascript/#emitting-events","text":"The easiest way to send events is to use the built-in HTTP emitter. const { httpTransport , emitterFor , CloudEvent } = require ( \"cloudevents\" ); // Create an emitter to send events to a reciever const emit = emitterFor ( httpTransport ( \"https://my.receiver.com/endpoint\" )); // Create a new CloudEvent const ce = new CloudEvent ({ type , source , data }); // Send it to the endpoint - encoded as HTTP binary by default emit ( ce ); If you prefer to use another transport mechanism for sending events over HTTP, you can use the HTTP binding to create a Message which has properties for headers and body , allowing greater flexibility and customization. For example, the axios module is used here to send a CloudEvent. const axios = require ( \"axios\" ). default ; const { HTTP , CloudEvent } = require ( \"cloudevents\" ); const ce = new CloudEvent ({ type , source , data }); const message = HTTP . binary ( ce ); // Or HTTP.structured(ce) axios ({ method : \"post\" , url : \"...\" , data : message . body , headers : message . headers , }); You may also use the emitterFor() function as a convenience. const axios = require ( \"axios\" ). default ; const { emitterFor , Mode , CloudEvent } = require ( \"cloudevents\" ); function sendWithAxios ( message ) { // Do what you need with the message headers // and body in this function, then send the // event axios ({ method : \"post\" , url : \"...\" , data : message . body , headers : message . headers , }); } const emit = emitterFor ( sendWithAxios , { mode : Mode . BINARY }); emit ( new CloudEvent ({ type , source , data })); You may also use the Emitter singleton to send your CloudEvents . const { emitterFor , httpTransport , Mode , CloudEvent , Emitter } = require ( \"cloudevents\" ); // Create a CloudEvent emitter function to send events to our receiver const emit = emitterFor ( httpTransport ( \"https://example.com/receiver\" )); // Use the emit() function to send a CloudEvent to its endpoint when a \"cloudevent\" event is emitted // (see: https://nodejs.org/api/events.html#class-eventemitter) Emitter . on ( \"cloudevent\" , emit ); ... // In any part of the code, calling `emit()` on a `CloudEvent` instance will send the event new CloudEvent ({ type , source , data }). emit (); // You can also have several listeners to send the event to several endpoints","title":"Emitting Events"},{"location":"SDK/sdk-javascript/#cloudevent-objects","text":"All created CloudEvent objects are read-only. If you need to update a property or add a new extension to an existing cloud event object, you can use the cloneWith method. This will return a new CloudEvent with any update or new properties. For example: const { CloudEvent , } = require ( \"cloudevents\" ); // Create a new CloudEvent const ce = new CloudEvent ({...}); // Add a new extension to an existing CloudEvent const ce2 = ce . cloneWith ({ extension : \"Value\" }); You can create a CloudEvent object in many ways, for example, in TypeScript: import { CloudEvent , CloudEventV1 , CloudEventV1Attributes } from \"cloudevents\" ; const ce : CloudEventV1 < string > = { specversion : \"1.0\" , source : \"/some/source\" , type : \"example\" , id : \"1234\" , }; const event = new CloudEvent ( ce ); const ce2 : CloudEventV1Attributes < string > = { specversion : \"1.0\" , source : \"/some/source\" , type : \"example\" , }; const event2 = new CloudEvent ( ce2 ); const event3 = new CloudEvent ({ source : \"/some/source\" , type : \"example\" , });","title":"CloudEvent Objects"},{"location":"SDK/sdk-javascript/#example-applications","text":"There are a few trivial example applications in the examples folder . There you will find Express.js, TypeScript and Websocket examples.","title":"Example Applications"},{"location":"SDK/sdk-javascript/#api-transition-guide","text":"Guide Link","title":"API Transition Guide"},{"location":"SDK/sdk-javascript/#supported-specification-features","text":"Core Specification v0.3 v1.0 CloudEvents Core Event Formats v0.3 v1.0 AVRO Event Format JSON Event Format Protocol Bindings v0.3 v1.0 AMQP Protocol Binding HTTP Protocol Binding Kafka Protocol Binding MQTT Protocol Binding NATS Protocol Binding Content Modes v0.3 v1.0 HTTP Binary HTTP Structured HTTP Batch Kafka Binary Kafka Structured Kafka Batch MQTT Binary MQTT Structured","title":"Supported specification features"},{"location":"SDK/sdk-javascript/#community","text":"There are bi-weekly calls immediately following the Serverless/CloudEvents call at 9am PT (US Pacific). Which means they will typically start at 10am PT, but if the other call ends early then the SDK call will start early as well. See the CloudEvents meeting minutes to determine which week will have the call. Slack: #cloudeventssdk channel under CNCF's Slack workspace . Email: https://lists.cncf.io/g/cncf-cloudevents-sdk","title":"Community"},{"location":"SDK/sdk-javascript/#maintainers","text":"Currently active maintainers who may be found in the CNCF Slack. Lance Ball (@lance) Lucas Holmquist (@lholmquist)","title":"Maintainers"},{"location":"SDK/sdk-javascript/#contributing","text":"We love contributions from the community! Please check the Contributor's Guide for information on how to get involved. Each SDK may have its own unique processes, tooling and guidelines, common governance related material can be found in the CloudEvents community directory. In particular, in there you will find information concerning how SDK projects are managed , guidelines for how PR reviews and approval, and our Code of Conduct information.","title":"Contributing"},{"location":"adapters/","text":"CloudEvents \u9002\u914d\u5668 \u00b6 \u7531\u4e8e\u5e76\u4e0d\u662f\u6240\u6709\u4e8b\u4ef6\u751f\u4ea7\u8005\u5728\u672c\u5730\u90fd\u4ee5 CloudEvents \u7684\u683c\u5f0f\u751f\u4ea7\u4e8b\u4ef6\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e9b\"\u9002\u914d\u5668\"\u5c06\u8fd9\u4e9b\u975e CloudEvents \u683c\u5f0f\u7684\u4e8b\u4ef6\u8f6c\u6362\u4e3a CloudEvents\u3002\u8981\u5b8c\u6210\u8fd9\u4e2a\u8f6c\u6362\uff0c\u901a\u5e38\u9700\u8981\u5c06\u975e CloudEvents \u683c\u5f0f\u4e8b\u4ef6\u7684\u5143\u6570\u636e\u62bd\u53d6\u51fa\u6765\uff0c\u7528\u4f5c CloudEvents \u7684\u5c5e\u6027\u3002\u4e3a\u4e86\u80fd\u66f4\u597d\u5730\u63d0\u5347\u9002\u914d\u5668\u95f4\u4e0d\u540c\u5b9e\u73b0\u7684\u4e92\u64cd\u4f5c\u6027\uff0c\u4ee5\u4e0b\u6587\u4ef6\u5217\u51fa\u4e86\u63a8\u8350\u4f7f\u7528\u7684\u7b97\u6cd5\uff1a AWS S3 GitHub GitLab","title":"\u9002\u914d\u5668"},{"location":"adapters/#cloudevents","text":"\u7531\u4e8e\u5e76\u4e0d\u662f\u6240\u6709\u4e8b\u4ef6\u751f\u4ea7\u8005\u5728\u672c\u5730\u90fd\u4ee5 CloudEvents \u7684\u683c\u5f0f\u751f\u4ea7\u4e8b\u4ef6\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u4e9b\"\u9002\u914d\u5668\"\u5c06\u8fd9\u4e9b\u975e CloudEvents \u683c\u5f0f\u7684\u4e8b\u4ef6\u8f6c\u6362\u4e3a CloudEvents\u3002\u8981\u5b8c\u6210\u8fd9\u4e2a\u8f6c\u6362\uff0c\u901a\u5e38\u9700\u8981\u5c06\u975e CloudEvents \u683c\u5f0f\u4e8b\u4ef6\u7684\u5143\u6570\u636e\u62bd\u53d6\u51fa\u6765\uff0c\u7528\u4f5c CloudEvents \u7684\u5c5e\u6027\u3002\u4e3a\u4e86\u80fd\u66f4\u597d\u5730\u63d0\u5347\u9002\u914d\u5668\u95f4\u4e0d\u540c\u5b9e\u73b0\u7684\u4e92\u64cd\u4f5c\u6027\uff0c\u4ee5\u4e0b\u6587\u4ef6\u5217\u51fa\u4e86\u63a8\u8350\u4f7f\u7528\u7684\u7b97\u6cd5\uff1a AWS S3 GitHub GitLab","title":"CloudEvents \u9002\u914d\u5668"},{"location":"adapters/aws-s3/","text":"AWS Simple Storage Service CloudEvents Adapter \u00b6 \u672c\u6587\u6863\u4ecb\u7ecd\u5982\u4f55\u5c06 AWS S3 events \u4e8b\u4ef6\u8f6c\u6362\u4e3a CloudEvents\u3002 AWS S3 \u4e8b\u4ef6\u6587\u6863\uff1a https://docs.aws.amazon.com/AmazonS3/latest/dev/notification-content-structure.html \u6240\u6709 S3 \u4e8b\u4ef6\u90fd\u901a\u8fc7\u4e0b\u8868\u4e2d\u63cf\u8ff0\u7684\u6a21\u5f0f\u8f6c\u6362\u4e3a CloudEvents\uff1a CloudEvents \u5c5e\u6027 \u503c id \"responseElements.x-amz-request-id\" + . + \"responseElements.x-amz-id-2\" source \"eventSource\" value + . + \"awsRegion\" value + . + \"s3.buckets.name\" value specversion 1.0 type com.amazonaws.s3. + \"eventName\" value datacontenttype S3 event type (e.g. application/json ) dataschema Omit subject \"s3.object.key\" value time \"eventTime\" value data S3 event \u6ce8\u91ca\uff1a - \u5f53\u4e8b\u4ef6\u6765\u81ea S3 \u65f6\uff0c\u201ceventSource\u201d\u5c06\u59cb\u7ec8\u4e3a\u56fa\u5b9a\u503c ( aws:s3 )\uff0c\u4f46\u5982\u679c\u5176\u4ed6\u4e91\u5382\u5546\u652f\u6301 S3 \u4e8b\u4ef6\u683c\u5f0f\uff0c\u5219\u8be5\u503c\u53ef\u80fd\u4e0d\u4f1a\u662f aws:s3 - \u800c\u662f\u7279\u5b9a\u4e8e\u4ed6\u4eec\u7684\u73af\u5883\u7684\u4e1c\u897f\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u6d88\u8d39\u8005\u5c06\u80fd\u591f\u901a\u8fc7\u68c0\u6d4b type \u5c5e\u6027\u4e0a\u7684 com.amazonaws.s3 \u524d\u7f00\u77e5\u9053\u4e8b\u4ef6\u662f\u5426\u662f S3 \u7c7b\u578b\u7684\u4e8b\u4ef6\uff08\u65e0\u8bba\u5b83\u6765\u81ea S3 \u8fd8\u662f S3 \u517c\u5bb9\u7684\u63d0\u4f9b\u8005\uff09\u3002","title":"aws-s3"},{"location":"adapters/aws-s3/#aws-simple-storage-service-cloudevents-adapter","text":"\u672c\u6587\u6863\u4ecb\u7ecd\u5982\u4f55\u5c06 AWS S3 events \u4e8b\u4ef6\u8f6c\u6362\u4e3a CloudEvents\u3002 AWS S3 \u4e8b\u4ef6\u6587\u6863\uff1a https://docs.aws.amazon.com/AmazonS3/latest/dev/notification-content-structure.html \u6240\u6709 S3 \u4e8b\u4ef6\u90fd\u901a\u8fc7\u4e0b\u8868\u4e2d\u63cf\u8ff0\u7684\u6a21\u5f0f\u8f6c\u6362\u4e3a CloudEvents\uff1a CloudEvents \u5c5e\u6027 \u503c id \"responseElements.x-amz-request-id\" + . + \"responseElements.x-amz-id-2\" source \"eventSource\" value + . + \"awsRegion\" value + . + \"s3.buckets.name\" value specversion 1.0 type com.amazonaws.s3. + \"eventName\" value datacontenttype S3 event type (e.g. application/json ) dataschema Omit subject \"s3.object.key\" value time \"eventTime\" value data S3 event \u6ce8\u91ca\uff1a - \u5f53\u4e8b\u4ef6\u6765\u81ea S3 \u65f6\uff0c\u201ceventSource\u201d\u5c06\u59cb\u7ec8\u4e3a\u56fa\u5b9a\u503c ( aws:s3 )\uff0c\u4f46\u5982\u679c\u5176\u4ed6\u4e91\u5382\u5546\u652f\u6301 S3 \u4e8b\u4ef6\u683c\u5f0f\uff0c\u5219\u8be5\u503c\u53ef\u80fd\u4e0d\u4f1a\u662f aws:s3 - \u800c\u662f\u7279\u5b9a\u4e8e\u4ed6\u4eec\u7684\u73af\u5883\u7684\u4e1c\u897f\u3002 \u56e0\u6b64\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u7684\u6d88\u8d39\u8005\u5c06\u80fd\u591f\u901a\u8fc7\u68c0\u6d4b type \u5c5e\u6027\u4e0a\u7684 com.amazonaws.s3 \u524d\u7f00\u77e5\u9053\u4e8b\u4ef6\u662f\u5426\u662f S3 \u7c7b\u578b\u7684\u4e8b\u4ef6\uff08\u65e0\u8bba\u5b83\u6765\u81ea S3 \u8fd8\u662f S3 \u517c\u5bb9\u7684\u63d0\u4f9b\u8005\uff09\u3002","title":"AWS Simple Storage Service CloudEvents Adapter"},{"location":"adapters/aws-sns/","text":"Amazon Simple Notification Service CloudEvents Adapter \u00b6 This document describes how to convert AWS SNS messages into CloudEvents. Amazon SNS MAY send a subscription confirmation, notification, or unsubscribe confirmation message to your HTTP/HTTPS endpoints. Each section below describes how to determine the CloudEvents attributes based on the specified type of SNS messages. Subscription Confirmation \u00b6 CloudEvents Attribute Value id \"x-amz-sns-message-id\" value source \"x-amz-sns-topic-arn\" value specversion 1.0 type com.amazonaws.sns. + \"x-amz-sns-message-type\" value datacontenttype application/json dataschema Omit subject Omit time \"Timestamp\" value data HTTP payload Notification \u00b6 CloudEvents Attribute Value id \"x-amz-sns-message-id\" value source \"x-amz-sns-subscription-arn\" value specversion 1.0 type com.amazonaws.sns. + \"x-amz-sns-message-type\" value datacontenttype application/json dataschema Omit subject \"Subject\" value (if present) time \"Timestamp\" value data HTTP payload Unsubscribe Confirmation \u00b6 CloudEvents Attribute Value id \"x-amz-sns-message-id\" value source \"x-amz-sns-subscription-arn\" value specversion 1.0 type com.amazonaws.sns. + \"x-amz-sns-message-type\" value datacontenttype application/json dataschema Omit subject Omit time \"Timestamp\" value data HTTP payload","title":"aws-sns"},{"location":"adapters/aws-sns/#amazon-simple-notification-service-cloudevents-adapter","text":"This document describes how to convert AWS SNS messages into CloudEvents. Amazon SNS MAY send a subscription confirmation, notification, or unsubscribe confirmation message to your HTTP/HTTPS endpoints. Each section below describes how to determine the CloudEvents attributes based on the specified type of SNS messages.","title":"Amazon Simple Notification Service CloudEvents Adapter"},{"location":"adapters/aws-sns/#subscription-confirmation","text":"CloudEvents Attribute Value id \"x-amz-sns-message-id\" value source \"x-amz-sns-topic-arn\" value specversion 1.0 type com.amazonaws.sns. + \"x-amz-sns-message-type\" value datacontenttype application/json dataschema Omit subject Omit time \"Timestamp\" value data HTTP payload","title":"Subscription Confirmation"},{"location":"adapters/aws-sns/#notification","text":"CloudEvents Attribute Value id \"x-amz-sns-message-id\" value source \"x-amz-sns-subscription-arn\" value specversion 1.0 type com.amazonaws.sns. + \"x-amz-sns-message-type\" value datacontenttype application/json dataschema Omit subject \"Subject\" value (if present) time \"Timestamp\" value data HTTP payload","title":"Notification"},{"location":"adapters/aws-sns/#unsubscribe-confirmation","text":"CloudEvents Attribute Value id \"x-amz-sns-message-id\" value source \"x-amz-sns-subscription-arn\" value specversion 1.0 type com.amazonaws.sns. + \"x-amz-sns-message-type\" value datacontenttype application/json dataschema Omit subject Omit time \"Timestamp\" value data HTTP payload","title":"Unsubscribe Confirmation"},{"location":"adapters/couchdb/","text":"CouchDB CloudEvents Adapter \u00b6 This document describes how to convert: CouchDB Document events and CouchDB Database events into CloudEvents. Each section below describes how to determine the CloudEvents attributes based on the event type. /db/_changes \u00b6 Update \u00b6 CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL / db specversion 1.0 type org.apache.couchdb.document.updated datacontenttype application/json subject The document identifier ( id ) time Current time data changes value (array of revs ) Delete \u00b6 CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL / db specversion 1.0 type org.apache.couchdb.document.deleted datacontenttype application/json subject The document identifier ( id ) time Current time data changes value (array of revs ) /_db_updates \u00b6 Create \u00b6 CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL specversion 1.0 type org.apache.couchdb.database.created subject The database name ( db_name ) time Current time Update \u00b6 CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL specversion 1.0 type org.apache.couchdb.database.updated subject The database name ( db_name ) time Current time Delete \u00b6 CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL specversion 1.0 type org.apache.couchdb.database.deleted subject The database name ( db_name ) time Current time","title":"couchdb"},{"location":"adapters/couchdb/#couchdb-cloudevents-adapter","text":"This document describes how to convert: CouchDB Document events and CouchDB Database events into CloudEvents. Each section below describes how to determine the CloudEvents attributes based on the event type.","title":"CouchDB CloudEvents Adapter"},{"location":"adapters/couchdb/#db_changes","text":"","title":"/db/_changes"},{"location":"adapters/couchdb/#update","text":"CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL / db specversion 1.0 type org.apache.couchdb.document.updated datacontenttype application/json subject The document identifier ( id ) time Current time data changes value (array of revs )","title":"Update"},{"location":"adapters/couchdb/#delete","text":"CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL / db specversion 1.0 type org.apache.couchdb.document.deleted datacontenttype application/json subject The document identifier ( id ) time Current time data changes value (array of revs )","title":"Delete"},{"location":"adapters/couchdb/#_db_updates","text":"","title":"/_db_updates"},{"location":"adapters/couchdb/#create","text":"CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL specversion 1.0 type org.apache.couchdb.database.created subject The database name ( db_name ) time Current time","title":"Create"},{"location":"adapters/couchdb/#update_1","text":"CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL specversion 1.0 type org.apache.couchdb.database.updated subject The database name ( db_name ) time Current time","title":"Update"},{"location":"adapters/couchdb/#delete_1","text":"CloudEvents Attribute Value id The event sequence identifier ( seq ) source The server URL specversion 1.0 type org.apache.couchdb.database.deleted subject The database name ( db_name ) time Current time","title":"Delete"},{"location":"adapters/github/","text":"GitHub CloudEvents Adapter \u00b6 This document describes how to convert GitHub webhook events into a CloudEvents. GitHub webhook event documentation: https://developer.github.com/v3/activity/events/types/ Each section below describes how to determine the CloudEvents attributes based on the specified event. CheckRunEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.check_run. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"check_run.id\" value time \"check_run.completed_at\" value, unless \"null\", then \"check_run.started_at\" value data Content of HTTP request body CheckSuiteEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.check_suite. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"check_suite.id\" value time \"check_suite.updated_at\" value data Content of HTTP request body CommitCommentEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"comment.url\" value + / + \"comment.commit_id\" value specversion 1.0 type com.github.commit_comment. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"comment.id\" value time \"comment.updated_at\" value data Content of HTTP request body ContentReferenceEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.content_reference. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"content_reference.id\" value time Current time data Content of HTTP request body CreateEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.create. + \"ref_type\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"ref\" value time Current time data Content of HTTP request body DeleteEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.delete. + \"ref_type\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"ref\" value time Current time data Content of HTTP request body DeployKeyEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.deploy_key. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"key.id\" value time \"key.deleted_at\" value, unless null then \"key.created_at\" value data Content of HTTP request body DeploymentEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.deployment datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"deployment.id\" value # task? time \"deployment.updated_at\" value data Content of HTTP request body DeploymentStatusEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"deployment.url\" value specversion 1.0 type com.github.deployment_status. + \"deployment_status.state\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"deployment_status.url\" value time \"deployment_status.updated_at\" value data Content of HTTP request body ForkEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.fork datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"forkee.url\" value time \"forkee.created_at\" value data Content of HTTP request body GitHubAppAuthorizationEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"sender.url\" value specversion 1.0 type com.github.github_app_authorization datacontentencoding Omit datacontenttype application/json dataschema Omit subject Omit time Current time data Content of HTTP request body GollumEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.gollum. + \"pages.action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"pages.page_name\" value time Current time data Content of HTTP request body InstallationEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"installation.account.url\" value specversion 1.0 type com.github.installation. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"installation.id\" value time \"installation.updated_at\" value # not a timestamp?? data Content of HTTP request body InstallationRepositoryEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"installation.account.url\" value specversion 1.0 type com.github.installation_repository. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"installation.id\" value time \"installation.updated_at\" value # not a timestamp?? data Content of HTTP request body IssueCommentEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"issue.url\" value specversion 1.0 type com.github.issue_comment. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"comment.id\" value time \"comment.updated_at\" value data Content of HTTP request body IssuesEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.issue. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"issue.number\" value time \"issue.updated_at\" value data Content of HTTP request body LabelEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.label. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"label.name\" value time Current time data Content of HTTP request body MarketplacePurchaseEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"sender.url\" value without the /username portion specversion 1.0 type com.github.marketplace_purchase. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"marketplace_purchase.account.login\" value time \"effective_date\" value data Content of HTTP request body MemberEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.member. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"member.login\" value time Current time data Content of HTTP request body MembershipEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"team.url\" value specversion 1.0 type com.github.membership. + \"scope\" value + . + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"member.login\" value ### or id ? time Current time data Content of HTTP request body MetaEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.meta. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"hook_id\" value time \"hook.updated_at\" value data Content of HTTP request body MilestoneEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.milestone. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"milestone.number\" value time \"milestone.updated_at\" value data Content of HTTP request body OrganizationEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"organization.url\" value specversion 1.0 type com.github.organization. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"membership.user.login\" value when available time Current time data Content of HTTP request body OrgBlockEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"organization.url\" value specversion 1.0 type com.github.org_block. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"blocked_user.login\" value time Current time data Content of HTTP request body PageBuildEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.page_build datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"build.url\" value time \"pusher.updated_at\" value data Content of HTTP request body ProjectCardEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.project_card. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"project_card.id\" value time \"project_card.updated_at\" value data Content of HTTP request body ProjectColumnEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.project_column. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"project_column.id\" value time \"project_column.updated_at\" value data Content of HTTP request body ProjectEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.project. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"project.id\" value time \"project.updated_at\" value data Content of HTTP request body PublicEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.owner.url\" value specversion 1.0 type com.github.public datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"repository.name\" value time \"repository.updated_at\" value data Content of HTTP request body PullRequestEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.pull_request. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"number\" value time \"pull_request.updated_at\" value data Content of HTTP request body PullRequestReviewEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"pull_request.url\" value specversion 1.0 type com.github.pull_request_review. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"review.id\" value time \"review.submitted_at\" value data Content of HTTP request body PullRequestReviewCommentEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"pull_request.url\" value specversion 1.0 type com.github.pull_request_review_comment. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"comment.id\" value time \"pull_request.updated_at\" value data Content of HTTP request body PushEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.push datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"ref\" value time Current time # repository.updated_at ?? data Content of HTTP request body RegistryPackageEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.registry_package. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"registry_package.html_url\" value time \"registry_package.updated_at\" value data Content of HTTP request body ReleaseEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.release. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"release.id\" value time \"release.*_at\" value based on action data Content of HTTP request body RepositoryEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.owner.url\" value specversion 1.0 type com.github.repository. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"repository.name\" value time \"repository.updated_at\" value data Content of HTTP request body RepositoryImportEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.owner.url\" value specversion 1.0 type com.github.repository_import datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"repository.name\" value time \"repository.updated_at\" value data Content of HTTP request body RepositoryVulnerabilityAlertEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.repository_vulnerability_alert. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"alert.id\" value time Current time # repository.updated_id ? data Content of HTTP request body SecurityAdvisoryEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source github.com specversion 1.0 type com.github.security_advisory. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"security_advisory.ghsa_id\" value time \"security_advisory.updated_at\" value data Content of HTTP request body StarEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.star. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject Omit time \"starred_at\" value, if present otherwise Current time data Content of HTTP request body StatusEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.status. # + \"state\" value ? datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"sha\" value time \"updated_at\" value data Content of HTTP request body TeamEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.team. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"team.id\" value time \"updated_at\" value data Content of HTTP request body TeamAddEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.team_add. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"team.id\" value time Current time data Content of HTTP request body WatchEvent \u00b6 CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.watch. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject Omit time Current time data Content of HTTP request body","title":"github"},{"location":"adapters/github/#github-cloudevents-adapter","text":"This document describes how to convert GitHub webhook events into a CloudEvents. GitHub webhook event documentation: https://developer.github.com/v3/activity/events/types/ Each section below describes how to determine the CloudEvents attributes based on the specified event.","title":"GitHub CloudEvents Adapter"},{"location":"adapters/github/#checkrunevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.check_run. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"check_run.id\" value time \"check_run.completed_at\" value, unless \"null\", then \"check_run.started_at\" value data Content of HTTP request body","title":"CheckRunEvent"},{"location":"adapters/github/#checksuiteevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.check_suite. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"check_suite.id\" value time \"check_suite.updated_at\" value data Content of HTTP request body","title":"CheckSuiteEvent"},{"location":"adapters/github/#commitcommentevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"comment.url\" value + / + \"comment.commit_id\" value specversion 1.0 type com.github.commit_comment. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"comment.id\" value time \"comment.updated_at\" value data Content of HTTP request body","title":"CommitCommentEvent"},{"location":"adapters/github/#contentreferenceevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.content_reference. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"content_reference.id\" value time Current time data Content of HTTP request body","title":"ContentReferenceEvent"},{"location":"adapters/github/#createevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.create. + \"ref_type\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"ref\" value time Current time data Content of HTTP request body","title":"CreateEvent"},{"location":"adapters/github/#deleteevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.delete. + \"ref_type\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"ref\" value time Current time data Content of HTTP request body","title":"DeleteEvent"},{"location":"adapters/github/#deploykeyevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.deploy_key. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"key.id\" value time \"key.deleted_at\" value, unless null then \"key.created_at\" value data Content of HTTP request body","title":"DeployKeyEvent"},{"location":"adapters/github/#deploymentevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.deployment datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"deployment.id\" value # task? time \"deployment.updated_at\" value data Content of HTTP request body","title":"DeploymentEvent"},{"location":"adapters/github/#deploymentstatusevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"deployment.url\" value specversion 1.0 type com.github.deployment_status. + \"deployment_status.state\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"deployment_status.url\" value time \"deployment_status.updated_at\" value data Content of HTTP request body","title":"DeploymentStatusEvent"},{"location":"adapters/github/#forkevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.fork datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"forkee.url\" value time \"forkee.created_at\" value data Content of HTTP request body","title":"ForkEvent"},{"location":"adapters/github/#githubappauthorizationevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"sender.url\" value specversion 1.0 type com.github.github_app_authorization datacontentencoding Omit datacontenttype application/json dataschema Omit subject Omit time Current time data Content of HTTP request body","title":"GitHubAppAuthorizationEvent"},{"location":"adapters/github/#gollumevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.gollum. + \"pages.action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"pages.page_name\" value time Current time data Content of HTTP request body","title":"GollumEvent"},{"location":"adapters/github/#installationevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"installation.account.url\" value specversion 1.0 type com.github.installation. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"installation.id\" value time \"installation.updated_at\" value # not a timestamp?? data Content of HTTP request body","title":"InstallationEvent"},{"location":"adapters/github/#installationrepositoryevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"installation.account.url\" value specversion 1.0 type com.github.installation_repository. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"installation.id\" value time \"installation.updated_at\" value # not a timestamp?? data Content of HTTP request body","title":"InstallationRepositoryEvent"},{"location":"adapters/github/#issuecommentevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"issue.url\" value specversion 1.0 type com.github.issue_comment. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"comment.id\" value time \"comment.updated_at\" value data Content of HTTP request body","title":"IssueCommentEvent"},{"location":"adapters/github/#issuesevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.issue. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"issue.number\" value time \"issue.updated_at\" value data Content of HTTP request body","title":"IssuesEvent"},{"location":"adapters/github/#labelevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.label. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"label.name\" value time Current time data Content of HTTP request body","title":"LabelEvent"},{"location":"adapters/github/#marketplacepurchaseevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"sender.url\" value without the /username portion specversion 1.0 type com.github.marketplace_purchase. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"marketplace_purchase.account.login\" value time \"effective_date\" value data Content of HTTP request body","title":"MarketplacePurchaseEvent"},{"location":"adapters/github/#memberevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.member. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"member.login\" value time Current time data Content of HTTP request body","title":"MemberEvent"},{"location":"adapters/github/#membershipevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"team.url\" value specversion 1.0 type com.github.membership. + \"scope\" value + . + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"member.login\" value ### or id ? time Current time data Content of HTTP request body","title":"MembershipEvent"},{"location":"adapters/github/#metaevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.meta. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"hook_id\" value time \"hook.updated_at\" value data Content of HTTP request body","title":"MetaEvent"},{"location":"adapters/github/#milestoneevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.milestone. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"milestone.number\" value time \"milestone.updated_at\" value data Content of HTTP request body","title":"MilestoneEvent"},{"location":"adapters/github/#organizationevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"organization.url\" value specversion 1.0 type com.github.organization. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"membership.user.login\" value when available time Current time data Content of HTTP request body","title":"OrganizationEvent"},{"location":"adapters/github/#orgblockevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"organization.url\" value specversion 1.0 type com.github.org_block. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"blocked_user.login\" value time Current time data Content of HTTP request body","title":"OrgBlockEvent"},{"location":"adapters/github/#pagebuildevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.page_build datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"build.url\" value time \"pusher.updated_at\" value data Content of HTTP request body","title":"PageBuildEvent"},{"location":"adapters/github/#projectcardevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.project_card. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"project_card.id\" value time \"project_card.updated_at\" value data Content of HTTP request body","title":"ProjectCardEvent"},{"location":"adapters/github/#projectcolumnevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.project_column. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"project_column.id\" value time \"project_column.updated_at\" value data Content of HTTP request body","title":"ProjectColumnEvent"},{"location":"adapters/github/#projectevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.project. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"project.id\" value time \"project.updated_at\" value data Content of HTTP request body","title":"ProjectEvent"},{"location":"adapters/github/#publicevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.owner.url\" value specversion 1.0 type com.github.public datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"repository.name\" value time \"repository.updated_at\" value data Content of HTTP request body","title":"PublicEvent"},{"location":"adapters/github/#pullrequestevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.pull_request. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"number\" value time \"pull_request.updated_at\" value data Content of HTTP request body","title":"PullRequestEvent"},{"location":"adapters/github/#pullrequestreviewevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"pull_request.url\" value specversion 1.0 type com.github.pull_request_review. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"review.id\" value time \"review.submitted_at\" value data Content of HTTP request body","title":"PullRequestReviewEvent"},{"location":"adapters/github/#pullrequestreviewcommentevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"pull_request.url\" value specversion 1.0 type com.github.pull_request_review_comment. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"comment.id\" value time \"pull_request.updated_at\" value data Content of HTTP request body","title":"PullRequestReviewCommentEvent"},{"location":"adapters/github/#pushevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.push datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"ref\" value time Current time # repository.updated_at ?? data Content of HTTP request body","title":"PushEvent"},{"location":"adapters/github/#registrypackageevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.registry_package. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"registry_package.html_url\" value time \"registry_package.updated_at\" value data Content of HTTP request body","title":"RegistryPackageEvent"},{"location":"adapters/github/#releaseevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.release. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"release.id\" value time \"release.*_at\" value based on action data Content of HTTP request body","title":"ReleaseEvent"},{"location":"adapters/github/#repositoryevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.owner.url\" value specversion 1.0 type com.github.repository. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"repository.name\" value time \"repository.updated_at\" value data Content of HTTP request body","title":"RepositoryEvent"},{"location":"adapters/github/#repositoryimportevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.owner.url\" value specversion 1.0 type com.github.repository_import datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"repository.name\" value time \"repository.updated_at\" value data Content of HTTP request body","title":"RepositoryImportEvent"},{"location":"adapters/github/#repositoryvulnerabilityalertevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.repository_vulnerability_alert. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"alert.id\" value time Current time # repository.updated_id ? data Content of HTTP request body","title":"RepositoryVulnerabilityAlertEvent"},{"location":"adapters/github/#securityadvisoryevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source github.com specversion 1.0 type com.github.security_advisory. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"security_advisory.ghsa_id\" value time \"security_advisory.updated_at\" value data Content of HTTP request body","title":"SecurityAdvisoryEvent"},{"location":"adapters/github/#starevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.star. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject Omit time \"starred_at\" value, if present otherwise Current time data Content of HTTP request body","title":"StarEvent"},{"location":"adapters/github/#statusevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.status. # + \"state\" value ? datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"sha\" value time \"updated_at\" value data Content of HTTP request body","title":"StatusEvent"},{"location":"adapters/github/#teamevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.team. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"team.id\" value time \"updated_at\" value data Content of HTTP request body","title":"TeamEvent"},{"location":"adapters/github/#teamaddevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.team_add. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject \"team.id\" value time Current time data Content of HTTP request body","title":"TeamAddEvent"},{"location":"adapters/github/#watchevent","text":"CloudEvents Attribute Value id \"X-GitHub-Delivery\" HTTP header value source \"repository.url\" value specversion 1.0 type com.github.watch. + \"action\" value datacontentencoding Omit datacontenttype application/json dataschema Omit subject Omit time Current time data Content of HTTP request body","title":"WatchEvent"},{"location":"adapters/gitlab/","text":"GitLab CloudEvents Adapter \u00b6 This document describes how to convert GitLab webhook events into a CloudEvents. GitLab webhook event documentation: https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#events Each section below describes how to determine the CloudEvents attributes based on the specified event. Push Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.push datacontenttype application/json dataschema Omit subject \"checkout_sha\" value time Current time data Content of HTTP request body Tag Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.tag_push datacontenttype application/json dataschema Omit subject \"ref\" value time Current time data Content of HTTP request body Issue Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.issue. + \"object_attributes.state\" value datacontenttype application/json dataschema Omit subject \"object_attributes.iid\" value time Current time data Content of HTTP request body Comment on Commit Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"commit.url\" value specversion 1.0 type com.gitlab.note.commit datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at\" value data Content of HTTP request body Comment on Merge Request Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"object_attributes.url\" value, without the #note\\_... part specversion 1.0 type com.gitlab.note.merge_request datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at` value data Content of HTTP request body Comment on Issue Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"object_attributes.url\" value without the #note\\_... part specversion 1.0 type com.gitlab.note.issue datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at\" value data Content of HTTP request body Comment on Code Snippet Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"object_attributes.url\" value without the #note\\_... part specversion 1.0 type com.gitlab.note.snippet datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at\" value data Content of HTTP request body Merge Request Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.merge_request. + \"object_attributes.action\" value datacontenttype application/json dataschema Omit subject \"object_attributes.iid\" value time \"object_attributes.created_at\" value data Content of HTTP request body Wiki Page Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"project.web_url\" value specversion 1.0 type com.gitlab.wiki_page. + \"object_attributes.action\" value datacontenttype application/json dataschema Omit subject \"object_attributes.slug\" value time Current time data Content of HTTP request body Pipeline Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"project.web_url\" value specversion 1.0 type com.gitlab.pipeline. + \"object_attributes.status\" value datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time Current time data Content of HTTP request body Job Event \u00b6 CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.job. + \"job_status\" value datacontenttype application/json dataschema Omit subject \"job_id\" value time Current time data Content of HTTP request body","title":"gitlab"},{"location":"adapters/gitlab/#gitlab-cloudevents-adapter","text":"This document describes how to convert GitLab webhook events into a CloudEvents. GitLab webhook event documentation: https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#events Each section below describes how to determine the CloudEvents attributes based on the specified event.","title":"GitLab CloudEvents Adapter"},{"location":"adapters/gitlab/#push-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.push datacontenttype application/json dataschema Omit subject \"checkout_sha\" value time Current time data Content of HTTP request body","title":"Push Event"},{"location":"adapters/gitlab/#tag-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.tag_push datacontenttype application/json dataschema Omit subject \"ref\" value time Current time data Content of HTTP request body","title":"Tag Event"},{"location":"adapters/gitlab/#issue-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.issue. + \"object_attributes.state\" value datacontenttype application/json dataschema Omit subject \"object_attributes.iid\" value time Current time data Content of HTTP request body","title":"Issue Event"},{"location":"adapters/gitlab/#comment-on-commit-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"commit.url\" value specversion 1.0 type com.gitlab.note.commit datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at\" value data Content of HTTP request body","title":"Comment on Commit Event"},{"location":"adapters/gitlab/#comment-on-merge-request-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"object_attributes.url\" value, without the #note\\_... part specversion 1.0 type com.gitlab.note.merge_request datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at` value data Content of HTTP request body","title":"Comment on Merge Request Event"},{"location":"adapters/gitlab/#comment-on-issue-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"object_attributes.url\" value without the #note\\_... part specversion 1.0 type com.gitlab.note.issue datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at\" value data Content of HTTP request body","title":"Comment on Issue Event"},{"location":"adapters/gitlab/#comment-on-code-snippet-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"object_attributes.url\" value without the #note\\_... part specversion 1.0 type com.gitlab.note.snippet datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time \"object_attributes.created_at\" value data Content of HTTP request body","title":"Comment on Code Snippet Event"},{"location":"adapters/gitlab/#merge-request-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.merge_request. + \"object_attributes.action\" value datacontenttype application/json dataschema Omit subject \"object_attributes.iid\" value time \"object_attributes.created_at\" value data Content of HTTP request body","title":"Merge Request Event"},{"location":"adapters/gitlab/#wiki-page-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"project.web_url\" value specversion 1.0 type com.gitlab.wiki_page. + \"object_attributes.action\" value datacontenttype application/json dataschema Omit subject \"object_attributes.slug\" value time Current time data Content of HTTP request body","title":"Wiki Page Event"},{"location":"adapters/gitlab/#pipeline-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"project.web_url\" value specversion 1.0 type com.gitlab.pipeline. + \"object_attributes.status\" value datacontenttype application/json dataschema Omit subject \"object_attributes.id\" value time Current time data Content of HTTP request body","title":"Pipeline Event"},{"location":"adapters/gitlab/#job-event","text":"CloudEvents Attribute Value id Generate a new unique value, e.g. a UUID source \"repository.homepage\" value specversion 1.0 type com.gitlab.job. + \"job_status\" value datacontenttype application/json dataschema Omit subject \"job_id\" value time Current time data Content of HTTP request body","title":"Job Event"},{"location":"bindings/amqp-protocol-binding/","text":"AMQP Protocol Binding for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The AMQP Protocol Binding for CloudEvents defines how events are mapped to OASIS AMQP 1.0 ( OASIS ; ISO/IEC 19464:2014) messages. Table of Contents \u00b6 Introduction 1.1. Conformance 1.2. Relation to AMQP 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes AMQP Message Mapping 3.2. Binary Content Mode 3.1. Structured Content Mode References 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in AMQP messages. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2. Relation to AMQP \u00b6 This specification does not prescribe rules constraining transfer or settlement of event messages with AMQP; it solely defines how CloudEvents are expressed as AMQP 1.0 messages. AMQP-based messaging and eventing infrastructures often provide higher-level programming-level abstractions that do not expose all AMQP protocol elements, or map AMQP protocol elements or names to proprietary constructs. This specification uses AMQP terminology, and implementers can refer to the respective infrastructure's AMQP documentation to determine the mapping into a programming-level abstraction. This specification assumes use of the default AMQP message format . 1.3. Content Modes \u00b6 The specification defines two content modes for transferring events: structured and binary . Every compliant implementation SHOULD support both modes. In the structured content mode, event metadata attributes and event data are placed into the AMQP message's application data section using an event format as defined in the CloudEvents spec . In the binary content mode, the value of the event data is placed into the AMQP message's application data section as-is, with the datacontenttype attribute value declaring its media type mapped to the AMQP content-type message property; all other event attributes are mapped to the AMQP application-properties section. 1.4. Event Formats \u00b6 Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the JSON event format . 1.5. Security \u00b6 This specification does not introduce any new security features for AMQP, or mandate specific existing features to be used. 2. Use of CloudEvents Attributes \u00b6 This specification does not further define any of the CloudEvents event attributes. One event attribute, datacontenttype is handled specially in binary content mode and mapped onto the AMQP content-type message property. All other attributes are transferred as metadata without further interpretation. This mapping is intentionally robust against changes, including the addition and removal of event attributes, and also accommodates vendor extensions to the event metadata. Any mention of event attributes other than datacontenttype is exemplary. 3. AMQP Message Mapping \u00b6 The content mode is chosen by the sender of the event, which is either the requesting or the responding party. Protocol interaction patterns that might allow solicitation of events using a particular content mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two modes by inspecting the content-type message property field. If the value is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode, otherwise it defaults to binary mode. If a receiver detects the CloudEvents media type, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the content-type message property is not prefixed with the CloudEvents media type, being able to know when the message ought to be attempted to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents message properties when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as message properties then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent. 3.1. Binary Content Mode \u00b6 The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort. 3.1.1. AMQP content-type \u00b6 For the binary mode, the AMQP content-type property field value maps directly to the CloudEvents datacontenttype attribute. 3.1.2. Event Data Encoding \u00b6 Event data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as it is transposed into AMQP as defined in this specification, the assumption is that the event data is made available as a sequence of bytes. The byte sequence is used as the AMQP application-data section. Example: If the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the event data is made available as UTF-8 encoded JSON text for use in AMQP. 3.1.3. Metadata Headers \u00b6 All CloudEvents attributes with exception of datacontenttype MUST be individually mapped to and from the AMQP application-properties section. CloudEvents extensions that define their own attributes MAY define a secondary mapping to AMQP properties for those attributes, also in different message sections, especially if specific attributes or their names need to align with AMQP features or with other specifications that have explicit AMQP header bindings. However, they MUST also include the previously defined primary mapping. An extension specification that defines a secondary mapping rule for AMQP, and any revision of such a specification, MUST also define explicit mapping rules for all other protocol bindings that are part of the CloudEvents core at the time of the submission or revision. 3.1.3.1 AMQP Application Property Names \u00b6 CloudEvent attributes MUST be prefixed with either \"cloudEvents_\" or \"cloudEvents:\" for use in the application-properties section. The '_' separator character SHOULD be preferred in the interest of compatibility with JMS 2.0 clients and JMS message selectors where the ':' separator is not permitted for property identifiers (see section 3.8.1.1 of JMS2.0 ). Any single message MUST use the same separator for all CloudEvents attributes, but a single queue MAY contain messages which use different separators. CloudEvents AMQP consumers SHOULD understand the \"cloudEvents\" prefix with both the '_' and the ':' separators as permitted within the constraints of the client model. JMS 2.0 AMQP consumers MUST understand the '_' separator; they cannot understand the ':' separator as per the cited JMS constraints. Examples: * `time` maps to `cloudEvents_time` * `id` maps to `cloudEvents_id` * `specversion` maps to `cloudEvents_specversion` 3.1.3.2 AMQP Application Property Values \u00b6 The value for each AMQP application property is constructed from the respective attribute's AMQP type representation. The CloudEvents type system MUST be mapped to AMQP types as follows, with additional notes below. CloudEvents AMQP Boolean boolean Integer long String string Binary binary URI string URI-reference string Timestamp timestamp All attribute values in an AMQP binary message MUST either be represented using the native AMQP types above or the canonical string form. An implementation MUST be able to interpret both forms on an incoming AMQP message MAY further relax the requirements for incoming messages (for example accepting numeric types other than AMQP long), but MUST be strict for outgoing messages. SHOULD use the native AMQP form on outgoing AMQP messages when it is efficient to do so, but MAY forward values as canonical strings 3.1.4 Examples \u00b6 This example shows the binary mode mapping of an event into the bare message sections of AMQP: --------------- properties ------------------ to: myqueue content-type: application/json; charset=utf-8 ----------- application-properties ----------- cloudEvents:specversion: 1.0 cloudEvents:type: com.example.someevent cloudEvents:time: 2018-04-05T03:56:24Z cloudEvents:id: 1234-1234-1234 cloudEvents:source: /mycontext/subcontext .... further attributes ... ------------- application-data --------------- { ... application data ... } ---------------------------------------------- 3.2. Structured Content Mode \u00b6 The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols. 3.2.1. AMQP Content-Type \u00b6 The AMQP content-type property field is set to the media type of an event format . Example for the JSON format : content-type: application/cloudevents+json; charset=UTF-8 3.2.2. Event Data Encoding \u00b6 The chosen event format defines how all attributes and data are represented. The event metadata and data is then rendered in accordance with the event format specification and the resulting data becomes the AMQP application data section. 3.2.3. Metadata Headers \u00b6 Implementations MAY include the same AMQP application-properties as defined for the binary mode . 3.2.4 Examples \u00b6 This example shows a JSON event format encoded event: --------------- properties ------------------------------ to: myqueue content-type: application/cloudevents+json; charset=utf-8 ----------- application-properties ---------------------- ------------- application-data -------------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } --------------------------------------------------------- 4. References \u00b6 RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format OASIS-AMQP-1.0 OASIS Advanced Message Queuing Protocol (AMQP) Version 1.0 JMS20 JSR-343 Java Message Service 2.0","title":"AMQP"},{"location":"bindings/amqp-protocol-binding/#amqp-protocol-binding-for-cloudevents-version-103-wip","text":"","title":"AMQP Protocol Binding for CloudEvents - Version 1.0.3-wip"},{"location":"bindings/amqp-protocol-binding/#abstract","text":"The AMQP Protocol Binding for CloudEvents defines how events are mapped to OASIS AMQP 1.0 ( OASIS ; ISO/IEC 19464:2014) messages.","title":"Abstract"},{"location":"bindings/amqp-protocol-binding/#table-of-contents","text":"Introduction 1.1. Conformance 1.2. Relation to AMQP 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes AMQP Message Mapping 3.2. Binary Content Mode 3.1. Structured Content Mode References","title":"Table of Contents"},{"location":"bindings/amqp-protocol-binding/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in AMQP messages.","title":"1. Introduction"},{"location":"bindings/amqp-protocol-binding/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"bindings/amqp-protocol-binding/#12-relation-to-amqp","text":"This specification does not prescribe rules constraining transfer or settlement of event messages with AMQP; it solely defines how CloudEvents are expressed as AMQP 1.0 messages. AMQP-based messaging and eventing infrastructures often provide higher-level programming-level abstractions that do not expose all AMQP protocol elements, or map AMQP protocol elements or names to proprietary constructs. This specification uses AMQP terminology, and implementers can refer to the respective infrastructure's AMQP documentation to determine the mapping into a programming-level abstraction. This specification assumes use of the default AMQP message format .","title":"1.2. Relation to AMQP"},{"location":"bindings/amqp-protocol-binding/#13-content-modes","text":"The specification defines two content modes for transferring events: structured and binary . Every compliant implementation SHOULD support both modes. In the structured content mode, event metadata attributes and event data are placed into the AMQP message's application data section using an event format as defined in the CloudEvents spec . In the binary content mode, the value of the event data is placed into the AMQP message's application data section as-is, with the datacontenttype attribute value declaring its media type mapped to the AMQP content-type message property; all other event attributes are mapped to the AMQP application-properties section.","title":"1.3. Content Modes"},{"location":"bindings/amqp-protocol-binding/#14-event-formats","text":"Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the JSON event format .","title":"1.4. Event Formats"},{"location":"bindings/amqp-protocol-binding/#15-security","text":"This specification does not introduce any new security features for AMQP, or mandate specific existing features to be used.","title":"1.5. Security"},{"location":"bindings/amqp-protocol-binding/#2-use-of-cloudevents-attributes","text":"This specification does not further define any of the CloudEvents event attributes. One event attribute, datacontenttype is handled specially in binary content mode and mapped onto the AMQP content-type message property. All other attributes are transferred as metadata without further interpretation. This mapping is intentionally robust against changes, including the addition and removal of event attributes, and also accommodates vendor extensions to the event metadata. Any mention of event attributes other than datacontenttype is exemplary.","title":"2. Use of CloudEvents Attributes"},{"location":"bindings/amqp-protocol-binding/#3-amqp-message-mapping","text":"The content mode is chosen by the sender of the event, which is either the requesting or the responding party. Protocol interaction patterns that might allow solicitation of events using a particular content mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two modes by inspecting the content-type message property field. If the value is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode, otherwise it defaults to binary mode. If a receiver detects the CloudEvents media type, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the content-type message property is not prefixed with the CloudEvents media type, being able to know when the message ought to be attempted to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents message properties when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as message properties then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent.","title":"3. AMQP Message Mapping"},{"location":"bindings/amqp-protocol-binding/#31-binary-content-mode","text":"The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort.","title":"3.1. Binary Content Mode"},{"location":"bindings/amqp-protocol-binding/#311-amqp-content-type","text":"For the binary mode, the AMQP content-type property field value maps directly to the CloudEvents datacontenttype attribute.","title":"3.1.1. AMQP content-type"},{"location":"bindings/amqp-protocol-binding/#312-event-data-encoding","text":"Event data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as it is transposed into AMQP as defined in this specification, the assumption is that the event data is made available as a sequence of bytes. The byte sequence is used as the AMQP application-data section. Example: If the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the event data is made available as UTF-8 encoded JSON text for use in AMQP.","title":"3.1.2. Event Data Encoding"},{"location":"bindings/amqp-protocol-binding/#313-metadata-headers","text":"All CloudEvents attributes with exception of datacontenttype MUST be individually mapped to and from the AMQP application-properties section. CloudEvents extensions that define their own attributes MAY define a secondary mapping to AMQP properties for those attributes, also in different message sections, especially if specific attributes or their names need to align with AMQP features or with other specifications that have explicit AMQP header bindings. However, they MUST also include the previously defined primary mapping. An extension specification that defines a secondary mapping rule for AMQP, and any revision of such a specification, MUST also define explicit mapping rules for all other protocol bindings that are part of the CloudEvents core at the time of the submission or revision.","title":"3.1.3. Metadata Headers"},{"location":"bindings/amqp-protocol-binding/#3131-amqp-application-property-names","text":"CloudEvent attributes MUST be prefixed with either \"cloudEvents_\" or \"cloudEvents:\" for use in the application-properties section. The '_' separator character SHOULD be preferred in the interest of compatibility with JMS 2.0 clients and JMS message selectors where the ':' separator is not permitted for property identifiers (see section 3.8.1.1 of JMS2.0 ). Any single message MUST use the same separator for all CloudEvents attributes, but a single queue MAY contain messages which use different separators. CloudEvents AMQP consumers SHOULD understand the \"cloudEvents\" prefix with both the '_' and the ':' separators as permitted within the constraints of the client model. JMS 2.0 AMQP consumers MUST understand the '_' separator; they cannot understand the ':' separator as per the cited JMS constraints. Examples: * `time` maps to `cloudEvents_time` * `id` maps to `cloudEvents_id` * `specversion` maps to `cloudEvents_specversion`","title":"3.1.3.1 AMQP Application Property Names"},{"location":"bindings/amqp-protocol-binding/#3132-amqp-application-property-values","text":"The value for each AMQP application property is constructed from the respective attribute's AMQP type representation. The CloudEvents type system MUST be mapped to AMQP types as follows, with additional notes below. CloudEvents AMQP Boolean boolean Integer long String string Binary binary URI string URI-reference string Timestamp timestamp All attribute values in an AMQP binary message MUST either be represented using the native AMQP types above or the canonical string form. An implementation MUST be able to interpret both forms on an incoming AMQP message MAY further relax the requirements for incoming messages (for example accepting numeric types other than AMQP long), but MUST be strict for outgoing messages. SHOULD use the native AMQP form on outgoing AMQP messages when it is efficient to do so, but MAY forward values as canonical strings","title":"3.1.3.2 AMQP Application Property Values"},{"location":"bindings/amqp-protocol-binding/#314-examples","text":"This example shows the binary mode mapping of an event into the bare message sections of AMQP: --------------- properties ------------------ to: myqueue content-type: application/json; charset=utf-8 ----------- application-properties ----------- cloudEvents:specversion: 1.0 cloudEvents:type: com.example.someevent cloudEvents:time: 2018-04-05T03:56:24Z cloudEvents:id: 1234-1234-1234 cloudEvents:source: /mycontext/subcontext .... further attributes ... ------------- application-data --------------- { ... application data ... } ----------------------------------------------","title":"3.1.4 Examples"},{"location":"bindings/amqp-protocol-binding/#32-structured-content-mode","text":"The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols.","title":"3.2. Structured Content Mode"},{"location":"bindings/amqp-protocol-binding/#321-amqp-content-type","text":"The AMQP content-type property field is set to the media type of an event format . Example for the JSON format : content-type: application/cloudevents+json; charset=UTF-8","title":"3.2.1. AMQP Content-Type"},{"location":"bindings/amqp-protocol-binding/#322-event-data-encoding","text":"The chosen event format defines how all attributes and data are represented. The event metadata and data is then rendered in accordance with the event format specification and the resulting data becomes the AMQP application data section.","title":"3.2.2. Event Data Encoding"},{"location":"bindings/amqp-protocol-binding/#323-metadata-headers","text":"Implementations MAY include the same AMQP application-properties as defined for the binary mode .","title":"3.2.3. Metadata Headers"},{"location":"bindings/amqp-protocol-binding/#324-examples","text":"This example shows a JSON event format encoded event: --------------- properties ------------------------------ to: myqueue content-type: application/cloudevents+json; charset=utf-8 ----------- application-properties ---------------------- ------------- application-data -------------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } ---------------------------------------------------------","title":"3.2.4 Examples"},{"location":"bindings/amqp-protocol-binding/#4-references","text":"RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format OASIS-AMQP-1.0 OASIS Advanced Message Queuing Protocol (AMQP) Version 1.0 JMS20 JSR-343 Java Message Service 2.0","title":"4. References"},{"location":"bindings/http-protocol-binding/","text":"HTTP Protocol Binding for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The HTTP Protocol Binding for CloudEvents defines how events are mapped to HTTP 1.1 request and response messages. Table of Contents \u00b6 Introduction 1.1. Conformance 1.2. Relation to HTTP 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes 2.1. datacontenttype Attribute 2.2. data HTTP Message Mapping 3.1. Binary Content Mode 3.2. Structured Content Mode 3.3. Batched Content Mode References 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in HTTP 1.1 requests and response messages. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2. Relation to HTTP \u00b6 This specification does not prescribe rules constraining the use or handling of specific HTTP methods , and it also does not constrain the HTTP target resource that is used for transferring or soliciting events. Events can be transferred with all standard or application-defined HTTP request methods that support payload body transfers. Events can be also be transferred in HTTP responses and with all HTTP status codes that permit payload body transfers. All examples herein that show HTTP methods, HTTP target URIs, and HTTP status codes are non-normative illustrations. This specification also applies equivalently to HTTP/2 ( RFC7540 ), which is compatible with HTTP 1.1 semantics. 1.3. Content Modes \u00b6 This specification defines three content modes for transferring events: binary , structured and batched . Every compliant implementation SHOULD support the structured and binary modes. In the binary content mode, the value of the event data is placed into the HTTP request, or response, body as-is, with the datacontenttype attribute value declaring its media type in the HTTP Content-Type header; all other event attributes are mapped to HTTP headers. In the structured content mode, event metadata attributes and event data are placed into the HTTP request or response body using an event format that supports structured-mode messages . In the batched content mode, event metadata attributes and event data of multiple events are batched into a single HTTP request or response body using an event format that supports batching structured-mode messages . 1.4. Event Formats \u00b6 Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the non-batching JSON event format , but MAY support any additional, including proprietary, formats. Event formats MAY additionally define how a batch of events is expressed. Those can be used with the batched content mode. 1.5. Security \u00b6 This specification does not introduce any new security features for HTTP, or mandate specific existing features to be used. This specification applies identically to HTTP over TLS . 2. Use of CloudEvents Attributes \u00b6 This specification does not further define any of the core CloudEvents event attributes. This mapping is intentionally robust against changes, including the addition and removal of event attributes, and also accommodates vendor extensions to the event metadata. 2.1. datacontenttype Attribute \u00b6 The datacontenttype attribute is assumed to contain a RFC2046 compliant media-type expression. 2.2. data \u00b6 data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into HTTP as defined in this specification, the assumption is that the data value is made available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text to HTTP. 3. HTTP Message Mapping \u00b6 The event binding is identical for both HTTP request and response messages. The content mode is chosen by the sender of the event, which is either the requesting or the responding party. Gestures that might allow solicitation of events using a particular mode might be defined by an application, but are not defined here. The batched mode MUST NOT be used unless solicited, and the gesture SHOULD allow the receiver to choose the maximum size of a batch. The receiver of the event can distinguish between the three modes by inspecting the Content-Type header value. If the value is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode. If the value is prefixed with application/cloudevents-batch , the receiver uses the batched mode. Otherwise it defaults to binary mode. If a receiver detects the CloudEvents media type, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the Content-Type header value is not prefixed with the CloudEvents media type, knowing when the message ought to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents HTTP headers when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as HTTP headers then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent. 3.1. Binary Content Mode \u00b6 The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort. 3.1.1. HTTP Content-Type \u00b6 For the binary mode, the HTTP Content-Type header value corresponds to (MUST be populated from or written to) the CloudEvents datacontenttype attribute. Note that a ce-datacontenttype HTTP header MUST NOT also be present in the message. 3.1.2. Event Data Encoding \u00b6 The data byte-sequence is used as the HTTP message body. 3.1.3. Metadata Headers \u00b6 All other CloudEvents attributes, including extensions, MUST be individually mapped to and from distinct HTTP message header. CloudEvents extensions that define their own attributes MAY define a secondary mapping to HTTP headers for those attributes, especially if specific attributes need to align with HTTP features or with other specifications that have explicit HTTP header bindings. Note that these attributes MUST also still appear in the HTTP message as HTTP headers with the ce- prefix as noted in HTTP Header Names . 3.1.3.1. HTTP Header Names \u00b6 Except where noted, all CloudEvents context attributes, including extensions, MUST be mapped to HTTP headers with the same name as the attribute name but prefixed with ce- . Examples: * `time` maps to `ce-time` * `id` maps to `ce-id` * `specversion` maps to `ce-specversion` Note: per the HTTP specification, header names are case-insensitive. 3.1.3.2. HTTP Header Values \u00b6 The value for each HTTP header is constructed from the respective attribute type's canonical string representation . Some CloudEvents metadata attributes can contain arbitrary UTF-8 string content, and per RFC7230, section 3 , HTTP headers MUST only use printable characters from the US-ASCII character set, and are terminated by a CRLF sequence with OPTIONAL whitespace around the header value. When encoding a CloudEvent as an HTTP message, string values represented as HTTP header values MUST be percent-encoded as described below. This is compatible with RFC3986, section 2.1 but is more specific about what needs encoding. The resulting string SHOULD NOT be further encoded. (Rationale: quoted string escaping is unnecessary when every space and double-quote character is already percent-encoded.) When decoding an HTTP message into a CloudEvent, any HTTP header value MUST first be unescaped with respect to double-quoted strings, as described in RFC7230, section 3.2.6 . A single round of percent-decoding MUST then be performed as described below. HTTP headers for CloudEvent attribute values do not support parenthetical comments, so the initial unescaping only needs to handle double-quoted values, including processing backslash escapes within double-quoted values. Header values produced via the percent-encoding described here will never include double-quoted values, but they MUST be supported when receiving events, for compatibility with older versions of this specification which did not require double-quote and space characters to be percent-encoded. Percent encoding is performed by considering each Unicode character within the attribute's canonical string representation. Any character represented in memory as a Unicode surrogate pair MUST be treated as a single Unicode character. The following characters MUST be percent-encoded: Space (U+0020) Double-quote (U+0022) Percent (U+0025) Any characters outside the printable ASCII range of U+0021-U+007E inclusive Attribute values are already constrained to prohibit characters in the range U+0000-U+001F inclusive and U+007F-U+009F inclusive; however for simplicity and to account for potential future changes, it is RECOMMENDED that any HTTP header encoding implementation treats such characters as requiring percent-encoding. Space and double-quote are encoded to avoid requiring any further quoting. Percent is encoded to avoid ambiguity with percent-encoding itself. Steps to encode a Unicode character: Encode the character using UTF-8, to obtain a byte sequence. Encode each byte within the sequence as %xy where x is a hexadecimal representation of the most significant 4 bits of the byte, and y is a hexadecimal representation of the least significant 4 bits of the byte. Percent-encoding SHOULD be performed using upper-case for values A-F, but decoding MUST accept lower-case values. When performing percent-decoding (when decoding an HTTP message to a CloudEvent), values that have been unncessarily percent-encoded MUST be accepted, but encoded byte sequences which are invalid in UTF-8 MUST be rejected. (For example, \"%C0%A0\" is an overlong encoding of U+0020, and MUST be rejected.) Example: a header value of \"Euro \u20ac \ud83d\ude00\" SHOULD be encoded as follows: The characters, 'E', 'u', 'r', 'o' do not require encoding Space, the Euro symbol, and the grinning face emoji require encoding. They are characters U+0020, U+20AC and U+1F600 respectively. The encoded HTTP header value is therefore \"Euro%20%E2%82%AC%20%F0%9F%98%80\" where \"%20\" is the encoded form of space, \"%E2%82%AC\" is the encoded form of the Euro symbol, and \"%F0%9F%98%80\" is the encoded form of the grinning face emoji. 3.1.4. Examples \u00b6 This example shows the binary mode mapping of an event with an HTTP POST request: POST /someresource HTTP/1.1 Host: webhook.example.com ce-specversion: 1.0 ce-type: com.example.someevent ce-time: 2018-04-05T03:56:24Z ce-id: 1234-1234-1234 ce-source: /mycontext/subcontext .... further attributes ... Content-Type: application/json; charset=utf-8 Content-Length: nnnn { ... application data ... } This example shows a response containing an event: HTTP/1.1 200 OK ce-specversion: 1.0 ce-type: com.example.someevent ce-time: 2018-04-05T03:56:24Z ce-id: 1234-1234-1234 ce-source: /mycontext/subcontext .... further attributes ... Content-Type: application/json; charset=utf-8 Content-Length: nnnn { ... application data ... } 3.2. Structured Content Mode \u00b6 The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols. 3.2.1. HTTP Content-Type \u00b6 The HTTP Content-Type header MUST be set to the media type of an event format . Example for the JSON format : Content-Type: application/cloudevents+json; charset=UTF-8 3.2.2. Event Data Encoding \u00b6 The chosen event format defines how all attributes, and data , are represented. The event metadata and data is then rendered in accordance with the event format specification and the resulting data becomes the HTTP message body. 3.2.3. Metadata Headers \u00b6 Implementations MAY include the same HTTP headers as defined for the binary mode . All CloudEvents metadata attributes MUST be mapped into the payload, even if they are also mapped into HTTP headers. 3.2.4. Examples \u00b6 This example shows a JSON event format encoded event, sent with a PUT request: PUT /myresource HTTP/1.1 Host: webhook.example.com Content-Type: application/cloudevents+json; charset=utf-8 Content-Length: nnnn { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } This example shows a JSON encoded event returned in a response: HTTP/1.1 200 OK Content-Type: application/cloudevents+json; charset=utf-8 Content-Length: nnnn { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } 3.3. Batched Content Mode \u00b6 In the batched content mode several events are batched into a single HTTP request or response body. The chosen event format MUST define how a batch is represented. Based on the JSON format (that MUST be supported by any compliant implementation), the JSON Batch format is an event format that supports batching. 3.3.1. HTTP Content-Type \u00b6 The HTTP Content-Type header MUST be set to the media type of an event format . Example for the JSON Batch format : Content-Type: application/cloudevents-batch+json; charset=UTF-8 3.3.2. Event Data Encoding \u00b6 The chosen event format defines how a batch of events and all event attributes, and data , are represented. The batch of events is then rendered in accordance with the event format specification and the resulting data becomes the HTTP message body. The batch MAY be empty. All batched CloudEvents MUST have the same specversion attribute. Other attributes MAY differ, including the datacontenttype attribute. 3.3.3. Examples \u00b6 This example shows two batched CloudEvents, sent with a PUT request: PUT /myresource HTTP/1.1 Host: webhook.example.com Content-Type: application/cloudevents-batch+json; charset=utf-8 Content-Length: nnnn [ { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } }, { \"specversion\" : \"1.0\", \"type\" : \"com.example.someotherevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } ] This example shows two batched CloudEvents returned in a response: HTTP/1.1 200 OK Content-Type: application/cloudevents-batch+json; charset=utf-8 Content-Length: nnnn [ { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } }, { \"specversion\" : \"1.0\", \"type\" : \"com.example.someotherevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } ] 4. References \u00b6 RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC2818 HTTP over TLS RFC3629 UTF-8, a transformation format of ISO 10646 RFC3986 Uniform Resource Identifier (URI): Generic Syntax RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC4648 The Base16, Base32, and Base64 Data Encodings RFC6839 Additional Media Type Structured Syntax Suffixes RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format RFC7230 Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing RFC7231 Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content RFC7540 Hypertext Transfer Protocol Version 2 (HTTP/2)","title":"HTTP"},{"location":"bindings/http-protocol-binding/#http-protocol-binding-for-cloudevents-version-103-wip","text":"","title":"HTTP Protocol Binding for CloudEvents - Version 1.0.3-wip"},{"location":"bindings/http-protocol-binding/#abstract","text":"The HTTP Protocol Binding for CloudEvents defines how events are mapped to HTTP 1.1 request and response messages.","title":"Abstract"},{"location":"bindings/http-protocol-binding/#table-of-contents","text":"Introduction 1.1. Conformance 1.2. Relation to HTTP 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes 2.1. datacontenttype Attribute 2.2. data HTTP Message Mapping 3.1. Binary Content Mode 3.2. Structured Content Mode 3.3. Batched Content Mode References","title":"Table of Contents"},{"location":"bindings/http-protocol-binding/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in HTTP 1.1 requests and response messages.","title":"1. Introduction"},{"location":"bindings/http-protocol-binding/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"bindings/http-protocol-binding/#12-relation-to-http","text":"This specification does not prescribe rules constraining the use or handling of specific HTTP methods , and it also does not constrain the HTTP target resource that is used for transferring or soliciting events. Events can be transferred with all standard or application-defined HTTP request methods that support payload body transfers. Events can be also be transferred in HTTP responses and with all HTTP status codes that permit payload body transfers. All examples herein that show HTTP methods, HTTP target URIs, and HTTP status codes are non-normative illustrations. This specification also applies equivalently to HTTP/2 ( RFC7540 ), which is compatible with HTTP 1.1 semantics.","title":"1.2. Relation to HTTP"},{"location":"bindings/http-protocol-binding/#13-content-modes","text":"This specification defines three content modes for transferring events: binary , structured and batched . Every compliant implementation SHOULD support the structured and binary modes. In the binary content mode, the value of the event data is placed into the HTTP request, or response, body as-is, with the datacontenttype attribute value declaring its media type in the HTTP Content-Type header; all other event attributes are mapped to HTTP headers. In the structured content mode, event metadata attributes and event data are placed into the HTTP request or response body using an event format that supports structured-mode messages . In the batched content mode, event metadata attributes and event data of multiple events are batched into a single HTTP request or response body using an event format that supports batching structured-mode messages .","title":"1.3. Content Modes"},{"location":"bindings/http-protocol-binding/#14-event-formats","text":"Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the non-batching JSON event format , but MAY support any additional, including proprietary, formats. Event formats MAY additionally define how a batch of events is expressed. Those can be used with the batched content mode.","title":"1.4. Event Formats"},{"location":"bindings/http-protocol-binding/#15-security","text":"This specification does not introduce any new security features for HTTP, or mandate specific existing features to be used. This specification applies identically to HTTP over TLS .","title":"1.5. Security"},{"location":"bindings/http-protocol-binding/#2-use-of-cloudevents-attributes","text":"This specification does not further define any of the core CloudEvents event attributes. This mapping is intentionally robust against changes, including the addition and removal of event attributes, and also accommodates vendor extensions to the event metadata.","title":"2. Use of CloudEvents Attributes"},{"location":"bindings/http-protocol-binding/#21-datacontenttype-attribute","text":"The datacontenttype attribute is assumed to contain a RFC2046 compliant media-type expression.","title":"2.1. datacontenttype Attribute"},{"location":"bindings/http-protocol-binding/#22-data","text":"data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into HTTP as defined in this specification, the assumption is that the data value is made available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text to HTTP.","title":"2.2. data"},{"location":"bindings/http-protocol-binding/#3-http-message-mapping","text":"The event binding is identical for both HTTP request and response messages. The content mode is chosen by the sender of the event, which is either the requesting or the responding party. Gestures that might allow solicitation of events using a particular mode might be defined by an application, but are not defined here. The batched mode MUST NOT be used unless solicited, and the gesture SHOULD allow the receiver to choose the maximum size of a batch. The receiver of the event can distinguish between the three modes by inspecting the Content-Type header value. If the value is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode. If the value is prefixed with application/cloudevents-batch , the receiver uses the batched mode. Otherwise it defaults to binary mode. If a receiver detects the CloudEvents media type, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the Content-Type header value is not prefixed with the CloudEvents media type, knowing when the message ought to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents HTTP headers when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as HTTP headers then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent.","title":"3. HTTP Message Mapping"},{"location":"bindings/http-protocol-binding/#31-binary-content-mode","text":"The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort.","title":"3.1. Binary Content Mode"},{"location":"bindings/http-protocol-binding/#311-http-content-type","text":"For the binary mode, the HTTP Content-Type header value corresponds to (MUST be populated from or written to) the CloudEvents datacontenttype attribute. Note that a ce-datacontenttype HTTP header MUST NOT also be present in the message.","title":"3.1.1. HTTP Content-Type"},{"location":"bindings/http-protocol-binding/#312-event-data-encoding","text":"The data byte-sequence is used as the HTTP message body.","title":"3.1.2. Event Data Encoding"},{"location":"bindings/http-protocol-binding/#313-metadata-headers","text":"All other CloudEvents attributes, including extensions, MUST be individually mapped to and from distinct HTTP message header. CloudEvents extensions that define their own attributes MAY define a secondary mapping to HTTP headers for those attributes, especially if specific attributes need to align with HTTP features or with other specifications that have explicit HTTP header bindings. Note that these attributes MUST also still appear in the HTTP message as HTTP headers with the ce- prefix as noted in HTTP Header Names .","title":"3.1.3. Metadata Headers"},{"location":"bindings/http-protocol-binding/#3131-http-header-names","text":"Except where noted, all CloudEvents context attributes, including extensions, MUST be mapped to HTTP headers with the same name as the attribute name but prefixed with ce- . Examples: * `time` maps to `ce-time` * `id` maps to `ce-id` * `specversion` maps to `ce-specversion` Note: per the HTTP specification, header names are case-insensitive.","title":"3.1.3.1. HTTP Header Names"},{"location":"bindings/http-protocol-binding/#3132-http-header-values","text":"The value for each HTTP header is constructed from the respective attribute type's canonical string representation . Some CloudEvents metadata attributes can contain arbitrary UTF-8 string content, and per RFC7230, section 3 , HTTP headers MUST only use printable characters from the US-ASCII character set, and are terminated by a CRLF sequence with OPTIONAL whitespace around the header value. When encoding a CloudEvent as an HTTP message, string values represented as HTTP header values MUST be percent-encoded as described below. This is compatible with RFC3986, section 2.1 but is more specific about what needs encoding. The resulting string SHOULD NOT be further encoded. (Rationale: quoted string escaping is unnecessary when every space and double-quote character is already percent-encoded.) When decoding an HTTP message into a CloudEvent, any HTTP header value MUST first be unescaped with respect to double-quoted strings, as described in RFC7230, section 3.2.6 . A single round of percent-decoding MUST then be performed as described below. HTTP headers for CloudEvent attribute values do not support parenthetical comments, so the initial unescaping only needs to handle double-quoted values, including processing backslash escapes within double-quoted values. Header values produced via the percent-encoding described here will never include double-quoted values, but they MUST be supported when receiving events, for compatibility with older versions of this specification which did not require double-quote and space characters to be percent-encoded. Percent encoding is performed by considering each Unicode character within the attribute's canonical string representation. Any character represented in memory as a Unicode surrogate pair MUST be treated as a single Unicode character. The following characters MUST be percent-encoded: Space (U+0020) Double-quote (U+0022) Percent (U+0025) Any characters outside the printable ASCII range of U+0021-U+007E inclusive Attribute values are already constrained to prohibit characters in the range U+0000-U+001F inclusive and U+007F-U+009F inclusive; however for simplicity and to account for potential future changes, it is RECOMMENDED that any HTTP header encoding implementation treats such characters as requiring percent-encoding. Space and double-quote are encoded to avoid requiring any further quoting. Percent is encoded to avoid ambiguity with percent-encoding itself. Steps to encode a Unicode character: Encode the character using UTF-8, to obtain a byte sequence. Encode each byte within the sequence as %xy where x is a hexadecimal representation of the most significant 4 bits of the byte, and y is a hexadecimal representation of the least significant 4 bits of the byte. Percent-encoding SHOULD be performed using upper-case for values A-F, but decoding MUST accept lower-case values. When performing percent-decoding (when decoding an HTTP message to a CloudEvent), values that have been unncessarily percent-encoded MUST be accepted, but encoded byte sequences which are invalid in UTF-8 MUST be rejected. (For example, \"%C0%A0\" is an overlong encoding of U+0020, and MUST be rejected.) Example: a header value of \"Euro \u20ac \ud83d\ude00\" SHOULD be encoded as follows: The characters, 'E', 'u', 'r', 'o' do not require encoding Space, the Euro symbol, and the grinning face emoji require encoding. They are characters U+0020, U+20AC and U+1F600 respectively. The encoded HTTP header value is therefore \"Euro%20%E2%82%AC%20%F0%9F%98%80\" where \"%20\" is the encoded form of space, \"%E2%82%AC\" is the encoded form of the Euro symbol, and \"%F0%9F%98%80\" is the encoded form of the grinning face emoji.","title":"3.1.3.2. HTTP Header Values"},{"location":"bindings/http-protocol-binding/#314-examples","text":"This example shows the binary mode mapping of an event with an HTTP POST request: POST /someresource HTTP/1.1 Host: webhook.example.com ce-specversion: 1.0 ce-type: com.example.someevent ce-time: 2018-04-05T03:56:24Z ce-id: 1234-1234-1234 ce-source: /mycontext/subcontext .... further attributes ... Content-Type: application/json; charset=utf-8 Content-Length: nnnn { ... application data ... } This example shows a response containing an event: HTTP/1.1 200 OK ce-specversion: 1.0 ce-type: com.example.someevent ce-time: 2018-04-05T03:56:24Z ce-id: 1234-1234-1234 ce-source: /mycontext/subcontext .... further attributes ... Content-Type: application/json; charset=utf-8 Content-Length: nnnn { ... application data ... }","title":"3.1.4. Examples"},{"location":"bindings/http-protocol-binding/#32-structured-content-mode","text":"The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols.","title":"3.2. Structured Content Mode"},{"location":"bindings/http-protocol-binding/#321-http-content-type","text":"The HTTP Content-Type header MUST be set to the media type of an event format . Example for the JSON format : Content-Type: application/cloudevents+json; charset=UTF-8","title":"3.2.1. HTTP Content-Type"},{"location":"bindings/http-protocol-binding/#322-event-data-encoding","text":"The chosen event format defines how all attributes, and data , are represented. The event metadata and data is then rendered in accordance with the event format specification and the resulting data becomes the HTTP message body.","title":"3.2.2. Event Data Encoding"},{"location":"bindings/http-protocol-binding/#323-metadata-headers","text":"Implementations MAY include the same HTTP headers as defined for the binary mode . All CloudEvents metadata attributes MUST be mapped into the payload, even if they are also mapped into HTTP headers.","title":"3.2.3. Metadata Headers"},{"location":"bindings/http-protocol-binding/#324-examples","text":"This example shows a JSON event format encoded event, sent with a PUT request: PUT /myresource HTTP/1.1 Host: webhook.example.com Content-Type: application/cloudevents+json; charset=utf-8 Content-Length: nnnn { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } This example shows a JSON encoded event returned in a response: HTTP/1.1 200 OK Content-Type: application/cloudevents+json; charset=utf-8 Content-Length: nnnn { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } }","title":"3.2.4. Examples"},{"location":"bindings/http-protocol-binding/#33-batched-content-mode","text":"In the batched content mode several events are batched into a single HTTP request or response body. The chosen event format MUST define how a batch is represented. Based on the JSON format (that MUST be supported by any compliant implementation), the JSON Batch format is an event format that supports batching.","title":"3.3. Batched Content Mode"},{"location":"bindings/http-protocol-binding/#331-http-content-type","text":"The HTTP Content-Type header MUST be set to the media type of an event format . Example for the JSON Batch format : Content-Type: application/cloudevents-batch+json; charset=UTF-8","title":"3.3.1. HTTP Content-Type"},{"location":"bindings/http-protocol-binding/#332-event-data-encoding","text":"The chosen event format defines how a batch of events and all event attributes, and data , are represented. The batch of events is then rendered in accordance with the event format specification and the resulting data becomes the HTTP message body. The batch MAY be empty. All batched CloudEvents MUST have the same specversion attribute. Other attributes MAY differ, including the datacontenttype attribute.","title":"3.3.2. Event Data Encoding"},{"location":"bindings/http-protocol-binding/#333-examples","text":"This example shows two batched CloudEvents, sent with a PUT request: PUT /myresource HTTP/1.1 Host: webhook.example.com Content-Type: application/cloudevents-batch+json; charset=utf-8 Content-Length: nnnn [ { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } }, { \"specversion\" : \"1.0\", \"type\" : \"com.example.someotherevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } ] This example shows two batched CloudEvents returned in a response: HTTP/1.1 200 OK Content-Type: application/cloudevents-batch+json; charset=utf-8 Content-Length: nnnn [ { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } }, { \"specversion\" : \"1.0\", \"type\" : \"com.example.someotherevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } ]","title":"3.3.3. Examples"},{"location":"bindings/http-protocol-binding/#4-references","text":"RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC2818 HTTP over TLS RFC3629 UTF-8, a transformation format of ISO 10646 RFC3986 Uniform Resource Identifier (URI): Generic Syntax RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC4648 The Base16, Base32, and Base64 Data Encodings RFC6839 Additional Media Type Structured Syntax Suffixes RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format RFC7230 Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing RFC7231 Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content RFC7540 Hypertext Transfer Protocol Version 2 (HTTP/2)","title":"4. References"},{"location":"bindings/kafka-protocol-binding/","text":"Kafka Protocol Binding for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The Kafka Protocol Binding for CloudEvents defines how events are mapped to Kafka messages . Table of Contents \u00b6 Introduction 1.1. Conformance 1.2. Relation to Kafka 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes 2.1. data Kafka Message Mapping 3.1. Key Mapping 3.2. Binary Content Mode 3.3. Structured Content Mode References 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in the Kafka protocol as Kafka messages (aka Kafka records). 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2. Relation to Kafka \u00b6 This specification does not prescribe rules constraining transfer or settlement of event messages with Kafka; it solely defines how CloudEvents are expressed in the Kafka protocol as Kafka messages . The Kafka documentation uses \"message\" and \"record\" somewhat interchangeably and therefore the terms are to be considered synonyms in this specification as well. Conceptually, Kafka is a log-oriented store for records, each holding a singular key/value pair. The store is commonly partitioned, and the partition for a record is typically chosen based on the key's value. Kafka clients accomplish this by using a hash function. This binding specification defines how attributes and data of a CloudEvent is mapped to the value and headers sections of a Kafka record. Generally, the user SHOULD configure the key and/or the partition of the Kafka record in a way that makes more sense for his/her use case (e.g. streaming applications), in order to co-partition values, define relationships between events, etc. This spec provides an OPTIONAL definition to map the key section of the Kafka record, without constraining the user to implement it nor use it. An example use case of this definition is when the sink of the event is a Kafka topic, but the source is another transport (e.g. HTTP), and the user needs a way to key the record. As a counter example, it doesn't make sense to use it when the sink and source are Kafka topics, because this might cause the re-keying of the records. 1.3. Content Modes \u00b6 The specification defines two content modes for transferring events: structured and binary . In the structured content mode, event metadata attributes and event data are placed into the Kafka message value section using an event format . In the binary content mode, the value of the event data MUST be placed into the Kafka message's value section as-is, with the content-type header value declaring its media type; all other event attributes MUST be mapped to the Kafka message's header section . Implementations that use Kafka 0.11.0.0 and above MAY use either binary or structured modes. Implementations that use Kafka 0.10.x.x and below MUST only use structured mode. This is because older versions of Kafka lacked support for message level headers. 1.4. Event Formats \u00b6 Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the JSON event format . 1.5. Security \u00b6 This specification does not introduce any new security features for Kafka, or mandate specific existing features to be used. 2. Use of CloudEvents Attributes \u00b6 This specification does not further define any of the CloudEvents event attributes. 2.1. data \u00b6 data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into Kafka as defined in this specification, core Kafka provides data available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text. 3. Kafka Message Mapping \u00b6 With Kafka 0.11.0.0 and above, the content mode is chosen by the sender of the event. Protocol usage patterns that might allow solicitation of events using a particular content mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two content modes by inspecting the content-type Header of the Kafka message. If the header is present and its value is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode, otherwise it defaults to binary mode. If a receiver finds a CloudEvents media type as per the above rule, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the content-type header value is not prefixed with the CloudEvents media type, knowing when the message ought to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents headers when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as headers then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent. 3.1. Key Mapping \u00b6 Every implementation MUST, by default, map the user provided record key to the Kafka record key. The 'key' of the Kafka message MAY be populated by a \"Key Mapper\" function, which might map the key directly from one of the CloudEvent's attributes, but might also use information from the application environment, from the CloudEvent's data or other sources. The shape and configuration of the \"Key Mapper\" function is implementation specific. Every implementation SHOULD provide an opt-in \"Key Mapper\" implementation that maps the Partitioning partitionkey attribute value to the 'key' of the Kafka message as-is, if present. A mapping function MUST NOT modify the CloudEvent. This means that the aforementioned partitionkey attribute MUST still be included with the transmitted event, if present. It also means that a mapping function that uses key information from an out-of-band source, like a parameter or configuration setting, MUST NOT add an attribute to the CloudEvent. 3.2. Binary Content Mode \u00b6 The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort. 3.2.1. Content Type \u00b6 For the binary mode, the header content-type property MUST be mapped directly to the CloudEvents datacontenttype attribute. 3.2.2. Event Data Encoding \u00b6 The data byte-sequence MUST be used as the value of the Kafka message. In binary mode, the Kafka representation of a CloudEvent with no data is a Kafka message with no value. In a topic with log compaction enabled, any such message will represent a tombstone record, as described in the Kafka compaction documentation . 3.2.3. Metadata Headers \u00b6 All CloudEvents attributes and CloudEvent Attributes Extensions with exception of data MUST be individually mapped to and from the Header fields in the Kafka message. Both header keys and header values MUST be encoded as UTF-8 strings. 3.2.3.1 Property Names \u00b6 CloudEvent attributes are prefixed with ce_ for use in the message-headers section. Examples: * `time` maps to `ce_time` * `id` maps to `ce_id` * `specversion` maps to `ce_specversion` 3.2.4.2 Property Values \u00b6 The value for each Kafka header is constructed from the respective header's Kafka representation, compliant with the Kafka message format specification. 3.2.5 Example \u00b6 This example shows the binary mode mapping of an event into the Kafka message. All other CloudEvents attributes are mapped to Kafka Header fields with prefix ce_ . Mind that ce_ here does refer to the event data content carried in the payload. ------------------ Message ------------------- Topic Name: mytopic ------------------- key ---------------------- Key: mykey ------------------ headers ------------------- ce_specversion: \"1.0\" ce_type: \"com.example.someevent\" ce_source: \"/mycontext/subcontext\" ce_id: \"1234-1234-1234\" ce_time: \"2018-04-05T03:56:24Z\" content-type: application/avro .... further attributes ... ------------------- value -------------------- ... application data encoded in Avro ... ----------------------------------------------- 3.3. Structured Content Mode \u00b6 The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols. 3.3.1. Kafka Content-Type \u00b6 If present, the Kafka message header property content-type MUST be set to the media type of an event format . Example for the JSON format : content-type: application/cloudevents+json; charset=UTF-8 3.3.2. Event Data Encoding \u00b6 The chosen event format defines how all attributes, and data , are represented. The event metadata and data are then rendered in accordance with the event format specification and the resulting data becomes the Kafka application data section. In structured mode, the Kafka representation of a CloudEvent with no data is a Kafka message which still has a data section (containing the attributes of the CloudEvent). Such a message does not represent a tombstone record in a topic with log compaction enabled, unlike the representation in binary mode. 3.3.3. Metadata Headers \u00b6 Implementations MAY include the same Kafka headers as defined for the binary mode . 3.3.4 Example \u00b6 This example shows a JSON event format encoded event: ------------------ Message ------------------- Topic Name: mytopic ------------------- key ---------------------- Key: mykey ------------------ headers ------------------- content-type: application/cloudevents+json; charset=UTF-8 ------------------- value -------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", \"source\" : \"/mycontext/subcontext\", \"id\" : \"1234-1234-1234\", \"time\" : \"2018-04-05T03:56:24Z\", \"datacontenttype\" : \"application/xml\", ... further attributes omitted ... \"data\" : { ... application data encoded in XML ... } } ----------------------------------------------- 4. References \u00b6 Kafka The distributed stream platform Kafka-Message-Format The Kafka format message RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format","title":"Kafka"},{"location":"bindings/kafka-protocol-binding/#kafka-protocol-binding-for-cloudevents-version-103-wip","text":"","title":"Kafka Protocol Binding for CloudEvents - Version 1.0.3-wip"},{"location":"bindings/kafka-protocol-binding/#abstract","text":"The Kafka Protocol Binding for CloudEvents defines how events are mapped to Kafka messages .","title":"Abstract"},{"location":"bindings/kafka-protocol-binding/#table-of-contents","text":"Introduction 1.1. Conformance 1.2. Relation to Kafka 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes 2.1. data Kafka Message Mapping 3.1. Key Mapping 3.2. Binary Content Mode 3.3. Structured Content Mode References","title":"Table of Contents"},{"location":"bindings/kafka-protocol-binding/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in the Kafka protocol as Kafka messages (aka Kafka records).","title":"1. Introduction"},{"location":"bindings/kafka-protocol-binding/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"bindings/kafka-protocol-binding/#12-relation-to-kafka","text":"This specification does not prescribe rules constraining transfer or settlement of event messages with Kafka; it solely defines how CloudEvents are expressed in the Kafka protocol as Kafka messages . The Kafka documentation uses \"message\" and \"record\" somewhat interchangeably and therefore the terms are to be considered synonyms in this specification as well. Conceptually, Kafka is a log-oriented store for records, each holding a singular key/value pair. The store is commonly partitioned, and the partition for a record is typically chosen based on the key's value. Kafka clients accomplish this by using a hash function. This binding specification defines how attributes and data of a CloudEvent is mapped to the value and headers sections of a Kafka record. Generally, the user SHOULD configure the key and/or the partition of the Kafka record in a way that makes more sense for his/her use case (e.g. streaming applications), in order to co-partition values, define relationships between events, etc. This spec provides an OPTIONAL definition to map the key section of the Kafka record, without constraining the user to implement it nor use it. An example use case of this definition is when the sink of the event is a Kafka topic, but the source is another transport (e.g. HTTP), and the user needs a way to key the record. As a counter example, it doesn't make sense to use it when the sink and source are Kafka topics, because this might cause the re-keying of the records.","title":"1.2. Relation to Kafka"},{"location":"bindings/kafka-protocol-binding/#13-content-modes","text":"The specification defines two content modes for transferring events: structured and binary . In the structured content mode, event metadata attributes and event data are placed into the Kafka message value section using an event format . In the binary content mode, the value of the event data MUST be placed into the Kafka message's value section as-is, with the content-type header value declaring its media type; all other event attributes MUST be mapped to the Kafka message's header section . Implementations that use Kafka 0.11.0.0 and above MAY use either binary or structured modes. Implementations that use Kafka 0.10.x.x and below MUST only use structured mode. This is because older versions of Kafka lacked support for message level headers.","title":"1.3. Content Modes"},{"location":"bindings/kafka-protocol-binding/#14-event-formats","text":"Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the JSON event format .","title":"1.4. Event Formats"},{"location":"bindings/kafka-protocol-binding/#15-security","text":"This specification does not introduce any new security features for Kafka, or mandate specific existing features to be used.","title":"1.5. Security"},{"location":"bindings/kafka-protocol-binding/#2-use-of-cloudevents-attributes","text":"This specification does not further define any of the CloudEvents event attributes.","title":"2. Use of CloudEvents Attributes"},{"location":"bindings/kafka-protocol-binding/#21-data","text":"data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into Kafka as defined in this specification, core Kafka provides data available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text.","title":"2.1. data"},{"location":"bindings/kafka-protocol-binding/#3-kafka-message-mapping","text":"With Kafka 0.11.0.0 and above, the content mode is chosen by the sender of the event. Protocol usage patterns that might allow solicitation of events using a particular content mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two content modes by inspecting the content-type Header of the Kafka message. If the header is present and its value is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode, otherwise it defaults to binary mode. If a receiver finds a CloudEvents media type as per the above rule, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the content-type header value is not prefixed with the CloudEvents media type, knowing when the message ought to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents headers when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as headers then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent.","title":"3. Kafka Message Mapping"},{"location":"bindings/kafka-protocol-binding/#31-key-mapping","text":"Every implementation MUST, by default, map the user provided record key to the Kafka record key. The 'key' of the Kafka message MAY be populated by a \"Key Mapper\" function, which might map the key directly from one of the CloudEvent's attributes, but might also use information from the application environment, from the CloudEvent's data or other sources. The shape and configuration of the \"Key Mapper\" function is implementation specific. Every implementation SHOULD provide an opt-in \"Key Mapper\" implementation that maps the Partitioning partitionkey attribute value to the 'key' of the Kafka message as-is, if present. A mapping function MUST NOT modify the CloudEvent. This means that the aforementioned partitionkey attribute MUST still be included with the transmitted event, if present. It also means that a mapping function that uses key information from an out-of-band source, like a parameter or configuration setting, MUST NOT add an attribute to the CloudEvent.","title":"3.1. Key Mapping"},{"location":"bindings/kafka-protocol-binding/#32-binary-content-mode","text":"The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort.","title":"3.2. Binary Content Mode"},{"location":"bindings/kafka-protocol-binding/#321-content-type","text":"For the binary mode, the header content-type property MUST be mapped directly to the CloudEvents datacontenttype attribute.","title":"3.2.1. Content Type"},{"location":"bindings/kafka-protocol-binding/#322-event-data-encoding","text":"The data byte-sequence MUST be used as the value of the Kafka message. In binary mode, the Kafka representation of a CloudEvent with no data is a Kafka message with no value. In a topic with log compaction enabled, any such message will represent a tombstone record, as described in the Kafka compaction documentation .","title":"3.2.2. Event Data Encoding"},{"location":"bindings/kafka-protocol-binding/#323-metadata-headers","text":"All CloudEvents attributes and CloudEvent Attributes Extensions with exception of data MUST be individually mapped to and from the Header fields in the Kafka message. Both header keys and header values MUST be encoded as UTF-8 strings.","title":"3.2.3. Metadata Headers"},{"location":"bindings/kafka-protocol-binding/#3231-property-names","text":"CloudEvent attributes are prefixed with ce_ for use in the message-headers section. Examples: * `time` maps to `ce_time` * `id` maps to `ce_id` * `specversion` maps to `ce_specversion`","title":"3.2.3.1 Property Names"},{"location":"bindings/kafka-protocol-binding/#3242-property-values","text":"The value for each Kafka header is constructed from the respective header's Kafka representation, compliant with the Kafka message format specification.","title":"3.2.4.2 Property Values"},{"location":"bindings/kafka-protocol-binding/#325-example","text":"This example shows the binary mode mapping of an event into the Kafka message. All other CloudEvents attributes are mapped to Kafka Header fields with prefix ce_ . Mind that ce_ here does refer to the event data content carried in the payload. ------------------ Message ------------------- Topic Name: mytopic ------------------- key ---------------------- Key: mykey ------------------ headers ------------------- ce_specversion: \"1.0\" ce_type: \"com.example.someevent\" ce_source: \"/mycontext/subcontext\" ce_id: \"1234-1234-1234\" ce_time: \"2018-04-05T03:56:24Z\" content-type: application/avro .... further attributes ... ------------------- value -------------------- ... application data encoded in Avro ... -----------------------------------------------","title":"3.2.5 Example"},{"location":"bindings/kafka-protocol-binding/#33-structured-content-mode","text":"The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols.","title":"3.3. Structured Content Mode"},{"location":"bindings/kafka-protocol-binding/#331-kafka-content-type","text":"If present, the Kafka message header property content-type MUST be set to the media type of an event format . Example for the JSON format : content-type: application/cloudevents+json; charset=UTF-8","title":"3.3.1. Kafka Content-Type"},{"location":"bindings/kafka-protocol-binding/#332-event-data-encoding","text":"The chosen event format defines how all attributes, and data , are represented. The event metadata and data are then rendered in accordance with the event format specification and the resulting data becomes the Kafka application data section. In structured mode, the Kafka representation of a CloudEvent with no data is a Kafka message which still has a data section (containing the attributes of the CloudEvent). Such a message does not represent a tombstone record in a topic with log compaction enabled, unlike the representation in binary mode.","title":"3.3.2. Event Data Encoding"},{"location":"bindings/kafka-protocol-binding/#333-metadata-headers","text":"Implementations MAY include the same Kafka headers as defined for the binary mode .","title":"3.3.3. Metadata Headers"},{"location":"bindings/kafka-protocol-binding/#334-example","text":"This example shows a JSON event format encoded event: ------------------ Message ------------------- Topic Name: mytopic ------------------- key ---------------------- Key: mykey ------------------ headers ------------------- content-type: application/cloudevents+json; charset=UTF-8 ------------------- value -------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", \"source\" : \"/mycontext/subcontext\", \"id\" : \"1234-1234-1234\", \"time\" : \"2018-04-05T03:56:24Z\", \"datacontenttype\" : \"application/xml\", ... further attributes omitted ... \"data\" : { ... application data encoded in XML ... } } -----------------------------------------------","title":"3.3.4 Example"},{"location":"bindings/kafka-protocol-binding/#4-references","text":"Kafka The distributed stream platform Kafka-Message-Format The Kafka format message RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format","title":"4. References"},{"location":"bindings/mqtt-protocol-binding/","text":"MQTT Protocol Binding for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The MQTT Protocol Binding for CloudEvents defines how events are mapped to MQTT 3.1.1 ( OASIS ; ISO/IEC 20922:2016) and MQTT 5.0 ( OASIS ) messages. Table of Contents \u00b6 Introduction 1.1. Conformance 1.2. Relation to MQTT 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes 2.1. datacontenttype Attribute 2.2. data MQTT PUBLISH Message Mapping 3.2. Binary Content Mode 3.1. Structured Content Mode References 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in MQTT PUBLISH ( 3.1.1 , 5.0 ) messages. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2. Relation to MQTT \u00b6 This specification does not prescribe rules constraining transfer or settlement of event messages with MQTT; it solely defines how CloudEvents are expressed as MQTT PUBLISH messages ( 3.1.1 , 5.0 ). 1.3. Content Modes \u00b6 The specification defines two content modes for transferring events: structured and binary . The binary mode only applies to MQTT 5.0, because of MQTT 3.1.1's lack of support for custom metadata. In the structured content mode, event metadata attributes and event data are placed into the MQTT PUBLISH message payload section using an event format . In the binary content mode, the value of the event data is placed into the MQTT PUBLISH message's payload section as-is, with the datacontenttype attribute value declaring its media type in the MQTT PUBLISH message's Content Type property; all other event attributes are mapped to User Property fields. 1.4. Event Formats \u00b6 Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the JSON event format . 1.5. Security \u00b6 This specification does not introduce any new security features for MQTT, or mandate specific existing features to be used. 2. Use of CloudEvents Attributes \u00b6 This specification does not further define any of the CloudEvents event attributes. This mapping is intentionally robust against changes, including the addition and removal of event attributes, and also accommodates vendor extensions to the event metadata. 2.1. datacontenttype Attribute \u00b6 The datacontenttype attribute is assumed to contain a RFC2046 compliant media-type expression. 2.2. data \u00b6 data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into MQTT as defined in this specification, the assumption is that the data value is made available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text for use in MQTT. 3. MQTT PUBLISH Message Mapping \u00b6 With MQTT 5.0, the content mode is chosen by the sender of the event. Protocol usage patterns that might allow solicitation of events using a particular content mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two content modes by inspecting the Content Type property of the MQTT PUBLISH message. If the value of the Content Type property is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode, otherwise it defaults to binary mode. If a receiver finds a CloudEvents media type as per the above rule, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the Content Type header value is not prefixed with the CloudEvents media type, knowing when the message ought to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents properties when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as message properties then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent. With MQTT 3.1.1, the content mode is always structured and the message payload MUST use the JSON event format . 3.1. Binary Content Mode \u00b6 The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort. 3.1.1. MQTT PUBLISH Content Type \u00b6 For the binary mode, the MQTT PUBLISH message's Content Type property MUST be mapped directly to the CloudEvents datacontenttype attribute. 3.1.2. Event Data Encoding \u00b6 The data byte-sequence MUST be used as the payload of the MQTT PUBLISH message. 3.1.3. Metadata Headers \u00b6 All other CloudEvents context attributes, including extensions, MUST be individually mapped to and from the User Property fields in the MQTT PUBLISH message. CloudEvents extensions that define their own attributes MAY define a secondary mapping to MQTT user properties or features for those attributes, especially if specific attributes need to align with MQTT features, or with other specifications that have explicit MQTT header bindings. However, they MUST also include the previously defined primary mapping. 3.1.3.1 User Property Names \u00b6 CloudEvents attribute names MUST be used unchanged in each mapped User Property in the MQTT PUBLISH message. 3.1.3.2 User Property Values \u00b6 The value for each MQTT PUBLISH User Property MUST be constructed from the respective CloudEvents attribute type's canonical string representation . 3.1.4 Examples \u00b6 This example shows the binary mode mapping of an event into the MQTT 5.0 PUBLISH message. The CloudEvents datacontenttype attribute is mapped to the MQTT PUBLISH Content Type field; all other CloudEvents attributes are mapped to MQTT PUBLISH User Property fields. The Topic name is chosen by the MQTT client and not derived from the CloudEvents event data. Mind that Content Type here does refer to the event data content carried in the payload. ------------------ PUBLISH ------------------- Topic Name: mytopic Content Type: application/json; charset=utf-8 ------------- User Properties ---------------- specversion: 1.0 type: com.example.someevent time: 2018-04-05T03:56:24Z id: 1234-1234-1234 source: /mycontext/subcontext datacontenttype: application/json; charset=utf-8 .... further attributes ... ------------------ payload ------------------- { ... application data ... } ----------------------------------------------- 3.2. Structured Content Mode \u00b6 The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols. This is the only supported mode for MQTT 3.1.1 3.2.1. MQTT Content Type \u00b6 For MQTT 5.0, the MQTT PUBLISH message's Content Type property MUST be set to the media type of an event format . For MQTT 3.1.1, the media type of the JSON event format is always implied: Example for the JSON format : content-type: application/cloudevents+json; charset=utf-8 3.2.2. Event Data Encoding \u00b6 The chosen event format defines how all attributes, and data , are represented. The event metadata and data MUST then be rendered in accordance with the event format specification and the resulting data becomes the MQTT PUBLISH payload. 3.2.3. Metadata Headers \u00b6 For MQTT 5.0, implementations MAY include the same MQTT PUBLISH User Properties as defined for the binary mode . 3.2.4. Examples \u00b6 The first example shows a JSON event format encoded event with MQTT 5.0 ------------------ PUBLISH ------------------- Topic Name: mytopic Content Type: application/cloudevents+json; charset=utf-8 ------------------ payload ------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", \"time\" : 2018-04-05T03:56;24Z, \"id\" : 1234-1234-1234, \"source\" : \"/mycontext/subcontext\", \"datacontenttype\" : \"application/json; charset=utf-8\", ... further attributes omitted ... \"data\" : { ... application data ... } } ----------------------------------------------- For MQTT 3.1.1, the example looks nearly identical, but Content Type is absent because not yet supported in that version of the MQTT specification and therefore application/cloudevents+json is implied: ------------------ PUBLISH ------------------- Topic Name: mytopic ------------------ payload ------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", \"time\" : 2018-04-05T03:56;24Z, \"id\" : 1234-1234-1234, \"source\" : \"/mycontext/subcontext\", \"datacontenttype\" : \"application/json; charset=utf-8\", ... further attributes omitted ... \"data\" : { ... application data ... } } ----------------------------------------------- 4. References \u00b6 MQTT 3.1.1 MQTT Version 3.1.1 MQTT 5.0 MQTT Version 5.0 RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format","title":"MQTT"},{"location":"bindings/mqtt-protocol-binding/#mqtt-protocol-binding-for-cloudevents-version-103-wip","text":"","title":"MQTT Protocol Binding for CloudEvents - Version 1.0.3-wip"},{"location":"bindings/mqtt-protocol-binding/#abstract","text":"The MQTT Protocol Binding for CloudEvents defines how events are mapped to MQTT 3.1.1 ( OASIS ; ISO/IEC 20922:2016) and MQTT 5.0 ( OASIS ) messages.","title":"Abstract"},{"location":"bindings/mqtt-protocol-binding/#table-of-contents","text":"Introduction 1.1. Conformance 1.2. Relation to MQTT 1.3. Content Modes 1.4. Event Formats 1.5. Security Use of CloudEvents Attributes 2.1. datacontenttype Attribute 2.2. data MQTT PUBLISH Message Mapping 3.2. Binary Content Mode 3.1. Structured Content Mode References","title":"Table of Contents"},{"location":"bindings/mqtt-protocol-binding/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in MQTT PUBLISH ( 3.1.1 , 5.0 ) messages.","title":"1. Introduction"},{"location":"bindings/mqtt-protocol-binding/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"bindings/mqtt-protocol-binding/#12-relation-to-mqtt","text":"This specification does not prescribe rules constraining transfer or settlement of event messages with MQTT; it solely defines how CloudEvents are expressed as MQTT PUBLISH messages ( 3.1.1 , 5.0 ).","title":"1.2. Relation to MQTT"},{"location":"bindings/mqtt-protocol-binding/#13-content-modes","text":"The specification defines two content modes for transferring events: structured and binary . The binary mode only applies to MQTT 5.0, because of MQTT 3.1.1's lack of support for custom metadata. In the structured content mode, event metadata attributes and event data are placed into the MQTT PUBLISH message payload section using an event format . In the binary content mode, the value of the event data is placed into the MQTT PUBLISH message's payload section as-is, with the datacontenttype attribute value declaring its media type in the MQTT PUBLISH message's Content Type property; all other event attributes are mapped to User Property fields.","title":"1.3. Content Modes"},{"location":"bindings/mqtt-protocol-binding/#14-event-formats","text":"Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification that support the structured content mode MUST support the JSON event format .","title":"1.4. Event Formats"},{"location":"bindings/mqtt-protocol-binding/#15-security","text":"This specification does not introduce any new security features for MQTT, or mandate specific existing features to be used.","title":"1.5. Security"},{"location":"bindings/mqtt-protocol-binding/#2-use-of-cloudevents-attributes","text":"This specification does not further define any of the CloudEvents event attributes. This mapping is intentionally robust against changes, including the addition and removal of event attributes, and also accommodates vendor extensions to the event metadata.","title":"2. Use of CloudEvents Attributes"},{"location":"bindings/mqtt-protocol-binding/#21-datacontenttype-attribute","text":"The datacontenttype attribute is assumed to contain a RFC2046 compliant media-type expression.","title":"2.1. datacontenttype Attribute"},{"location":"bindings/mqtt-protocol-binding/#22-data","text":"data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into MQTT as defined in this specification, the assumption is that the data value is made available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text for use in MQTT.","title":"2.2. data"},{"location":"bindings/mqtt-protocol-binding/#3-mqtt-publish-message-mapping","text":"With MQTT 5.0, the content mode is chosen by the sender of the event. Protocol usage patterns that might allow solicitation of events using a particular content mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two content modes by inspecting the Content Type property of the MQTT PUBLISH message. If the value of the Content Type property is prefixed with the CloudEvents media type application/cloudevents , indicating the use of a known event format , the receiver uses structured mode, otherwise it defaults to binary mode. If a receiver finds a CloudEvents media type as per the above rule, but with an event format that it cannot handle, for instance application/cloudevents+avro , it MAY still treat the event as binary and forward it to another party as-is. When the Content Type header value is not prefixed with the CloudEvents media type, knowing when the message ought to be parsed as a CloudEvent can be a challenge. While this specification can not mandate that senders do not include any of the CloudEvents properties when the message is not a CloudEvent, it would be reasonable for a receiver to assume that if the message has all of the mandatory CloudEvents attributes as message properties then it's probably a CloudEvent. However, as with all CloudEvent messages, if it does not adhere to all of the normative language of this specification then it is not a valid CloudEvent. With MQTT 3.1.1, the content mode is always structured and the message payload MUST use the JSON event format .","title":"3. MQTT PUBLISH Message Mapping"},{"location":"bindings/mqtt-protocol-binding/#31-binary-content-mode","text":"The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort.","title":"3.1. Binary Content Mode"},{"location":"bindings/mqtt-protocol-binding/#311-mqtt-publish-content-type","text":"For the binary mode, the MQTT PUBLISH message's Content Type property MUST be mapped directly to the CloudEvents datacontenttype attribute.","title":"3.1.1. MQTT PUBLISH Content Type"},{"location":"bindings/mqtt-protocol-binding/#312-event-data-encoding","text":"The data byte-sequence MUST be used as the payload of the MQTT PUBLISH message.","title":"3.1.2. Event Data Encoding"},{"location":"bindings/mqtt-protocol-binding/#313-metadata-headers","text":"All other CloudEvents context attributes, including extensions, MUST be individually mapped to and from the User Property fields in the MQTT PUBLISH message. CloudEvents extensions that define their own attributes MAY define a secondary mapping to MQTT user properties or features for those attributes, especially if specific attributes need to align with MQTT features, or with other specifications that have explicit MQTT header bindings. However, they MUST also include the previously defined primary mapping.","title":"3.1.3. Metadata Headers"},{"location":"bindings/mqtt-protocol-binding/#3131-user-property-names","text":"CloudEvents attribute names MUST be used unchanged in each mapped User Property in the MQTT PUBLISH message.","title":"3.1.3.1 User Property Names"},{"location":"bindings/mqtt-protocol-binding/#3132-user-property-values","text":"The value for each MQTT PUBLISH User Property MUST be constructed from the respective CloudEvents attribute type's canonical string representation .","title":"3.1.3.2 User Property Values"},{"location":"bindings/mqtt-protocol-binding/#314-examples","text":"This example shows the binary mode mapping of an event into the MQTT 5.0 PUBLISH message. The CloudEvents datacontenttype attribute is mapped to the MQTT PUBLISH Content Type field; all other CloudEvents attributes are mapped to MQTT PUBLISH User Property fields. The Topic name is chosen by the MQTT client and not derived from the CloudEvents event data. Mind that Content Type here does refer to the event data content carried in the payload. ------------------ PUBLISH ------------------- Topic Name: mytopic Content Type: application/json; charset=utf-8 ------------- User Properties ---------------- specversion: 1.0 type: com.example.someevent time: 2018-04-05T03:56:24Z id: 1234-1234-1234 source: /mycontext/subcontext datacontenttype: application/json; charset=utf-8 .... further attributes ... ------------------ payload ------------------- { ... application data ... } -----------------------------------------------","title":"3.1.4 Examples"},{"location":"bindings/mqtt-protocol-binding/#32-structured-content-mode","text":"The structured content mode keeps event metadata and data together in the payload, allowing simple forwarding of the same event across multiple routing hops, and across multiple protocols. This is the only supported mode for MQTT 3.1.1","title":"3.2. Structured Content Mode"},{"location":"bindings/mqtt-protocol-binding/#321-mqtt-content-type","text":"For MQTT 5.0, the MQTT PUBLISH message's Content Type property MUST be set to the media type of an event format . For MQTT 3.1.1, the media type of the JSON event format is always implied: Example for the JSON format : content-type: application/cloudevents+json; charset=utf-8","title":"3.2.1. MQTT Content Type"},{"location":"bindings/mqtt-protocol-binding/#322-event-data-encoding","text":"The chosen event format defines how all attributes, and data , are represented. The event metadata and data MUST then be rendered in accordance with the event format specification and the resulting data becomes the MQTT PUBLISH payload.","title":"3.2.2. Event Data Encoding"},{"location":"bindings/mqtt-protocol-binding/#323-metadata-headers","text":"For MQTT 5.0, implementations MAY include the same MQTT PUBLISH User Properties as defined for the binary mode .","title":"3.2.3. Metadata Headers"},{"location":"bindings/mqtt-protocol-binding/#324-examples","text":"The first example shows a JSON event format encoded event with MQTT 5.0 ------------------ PUBLISH ------------------- Topic Name: mytopic Content Type: application/cloudevents+json; charset=utf-8 ------------------ payload ------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", \"time\" : 2018-04-05T03:56;24Z, \"id\" : 1234-1234-1234, \"source\" : \"/mycontext/subcontext\", \"datacontenttype\" : \"application/json; charset=utf-8\", ... further attributes omitted ... \"data\" : { ... application data ... } } ----------------------------------------------- For MQTT 3.1.1, the example looks nearly identical, but Content Type is absent because not yet supported in that version of the MQTT specification and therefore application/cloudevents+json is implied: ------------------ PUBLISH ------------------- Topic Name: mytopic ------------------ payload ------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", \"time\" : 2018-04-05T03:56;24Z, \"id\" : 1234-1234-1234, \"source\" : \"/mycontext/subcontext\", \"datacontenttype\" : \"application/json; charset=utf-8\", ... further attributes omitted ... \"data\" : { ... application data ... } } -----------------------------------------------","title":"3.2.4. Examples"},{"location":"bindings/mqtt-protocol-binding/#4-references","text":"MQTT 3.1.1 MQTT Version 3.1.1 MQTT 5.0 MQTT Version 5.0 RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format","title":"4. References"},{"location":"bindings/nats-protocol-binding/","text":"NATS Protocol Binding for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The NATS Protocol Binding for CloudEvents defines how events are mapped to NATS messages . Table of Contents \u00b6 Introduction 1.1 Conformance 1.2 Relation to NATS 1.3 Content Modes 1.4 Event Formats 1.5 Security Use of CloudEvents Attributes 2.1 datacontenttype Attribute 2.2 data NATS Message Mapping 3.1 Binary Content Mode 3.2 Structured Content Mode References 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in the NATS protocol as client produced and consumed messages. 1.1 Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2 Relation to NATS \u00b6 This specification does not prescribe rules constraining transfer or settlement of event messages with NATS; it solely defines how CloudEvents are expressed in the NATS protocol as client messages that are produced and consumed . 1.3 Content Modes \u00b6 This specification defines two content modes for transferring events: binary and structured . In the binary content mode, event metadata attributes are placed in message headers and the event data are placed in the NATS message payload. Binary mode is supported as of NATS 2.2 , which introduced message headers. In the structured content mode, event metadata attributes and event data are placed into the NATS message payload using an event format . 1.4 Event Formats \u00b6 Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification MUST support the JSON event format . 1.5 Security \u00b6 This specification does not introduce any new security features for NATS, or mandate specific existing features to be used. 2. Use of CloudEvents Attributes \u00b6 This specification does not further define any of the CloudEvents event attributes. 2.1 datacontenttype Attribute \u00b6 The datacontenttype attribute is assumed to contain a media-type expression compliant with RFC2046 . 2.2 data \u00b6 data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into NATS as defined in this specification, core NATS provides data available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text. 3. NATS Message Mapping \u00b6 The content mode is chosen by the sender of the event, which is either the requesting or the responding party. Gestures that might allow solicitation of events using a particular mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two modes using two conditions: If the server is a version earlier than NATS 2.2, the content mode is always structured . If the server is version 2.2 or above and the Content-Type header of application/cloudevents is present, then the message is in structured mode, otherwise it is using binary mode. If the content mode is structured then the NATS message payload MUST be the JSON event format serialized as specified by the UTF-8 encoded JSON text for use in NATS. 3.1 Binary Content Mode \u00b6 The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort. 3.1.1 Event Data Encoding \u00b6 The data byte-sequence is used as the message body. 3.1.2 Metadata Headers \u00b6 All CloudEvents attributes, including extensions, MUST be individually mapped to and from distinct NATS message header. CloudEvents extensions that define their own attributes MAY define a secondary mapping to NATS headers for those attributes, especially if specific attributes need to align with NATS features or with other specifications that have explicit NATS header bindings. Note that these attributes MUST also still appear in the NATS message as NATS headers with the ce- prefix as noted in NATS Header Names . 3.1.3.1 NATS Header Names \u00b6 Except where noted, all CloudEvents context attributes, including extensions, MUST be mapped to NATS headers with the same name as the attribute name but prefixed with ce- . Examples: * `time` maps to `ce-time` * `id` maps to `ce-id` * `specversion` maps to `ce-specversion` * `datacontenttype` maps to `ce-datacontenttype` Note: per the NATS design specification, header names are case-insensitive. 3.1.3.2 NATS Header Values \u00b6 The value for each NATS header is constructed from the respective attribute type's canonical string representation . Some CloudEvents metadata attributes can contain arbitrary UTF-8 string content, and per RFC7230, section 3 , NATS headers MUST only use printable characters from the US-ASCII character set, and are terminated by a CRLF sequence with OPTIONAL whitespace around the header value. When encoding a CloudEvent as an NATS message, string values represented as NATS header values MUST be percent-encoded as described below. This is compatible with RFC3986, section 2.1 but is more specific about what needs encoding. The resulting string SHOULD NOT be further encoded. (Rationale: quoted string escaping is unnecessary when every space and double-quote character is already percent-encoded.) When decoding an NATS message into a CloudEvent, any NATS header value MUST first be unescaped with respect to double-quoted strings, as described in RFC7230, section 3.2.6 . A single round of percent-decoding MUST then be performed as described below. NATS headers for CloudEvent attribute values do not support parenthetical comments, so the initial unescaping only needs to handle double-quoted values, including processing backslash escapes within double-quoted values. Header values produced via the percent-encoding described here will never include double-quoted values, but they MUST be supported when receiving events, for compatibility with older versions of this specification which did not require double-quote and space characters to be percent-encoded. Percent encoding is performed by considering each Unicode character within the attribute's canonical string representation. Any character represented in memory as a Unicode surrogate pair MUST be treated as a single Unicode character. The following characters MUST be percent-encoded: Space (U+0020) Double-quote (U+0022) Percent (U+0025) Any characters outside the printable ASCII range of U+0021-U+007E inclusive Attribute values are already constrained to prohibit characters in the range U+0000-U+001F inclusive and U+007F-U+009F inclusive; however for simplicity and to account for potential future changes, it is RECOMMENDED that any NATS header encoding implementation treats such characters as requiring percent-encoding. Space and double-quote are encoded to avoid requiring any further quoting. Percent is encoded to avoid ambiguity with percent-encoding itself. Steps to encode a Unicode character: Encode the character using UTF-8, to obtain a byte sequence. Encode each byte within the sequence as %xy where x is a hexadecimal representation of the most significant 4 bits of the byte, and y is a hexadecimal representation of the least significant 4 bits of the byte. Percent-encoding SHOULD be performed using upper-case for values A-F, but decoding MUST accept lower-case values. When performing percent-decoding (when decoding an NATS message to a CloudEvent), values that have been unncessarily percent-encoded MUST be accepted, but encoded byte sequences which are invalid in UTF-8 MUST be rejected. (For example, \"%C0%A0\" is an overlong encoding of U+0020, and MUST be rejected.) Example: a header value of \"Euro \u20ac \ud83d\ude00\" SHOULD be encoded as follows: The characters, 'E', 'u', 'r', 'o' do not require encoding Space, the Euro symbol, and the grinning face emoji require encoding. They are characters U+0020, U+20AC and U+1F600 respectively. The encoded NATS header value is therefore \"Euro%20%E2%82%AC%20%F0%9F%98%80\" where \"%20\" is the encoded form of space, \"%E2%82%AC\" is the encoded form of the Euro symbol, and \"%F0%9F%98%80\" is the encoded form of the grinning face emoji. 3.1.4 Example \u00b6 This example shows the binary mode mapping of an event in client messages that are produced and consumed . ------------------ Message ------------------- Subject: mySubject ------------------ header -------------------- ce-specversion: 1.0 ce-type: com.example.someevent ce-time: 2018-04-05T03:56:24Z ce-id: 1234-1234-1234 ce-source: /mycontext/subcontext ce-datacontenttype: application/json ------------------ payload ------------------- { ... application data ... } ----------------------------------------------- 3.2 Structured Content Mode \u00b6 The chosen event format defines how all attributes, including the payload, are represented. The event metadata and data MUST then be rendered in accordance with the event format specification and the resulting data becomes the payload. 3.2.1 Example \u00b6 This example shows a JSON event format encoded event in client messages that are produced and consumed . ------------------ Message ------------------- Subject: mySubject ------------------ payload ------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } ----------------------------------------------- 4. References \u00b6 NATS The NATS Messaging System NATS-PUB-PROTO The NATS protocol for messages published by a client NATS-MSG-PROTO The NATS protocol for messages received by a client RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format","title":"NATS"},{"location":"bindings/nats-protocol-binding/#nats-protocol-binding-for-cloudevents-version-103-wip","text":"","title":"NATS Protocol Binding for CloudEvents - Version 1.0.3-wip"},{"location":"bindings/nats-protocol-binding/#abstract","text":"The NATS Protocol Binding for CloudEvents defines how events are mapped to NATS messages .","title":"Abstract"},{"location":"bindings/nats-protocol-binding/#table-of-contents","text":"Introduction 1.1 Conformance 1.2 Relation to NATS 1.3 Content Modes 1.4 Event Formats 1.5 Security Use of CloudEvents Attributes 2.1 datacontenttype Attribute 2.2 data NATS Message Mapping 3.1 Binary Content Mode 3.2 Structured Content Mode References","title":"Table of Contents"},{"location":"bindings/nats-protocol-binding/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in the NATS protocol as client produced and consumed messages.","title":"1. Introduction"},{"location":"bindings/nats-protocol-binding/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1 Conformance"},{"location":"bindings/nats-protocol-binding/#12-relation-to-nats","text":"This specification does not prescribe rules constraining transfer or settlement of event messages with NATS; it solely defines how CloudEvents are expressed in the NATS protocol as client messages that are produced and consumed .","title":"1.2 Relation to NATS"},{"location":"bindings/nats-protocol-binding/#13-content-modes","text":"This specification defines two content modes for transferring events: binary and structured . In the binary content mode, event metadata attributes are placed in message headers and the event data are placed in the NATS message payload. Binary mode is supported as of NATS 2.2 , which introduced message headers. In the structured content mode, event metadata attributes and event data are placed into the NATS message payload using an event format .","title":"1.3 Content Modes"},{"location":"bindings/nats-protocol-binding/#14-event-formats","text":"Event formats, used with the structured content mode, define how an event is expressed in a particular data format. All implementations of this specification MUST support the JSON event format .","title":"1.4 Event Formats"},{"location":"bindings/nats-protocol-binding/#15-security","text":"This specification does not introduce any new security features for NATS, or mandate specific existing features to be used.","title":"1.5 Security"},{"location":"bindings/nats-protocol-binding/#2-use-of-cloudevents-attributes","text":"This specification does not further define any of the CloudEvents event attributes.","title":"2. Use of CloudEvents Attributes"},{"location":"bindings/nats-protocol-binding/#21-datacontenttype-attribute","text":"The datacontenttype attribute is assumed to contain a media-type expression compliant with RFC2046 .","title":"2.1 datacontenttype Attribute"},{"location":"bindings/nats-protocol-binding/#22-data","text":"data is assumed to contain opaque application data that is encoded as declared by the datacontenttype attribute. An application is free to hold the information in any in-memory representation of its choosing, but as the value is transposed into NATS as defined in this specification, core NATS provides data available as a sequence of bytes. For instance, if the declared datacontenttype is application/json;charset=utf-8 , the expectation is that the data value is made available as UTF-8 encoded JSON text.","title":"2.2 data"},{"location":"bindings/nats-protocol-binding/#3-nats-message-mapping","text":"The content mode is chosen by the sender of the event, which is either the requesting or the responding party. Gestures that might allow solicitation of events using a particular mode might be defined by an application, but are not defined here. The receiver of the event can distinguish between the two modes using two conditions: If the server is a version earlier than NATS 2.2, the content mode is always structured . If the server is version 2.2 or above and the Content-Type header of application/cloudevents is present, then the message is in structured mode, otherwise it is using binary mode. If the content mode is structured then the NATS message payload MUST be the JSON event format serialized as specified by the UTF-8 encoded JSON text for use in NATS.","title":"3. NATS Message Mapping"},{"location":"bindings/nats-protocol-binding/#31-binary-content-mode","text":"The binary content mode accommodates any shape of event data, and allows for efficient transfer and without transcoding effort.","title":"3.1 Binary Content Mode"},{"location":"bindings/nats-protocol-binding/#311-event-data-encoding","text":"The data byte-sequence is used as the message body.","title":"3.1.1 Event Data Encoding"},{"location":"bindings/nats-protocol-binding/#312-metadata-headers","text":"All CloudEvents attributes, including extensions, MUST be individually mapped to and from distinct NATS message header. CloudEvents extensions that define their own attributes MAY define a secondary mapping to NATS headers for those attributes, especially if specific attributes need to align with NATS features or with other specifications that have explicit NATS header bindings. Note that these attributes MUST also still appear in the NATS message as NATS headers with the ce- prefix as noted in NATS Header Names .","title":"3.1.2 Metadata Headers"},{"location":"bindings/nats-protocol-binding/#3131-nats-header-names","text":"Except where noted, all CloudEvents context attributes, including extensions, MUST be mapped to NATS headers with the same name as the attribute name but prefixed with ce- . Examples: * `time` maps to `ce-time` * `id` maps to `ce-id` * `specversion` maps to `ce-specversion` * `datacontenttype` maps to `ce-datacontenttype` Note: per the NATS design specification, header names are case-insensitive.","title":"3.1.3.1 NATS Header Names"},{"location":"bindings/nats-protocol-binding/#3132-nats-header-values","text":"The value for each NATS header is constructed from the respective attribute type's canonical string representation . Some CloudEvents metadata attributes can contain arbitrary UTF-8 string content, and per RFC7230, section 3 , NATS headers MUST only use printable characters from the US-ASCII character set, and are terminated by a CRLF sequence with OPTIONAL whitespace around the header value. When encoding a CloudEvent as an NATS message, string values represented as NATS header values MUST be percent-encoded as described below. This is compatible with RFC3986, section 2.1 but is more specific about what needs encoding. The resulting string SHOULD NOT be further encoded. (Rationale: quoted string escaping is unnecessary when every space and double-quote character is already percent-encoded.) When decoding an NATS message into a CloudEvent, any NATS header value MUST first be unescaped with respect to double-quoted strings, as described in RFC7230, section 3.2.6 . A single round of percent-decoding MUST then be performed as described below. NATS headers for CloudEvent attribute values do not support parenthetical comments, so the initial unescaping only needs to handle double-quoted values, including processing backslash escapes within double-quoted values. Header values produced via the percent-encoding described here will never include double-quoted values, but they MUST be supported when receiving events, for compatibility with older versions of this specification which did not require double-quote and space characters to be percent-encoded. Percent encoding is performed by considering each Unicode character within the attribute's canonical string representation. Any character represented in memory as a Unicode surrogate pair MUST be treated as a single Unicode character. The following characters MUST be percent-encoded: Space (U+0020) Double-quote (U+0022) Percent (U+0025) Any characters outside the printable ASCII range of U+0021-U+007E inclusive Attribute values are already constrained to prohibit characters in the range U+0000-U+001F inclusive and U+007F-U+009F inclusive; however for simplicity and to account for potential future changes, it is RECOMMENDED that any NATS header encoding implementation treats such characters as requiring percent-encoding. Space and double-quote are encoded to avoid requiring any further quoting. Percent is encoded to avoid ambiguity with percent-encoding itself. Steps to encode a Unicode character: Encode the character using UTF-8, to obtain a byte sequence. Encode each byte within the sequence as %xy where x is a hexadecimal representation of the most significant 4 bits of the byte, and y is a hexadecimal representation of the least significant 4 bits of the byte. Percent-encoding SHOULD be performed using upper-case for values A-F, but decoding MUST accept lower-case values. When performing percent-decoding (when decoding an NATS message to a CloudEvent), values that have been unncessarily percent-encoded MUST be accepted, but encoded byte sequences which are invalid in UTF-8 MUST be rejected. (For example, \"%C0%A0\" is an overlong encoding of U+0020, and MUST be rejected.) Example: a header value of \"Euro \u20ac \ud83d\ude00\" SHOULD be encoded as follows: The characters, 'E', 'u', 'r', 'o' do not require encoding Space, the Euro symbol, and the grinning face emoji require encoding. They are characters U+0020, U+20AC and U+1F600 respectively. The encoded NATS header value is therefore \"Euro%20%E2%82%AC%20%F0%9F%98%80\" where \"%20\" is the encoded form of space, \"%E2%82%AC\" is the encoded form of the Euro symbol, and \"%F0%9F%98%80\" is the encoded form of the grinning face emoji.","title":"3.1.3.2 NATS Header Values"},{"location":"bindings/nats-protocol-binding/#314-example","text":"This example shows the binary mode mapping of an event in client messages that are produced and consumed . ------------------ Message ------------------- Subject: mySubject ------------------ header -------------------- ce-specversion: 1.0 ce-type: com.example.someevent ce-time: 2018-04-05T03:56:24Z ce-id: 1234-1234-1234 ce-source: /mycontext/subcontext ce-datacontenttype: application/json ------------------ payload ------------------- { ... application data ... } -----------------------------------------------","title":"3.1.4 Example"},{"location":"bindings/nats-protocol-binding/#32-structured-content-mode","text":"The chosen event format defines how all attributes, including the payload, are represented. The event metadata and data MUST then be rendered in accordance with the event format specification and the resulting data becomes the payload.","title":"3.2 Structured Content Mode"},{"location":"bindings/nats-protocol-binding/#321-example","text":"This example shows a JSON event format encoded event in client messages that are produced and consumed . ------------------ Message ------------------- Subject: mySubject ------------------ payload ------------------- { \"specversion\" : \"1.0\", \"type\" : \"com.example.someevent\", ... further attributes omitted ... \"data\" : { ... application data ... } } -----------------------------------------------","title":"3.2.1 Example"},{"location":"bindings/nats-protocol-binding/#4-references","text":"NATS The NATS Messaging System NATS-PUB-PROTO The NATS protocol for messages published by a client NATS-MSG-PROTO The NATS protocol for messages received by a client RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC3629 UTF-8, a transformation format of ISO 10646 RFC7159 The JavaScript Object Notation (JSON) Data Interchange Format","title":"4. References"},{"location":"bindings/websockets-protocol-binding/","text":"WebSockets Protocol Binding for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The WebSockets Protocol Binding for CloudEvents defines how to establish and use full-duplex CloudEvents streams using WebSockets . Table of Contents \u00b6 Introduction 1.1. Conformance 1.2. Relation to WebSockets 1.3. Content Modes 1.4. Handshake 1.5. CloudEvents Subprotocols 1.6. Security Use of CloudEvents Attributes WebSocket Message Mapping 3.1. Event Data Encoding References 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in WebSockets , in order to establish and use a full-duplex CloudEvents stream. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2. Relation to WebSockets \u00b6 This specification does not prescribe rules constraining the use or handling of specific HTTP target resource to establish the WebSocket upgrade. This specification prescribes rules constraining the WebSockets Subprotocols in order to reach agreement on the event format to use when sending and receiving serialized CloudEvents. Events are sent as WebSocket messages, serialized using an event format . 1.3. Content Modes \u00b6 The CloudEvents specification defines two content modes for transferring events: structured and binary . Because of the nature of WebSockets messages, this specification supports only structured data mode, hence event metadata attributes and event data are sent in WebSocket messages using an event format . The event format to be used in a full-duplex WebSocket stream is agreed during the handshake and cannot change during the same stream. 1.4. Handshake \u00b6 The opening handshake MUST follow the set of rules specified in the RFC6455 . In addition, the client MUST include, in the opening handshake, the Sec-WebSocket-Protocol header . The client MUST include in this header one or more CloudEvents subprotocols , depending on the subprotocols the client supports. The server MUST reply with the chosen CloudEvents subprotocol using the Sec-WebSocket-Protocol header. If the server doesn't support any of the subprotocols included in the opening handshake, the server response SHOULD NOT contain any Sec-WebSocket-Protocol header. 1.4.1 Example \u00b6 Example client request to begin the opening handshake: GET /events HTTP/1.1 Host: server.example.com Upgrade: websocket Connection: Upgrade Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw== Sec-WebSocket-Protocol: cloudevents.json, cloudevents.avro Sec-WebSocket-Version: 13 Origin: http://example.com Example server response: HTTP/1.1 101 Switching Protocols Upgrade: websocket Connection: Upgrade Sec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk= Sec-WebSocket-Protocol: cloudevents.json 1.5. CloudEvents Subprotocols \u00b6 This specification maps a WebSocket subprotocol to each defined event format in the CloudEvents specification, following the guidelines discussed in the RFC6455 . For each subprotocol, senders MUST use the specified WebSocket frame type: Subprotocol Event format Frame Type cloudevents.json JSON event format Text cloudevents.avro AVRO event format Binary cloudevents.proto Protobuf event format Binary All implementations of this specification MUST support the JSON event format . This specification does not support the JSON batch format . 1.6. Security \u00b6 This specification does not introduce any new security features for WebSockets, or mandate specific existing features to be used. 2. Use of CloudEvents Attributes \u00b6 This specification does not further define any of the CloudEvents event attributes. 3. WebSocket Message Mapping \u00b6 Because the content mode is always structured , a WebSocket message just contains a CloudEvent serialized using the agreed event format. 3.1 Event Data Encoding \u00b6 The chosen event format defines how all attributes, including the payload, are represented. The event metadata and data MUST be rendered in accordance with the event format specification and the resulting data becomes the payload. 4. References \u00b6 RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC6455 The WebSocket Protocol","title":"WebSockets"},{"location":"bindings/websockets-protocol-binding/#websockets-protocol-binding-for-cloudevents-version-103-wip","text":"","title":"WebSockets Protocol Binding for CloudEvents - Version 1.0.3-wip"},{"location":"bindings/websockets-protocol-binding/#abstract","text":"The WebSockets Protocol Binding for CloudEvents defines how to establish and use full-duplex CloudEvents streams using WebSockets .","title":"Abstract"},{"location":"bindings/websockets-protocol-binding/#table-of-contents","text":"Introduction 1.1. Conformance 1.2. Relation to WebSockets 1.3. Content Modes 1.4. Handshake 1.5. CloudEvents Subprotocols 1.6. Security Use of CloudEvents Attributes WebSocket Message Mapping 3.1. Event Data Encoding References","title":"Table of Contents"},{"location":"bindings/websockets-protocol-binding/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be used in WebSockets , in order to establish and use a full-duplex CloudEvents stream.","title":"1. Introduction"},{"location":"bindings/websockets-protocol-binding/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"bindings/websockets-protocol-binding/#12-relation-to-websockets","text":"This specification does not prescribe rules constraining the use or handling of specific HTTP target resource to establish the WebSocket upgrade. This specification prescribes rules constraining the WebSockets Subprotocols in order to reach agreement on the event format to use when sending and receiving serialized CloudEvents. Events are sent as WebSocket messages, serialized using an event format .","title":"1.2. Relation to WebSockets"},{"location":"bindings/websockets-protocol-binding/#13-content-modes","text":"The CloudEvents specification defines two content modes for transferring events: structured and binary . Because of the nature of WebSockets messages, this specification supports only structured data mode, hence event metadata attributes and event data are sent in WebSocket messages using an event format . The event format to be used in a full-duplex WebSocket stream is agreed during the handshake and cannot change during the same stream.","title":"1.3. Content Modes"},{"location":"bindings/websockets-protocol-binding/#14-handshake","text":"The opening handshake MUST follow the set of rules specified in the RFC6455 . In addition, the client MUST include, in the opening handshake, the Sec-WebSocket-Protocol header . The client MUST include in this header one or more CloudEvents subprotocols , depending on the subprotocols the client supports. The server MUST reply with the chosen CloudEvents subprotocol using the Sec-WebSocket-Protocol header. If the server doesn't support any of the subprotocols included in the opening handshake, the server response SHOULD NOT contain any Sec-WebSocket-Protocol header.","title":"1.4. Handshake"},{"location":"bindings/websockets-protocol-binding/#141-example","text":"Example client request to begin the opening handshake: GET /events HTTP/1.1 Host: server.example.com Upgrade: websocket Connection: Upgrade Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw== Sec-WebSocket-Protocol: cloudevents.json, cloudevents.avro Sec-WebSocket-Version: 13 Origin: http://example.com Example server response: HTTP/1.1 101 Switching Protocols Upgrade: websocket Connection: Upgrade Sec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk= Sec-WebSocket-Protocol: cloudevents.json","title":"1.4.1 Example"},{"location":"bindings/websockets-protocol-binding/#15-cloudevents-subprotocols","text":"This specification maps a WebSocket subprotocol to each defined event format in the CloudEvents specification, following the guidelines discussed in the RFC6455 . For each subprotocol, senders MUST use the specified WebSocket frame type: Subprotocol Event format Frame Type cloudevents.json JSON event format Text cloudevents.avro AVRO event format Binary cloudevents.proto Protobuf event format Binary All implementations of this specification MUST support the JSON event format . This specification does not support the JSON batch format .","title":"1.5. CloudEvents Subprotocols"},{"location":"bindings/websockets-protocol-binding/#16-security","text":"This specification does not introduce any new security features for WebSockets, or mandate specific existing features to be used.","title":"1.6. Security"},{"location":"bindings/websockets-protocol-binding/#2-use-of-cloudevents-attributes","text":"This specification does not further define any of the CloudEvents event attributes.","title":"2. Use of CloudEvents Attributes"},{"location":"bindings/websockets-protocol-binding/#3-websocket-message-mapping","text":"Because the content mode is always structured , a WebSocket message just contains a CloudEvent serialized using the agreed event format.","title":"3. WebSocket Message Mapping"},{"location":"bindings/websockets-protocol-binding/#31-event-data-encoding","text":"The chosen event format defines how all attributes, including the payload, are represented. The event metadata and data MUST be rendered in accordance with the event format specification and the resulting data becomes the payload.","title":"3.1 Event Data Encoding"},{"location":"bindings/websockets-protocol-binding/#4-references","text":"RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC6455 The WebSocket Protocol","title":"4. References"},{"location":"extensions/","text":"CloudEvents \u6269\u5c55\u5c5e\u6027 \u00b6 CloudEvents \u89c4\u8303 \u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7528\u6765\u5c06\u901a\u7528\u4e8b\u4ef6\u8f6c\u6362\u4e3a CloudEvent \u7684\u5143\u6570\u636e\u5c5e\u6027\u3002\u8be5\u6587\u6863\u4e2d\u6307\u5b9a\u7684\u5c5e\u6027\u5217\u8868\u4ee3\u8868\u4e86\u4f5c\u8005\u8ba4\u4e3a\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6700\u53ef\u80fd\u7528\u5230\u7684\u5c5e\u6027\u6700\u5c0f\u96c6\u3002 \u5728\u672c\u6587\u6863\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\u3002\u8fd9\u4e9b\u5c5e\u6027\u5c3d\u7ba1\u4e0d\u50cf CloudEvents \u89c4\u8303 \u4e2d\u7684\u5c5e\u6027\u90a3\u6837\u5e38\u89c1\uff0c\u4f46\u7cbe\u51c6\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\uff0c\u4ecd\u80fd\u4e3a\u63d0\u9ad8\u4e92\u64cd\u4f5c\u6027\u7684\u7a0b\u5ea6\u63d0\u4f9b\u5e2e\u52a9\u3002\u8fd9\u79cd\u989d\u5916\u5c5e\u6027\u7684\u673a\u5236\uff0c\u540c\u6837\u5141\u8bb8\u65b0\u5c5e\u6027\u5728\u88ab\u7eb3\u5165\u5230 CloudEvents \u89c4\u8303 \u4e4b\u524d\uff0c\u80fd\u4ee5\u8bd5\u9a8c\u7684\u5f62\u5f0f\u88ab\u5b9a\u4e49\u3002 CloudEvents \u89c4\u8303 \u7684\u5b9e\u73b0\u4e2d\u4e0d\u4f1a\u9650\u5236\u5fc5\u987b\u4f7f\u7528\u672c\u6587\u6863\u4e2d\u63d0\u5230\u7684\u90a3\u4e9b\u6269\u5c55\u5c5e\u6027\u3002\u672c\u6587\u6863\u4e2d\u5b9a\u4e49\u7684\u6269\u5c55\u5c5e\u6027\u5e76\u4e0d\u662f\u6b63\u5f0f\u7684\u3001\u7a33\u5b9a\u7684\uff0c\u76f8\u53cd\u5b83\u4eec\u53ef\u80fd\u968f\u65f6\u88ab\u4fee\u6539\uff0c\u751a\u81f3\u5220\u9664\u3002\u56e0\u6b64\uff0c\u5f15\u5165\u672c\u6587\u6863\u4e2d\u7684\u8fd9\u4e9b\u5c5e\u6027\u5e76\u4e0d\u9700\u8981\u6ee1\u8db3\u50cf CloudEvents \u89c4\u8303 \u4e2d\u5176\u5b83\u5c5e\u6027\u90a3\u6837\u7684\u6210\u719f\u5ea6\u548c\u6d41\u884c\u6027\u3002\u8981\u60f3\u5b9a\u4e49\u4e00\u4e2a\u6536\u5f55\u5728\u672c\u6587\u6863\u4e2d\u7684\u6269\u5c55\u5c5e\u6027\uff0c\u9664\u4e86\u6b63\u5e38\u7684 PR \u68c0\u67e5\u6d41\u7a0b\u5916\uff0c\u8fd8\u9700\u8981\u81f3\u5c11\u4e24\u540d \u6709\u6295\u7968\u6743\u7684\u6210\u5458 \u5728 PR \u4e2d\u7559\u8a00\u652f\u6301\u3002\u5982\u679c\u8fd9\u4e2a PR \u7684\u4f5c\u8005\u672c\u8eab\u5c31\u5177\u6709\u6295\u7968\u6743\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u53e6\u4e00\u540d\u6210\u5458\u6295\u7968\u652f\u6301\u5373\u53ef\u3002 \u4f7f\u7528 \u00b6 \u4efb\u4f55\u5bf9\u6269\u5c55\u5c5e\u6027\u7684\u652f\u6301\u90fd\u4e0d\u662f\u5fc5\u8981\u7684\u3002\u5f53\u4e00\u4e2a\u6269\u5c55\u5c5e\u6027\u4f7f\u7528\u4e86 RFC 2199 \u4e2d\u7684\u5173\u952e\u8bcd\uff08\u5982 MUST\u3001SHOULD\u3001MAY \u7b49\uff09\u65f6\uff0c\u5bf9\u8fd9\u4e9b\u5173\u952e\u8bcd\u7684\u4f7f\u7528\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u4e86\u8fd9\u4e2a\u6269\u5c55\u5c5e\u6027\u7684\u4e8b\u4ef6\u3002 \u6269\u5c55\u5c5e\u6027\u5c3d\u7ba1\u6ca1\u6709\u5b9a\u4e49\u5728 CloudEvents \u7684\u6838\u5fc3\u89c4\u8303\u4e2d\uff0c\u5b83\u4eec\u540c\u6837\u5fc5\u987b\u9075\u5b88\u683c\u5f0f\u548c\u534f\u8bae\u7ed1\u5b9a\u89c4\u8303\u4e2d\u5b9a\u4e49\u7684\u5e8f\u5217\u5316\u89c4\u5219\u3002\u8be6\u60c5\u8bf7\u89c1 \u6269\u5c55\u4e0a\u4e0b\u6587\u5c5e\u6027 \u73b0\u6709\u7684\u6269\u5c55 \u00b6 Dataref (Claim Check Pattern) Distributed Tracing Partitioning Sampling Sequence","title":"\u6269\u5c55\u5c5e\u6027"},{"location":"extensions/#cloudevents","text":"CloudEvents \u89c4\u8303 \u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7528\u6765\u5c06\u901a\u7528\u4e8b\u4ef6\u8f6c\u6362\u4e3a CloudEvent \u7684\u5143\u6570\u636e\u5c5e\u6027\u3002\u8be5\u6587\u6863\u4e2d\u6307\u5b9a\u7684\u5c5e\u6027\u5217\u8868\u4ee3\u8868\u4e86\u4f5c\u8005\u8ba4\u4e3a\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u6700\u53ef\u80fd\u7528\u5230\u7684\u5c5e\u6027\u6700\u5c0f\u96c6\u3002 \u5728\u672c\u6587\u6863\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\u3002\u8fd9\u4e9b\u5c5e\u6027\u5c3d\u7ba1\u4e0d\u50cf CloudEvents \u89c4\u8303 \u4e2d\u7684\u5c5e\u6027\u90a3\u6837\u5e38\u89c1\uff0c\u4f46\u7cbe\u51c6\u4f7f\u7528\u8fd9\u4e9b\u5c5e\u6027\uff0c\u4ecd\u80fd\u4e3a\u63d0\u9ad8\u4e92\u64cd\u4f5c\u6027\u7684\u7a0b\u5ea6\u63d0\u4f9b\u5e2e\u52a9\u3002\u8fd9\u79cd\u989d\u5916\u5c5e\u6027\u7684\u673a\u5236\uff0c\u540c\u6837\u5141\u8bb8\u65b0\u5c5e\u6027\u5728\u88ab\u7eb3\u5165\u5230 CloudEvents \u89c4\u8303 \u4e4b\u524d\uff0c\u80fd\u4ee5\u8bd5\u9a8c\u7684\u5f62\u5f0f\u88ab\u5b9a\u4e49\u3002 CloudEvents \u89c4\u8303 \u7684\u5b9e\u73b0\u4e2d\u4e0d\u4f1a\u9650\u5236\u5fc5\u987b\u4f7f\u7528\u672c\u6587\u6863\u4e2d\u63d0\u5230\u7684\u90a3\u4e9b\u6269\u5c55\u5c5e\u6027\u3002\u672c\u6587\u6863\u4e2d\u5b9a\u4e49\u7684\u6269\u5c55\u5c5e\u6027\u5e76\u4e0d\u662f\u6b63\u5f0f\u7684\u3001\u7a33\u5b9a\u7684\uff0c\u76f8\u53cd\u5b83\u4eec\u53ef\u80fd\u968f\u65f6\u88ab\u4fee\u6539\uff0c\u751a\u81f3\u5220\u9664\u3002\u56e0\u6b64\uff0c\u5f15\u5165\u672c\u6587\u6863\u4e2d\u7684\u8fd9\u4e9b\u5c5e\u6027\u5e76\u4e0d\u9700\u8981\u6ee1\u8db3\u50cf CloudEvents \u89c4\u8303 \u4e2d\u5176\u5b83\u5c5e\u6027\u90a3\u6837\u7684\u6210\u719f\u5ea6\u548c\u6d41\u884c\u6027\u3002\u8981\u60f3\u5b9a\u4e49\u4e00\u4e2a\u6536\u5f55\u5728\u672c\u6587\u6863\u4e2d\u7684\u6269\u5c55\u5c5e\u6027\uff0c\u9664\u4e86\u6b63\u5e38\u7684 PR \u68c0\u67e5\u6d41\u7a0b\u5916\uff0c\u8fd8\u9700\u8981\u81f3\u5c11\u4e24\u540d \u6709\u6295\u7968\u6743\u7684\u6210\u5458 \u5728 PR \u4e2d\u7559\u8a00\u652f\u6301\u3002\u5982\u679c\u8fd9\u4e2a PR \u7684\u4f5c\u8005\u672c\u8eab\u5c31\u5177\u6709\u6295\u7968\u6743\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u53e6\u4e00\u540d\u6210\u5458\u6295\u7968\u652f\u6301\u5373\u53ef\u3002","title":"CloudEvents \u6269\u5c55\u5c5e\u6027"},{"location":"extensions/#_1","text":"\u4efb\u4f55\u5bf9\u6269\u5c55\u5c5e\u6027\u7684\u652f\u6301\u90fd\u4e0d\u662f\u5fc5\u8981\u7684\u3002\u5f53\u4e00\u4e2a\u6269\u5c55\u5c5e\u6027\u4f7f\u7528\u4e86 RFC 2199 \u4e2d\u7684\u5173\u952e\u8bcd\uff08\u5982 MUST\u3001SHOULD\u3001MAY \u7b49\uff09\u65f6\uff0c\u5bf9\u8fd9\u4e9b\u5173\u952e\u8bcd\u7684\u4f7f\u7528\u4ec5\u9002\u7528\u4e8e\u4f7f\u7528\u4e86\u8fd9\u4e2a\u6269\u5c55\u5c5e\u6027\u7684\u4e8b\u4ef6\u3002 \u6269\u5c55\u5c5e\u6027\u5c3d\u7ba1\u6ca1\u6709\u5b9a\u4e49\u5728 CloudEvents \u7684\u6838\u5fc3\u89c4\u8303\u4e2d\uff0c\u5b83\u4eec\u540c\u6837\u5fc5\u987b\u9075\u5b88\u683c\u5f0f\u548c\u534f\u8bae\u7ed1\u5b9a\u89c4\u8303\u4e2d\u5b9a\u4e49\u7684\u5e8f\u5217\u5316\u89c4\u5219\u3002\u8be6\u60c5\u8bf7\u89c1 \u6269\u5c55\u4e0a\u4e0b\u6587\u5c5e\u6027","title":"\u4f7f\u7528"},{"location":"extensions/#_2","text":"Dataref (Claim Check Pattern) Distributed Tracing Partitioning Sampling Sequence","title":"\u73b0\u6709\u7684\u6269\u5c55"},{"location":"extensions/dataref/","text":"Dataref (Claim Check Pattern) \u00b6 As defined by the term Data , CloudEvents MAY include domain-specific information about the occurrence. When present, this information will be encapsulated within data . The dataref attribute MAY be used to reference another location where this information is stored. The information, whether accessed via data or dataref MUST be identical. Both data and the dataref attribute MAY exist at the same time. A middleware MAY drop data when the dataref attribute exists, it MAY add the dataref attribute and drop the data attribute, or it MAY add the data attribute by using the dataref attribute. Attributes \u00b6 dataref \u00b6 Type: URI-reference Description: A reference to a location where the event payload is stored. The location MAY not be accessible without further information (e.g. a pre-shared secret). Known as the \"Claim Check Pattern\", this attribute MAY be used for a variety of purposes, including: If the Data is too large to be included in the message, the data is not present, and the consumer can retrieve it using this attribute. If the consumer wants to verify that the Data has not been tampered with, it can retrieve it from a trusted source using this attribute. If the Data MUST only be viewed by trusted consumers (e.g. personally identifiable information), only a trusted consumer can retrieve it using this attribute and a pre-shared secret. If this attribute is used, the information SHOULD be accessible long enough for all consumers to retrieve it, but MAY not be stored for an extended period of time. Constraints: OPTIONAL Examples \u00b6 The following example shows a CloudEvent in which the event producer has included both data and dataref (serialized as JSON): { \"specversion\" : \"1.0\" , \"type\" : \"com.github.pull_request.opened\" , \"source\" : \"https://github.com/cloudevents/spec/pull/123\" , \"id\" : \"A234-1234-1234\" , \"datacontenttype\" : \"text/xml\" , \"data\" : \"<much wow=\\\"xml\\\"/>\" , \"dataref\" : \"https://github.com/cloudevents/spec/pull/123/events/A234-1234-1234.xml\" } The following example shows a CloudEvent in which a middleware has replaced the data with a dataref (serialized as JSON): { \"specversion\" : \"1.0\" , \"type\" : \"com.github.pull_request.opened\" , \"source\" : \"https://github.com/cloudevents/spec/pull/123\" , \"id\" : \"A234-1234-1234\" , \"datacontenttype\" : \"text/xml\" , \"dataref\" : \"https://tenant123.middleware.com/events/data/A234-1234-1234.xml\" }","title":"Dataref"},{"location":"extensions/dataref/#dataref-claim-check-pattern","text":"As defined by the term Data , CloudEvents MAY include domain-specific information about the occurrence. When present, this information will be encapsulated within data . The dataref attribute MAY be used to reference another location where this information is stored. The information, whether accessed via data or dataref MUST be identical. Both data and the dataref attribute MAY exist at the same time. A middleware MAY drop data when the dataref attribute exists, it MAY add the dataref attribute and drop the data attribute, or it MAY add the data attribute by using the dataref attribute.","title":"Dataref (Claim Check Pattern)"},{"location":"extensions/dataref/#attributes","text":"","title":"Attributes"},{"location":"extensions/dataref/#dataref","text":"Type: URI-reference Description: A reference to a location where the event payload is stored. The location MAY not be accessible without further information (e.g. a pre-shared secret). Known as the \"Claim Check Pattern\", this attribute MAY be used for a variety of purposes, including: If the Data is too large to be included in the message, the data is not present, and the consumer can retrieve it using this attribute. If the consumer wants to verify that the Data has not been tampered with, it can retrieve it from a trusted source using this attribute. If the Data MUST only be viewed by trusted consumers (e.g. personally identifiable information), only a trusted consumer can retrieve it using this attribute and a pre-shared secret. If this attribute is used, the information SHOULD be accessible long enough for all consumers to retrieve it, but MAY not be stored for an extended period of time. Constraints: OPTIONAL","title":"dataref"},{"location":"extensions/dataref/#examples","text":"The following example shows a CloudEvent in which the event producer has included both data and dataref (serialized as JSON): { \"specversion\" : \"1.0\" , \"type\" : \"com.github.pull_request.opened\" , \"source\" : \"https://github.com/cloudevents/spec/pull/123\" , \"id\" : \"A234-1234-1234\" , \"datacontenttype\" : \"text/xml\" , \"data\" : \"<much wow=\\\"xml\\\"/>\" , \"dataref\" : \"https://github.com/cloudevents/spec/pull/123/events/A234-1234-1234.xml\" } The following example shows a CloudEvent in which a middleware has replaced the data with a dataref (serialized as JSON): { \"specversion\" : \"1.0\" , \"type\" : \"com.github.pull_request.opened\" , \"source\" : \"https://github.com/cloudevents/spec/pull/123\" , \"id\" : \"A234-1234-1234\" , \"datacontenttype\" : \"text/xml\" , \"dataref\" : \"https://tenant123.middleware.com/events/data/A234-1234-1234.xml\" }","title":"Examples"},{"location":"extensions/distributed-tracing/","text":"Distributed Tracing extension \u00b6 This extension embeds context from Distributed Tracing so that distributed systems can include traces that span an event-driven system. This extension is meant to contain historical data of the parent trace, in order to diagnose eventual failures of the system through tracing platforms like Jaeger, Zipkin, etc. Attributes \u00b6 traceparent \u00b6 Type: String Description: Contains a version, trace ID, span ID, and trace options as defined in section 3.2 Constraints REQUIRED tracestate \u00b6 Type: String Description: a comma-delimited list of key-value pairs, defined by section 3.3 . Constraints OPTIONAL Using the Distributed Tracing Extension \u00b6 The Distributed Tracing Extension is not intended to replace the protocol specific headers for tracing, like the ones described in W3C Trace Context for HTTP. Given a single hop event transmission (from sink to source directly), the Distributed Tracing Extension, if used, MUST carry the same trace information contained in protocol specific tracing headers. Given a multi hop event transmission, the Distributed Tracing Extension, if used, MUST carry the trace information of the starting trace of the transmission. In other words, it MUST NOT carry trace information of each individual hop, since this information is usually carried using protocol specific headers, understood by tools like OpenTelemetry . Middleware between the source and the sink of the event could eventually add a Distributed Tracing Extension if the source didn't include any, in order to provide to the sink the starting trace of the transmission. An example with HTTP: CURL -X POST example/webhook.json \\ -H 'ce-id: 1' \\ -H 'ce-specversion: 1.0' \\ -H 'ce-type: example' \\ -H 'ce-source: http://localhost' \\ -H 'ce-traceparent: 00-0af7651916cd43dd8448eb211c80319c-b9c7c989f97918e1-01' \\ -H 'traceparent: 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01' \\ -H ' tracestate: rojo = 00 -4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01,congo = lZWRzIHRoNhcm5hbCBwbGVhc3VyZS4 `","title":"\u5206\u5e03\u5f0f\u8ddf\u8e2a"},{"location":"extensions/distributed-tracing/#distributed-tracing-extension","text":"This extension embeds context from Distributed Tracing so that distributed systems can include traces that span an event-driven system. This extension is meant to contain historical data of the parent trace, in order to diagnose eventual failures of the system through tracing platforms like Jaeger, Zipkin, etc.","title":"Distributed Tracing extension"},{"location":"extensions/distributed-tracing/#attributes","text":"","title":"Attributes"},{"location":"extensions/distributed-tracing/#traceparent","text":"Type: String Description: Contains a version, trace ID, span ID, and trace options as defined in section 3.2 Constraints REQUIRED","title":"traceparent"},{"location":"extensions/distributed-tracing/#tracestate","text":"Type: String Description: a comma-delimited list of key-value pairs, defined by section 3.3 . Constraints OPTIONAL","title":"tracestate"},{"location":"extensions/distributed-tracing/#using-the-distributed-tracing-extension","text":"The Distributed Tracing Extension is not intended to replace the protocol specific headers for tracing, like the ones described in W3C Trace Context for HTTP. Given a single hop event transmission (from sink to source directly), the Distributed Tracing Extension, if used, MUST carry the same trace information contained in protocol specific tracing headers. Given a multi hop event transmission, the Distributed Tracing Extension, if used, MUST carry the trace information of the starting trace of the transmission. In other words, it MUST NOT carry trace information of each individual hop, since this information is usually carried using protocol specific headers, understood by tools like OpenTelemetry . Middleware between the source and the sink of the event could eventually add a Distributed Tracing Extension if the source didn't include any, in order to provide to the sink the starting trace of the transmission. An example with HTTP: CURL -X POST example/webhook.json \\ -H 'ce-id: 1' \\ -H 'ce-specversion: 1.0' \\ -H 'ce-type: example' \\ -H 'ce-source: http://localhost' \\ -H 'ce-traceparent: 00-0af7651916cd43dd8448eb211c80319c-b9c7c989f97918e1-01' \\ -H 'traceparent: 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01' \\ -H ' tracestate: rojo = 00 -4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01,congo = lZWRzIHRoNhcm5hbCBwbGVhc3VyZS4 `","title":"Using the Distributed Tracing Extension"},{"location":"extensions/partitioning/","text":"Partitioning extension \u00b6 This extension defines an attribute for use by message brokers and their clients that support partitioning of events, typically for the purpose of scaling. Often in large scale systems, during times of heavy load, events being received need to be partitioned into multiple buckets so that each bucket can be separately processed in order for the system to manage the incoming load. A partitioning key can be used to determine which bucket each event goes into. The entity sending the events can ensure that events that need to be placed into the same bucket are done so by using the same partition key on those events. Attributes \u00b6 partitionkey \u00b6 Type: String Description: A partition key for the event, typically for the purposes of defining a causal relationship/grouping between multiple events. In cases where the CloudEvent is delivered to an event consumer via multiple hops, it is possible that the value of this attribute might change, or even be removed, due to protocol semantics or business processing logic within each hop. Examples: The ID of the entity that the event is associated with Constraints: REQUIRED MUST be a non-empty string","title":"\u6269\u5c55\u5206\u533a"},{"location":"extensions/partitioning/#partitioning-extension","text":"This extension defines an attribute for use by message brokers and their clients that support partitioning of events, typically for the purpose of scaling. Often in large scale systems, during times of heavy load, events being received need to be partitioned into multiple buckets so that each bucket can be separately processed in order for the system to manage the incoming load. A partitioning key can be used to determine which bucket each event goes into. The entity sending the events can ensure that events that need to be placed into the same bucket are done so by using the same partition key on those events.","title":"Partitioning extension"},{"location":"extensions/partitioning/#attributes","text":"","title":"Attributes"},{"location":"extensions/partitioning/#partitionkey","text":"Type: String Description: A partition key for the event, typically for the purposes of defining a causal relationship/grouping between multiple events. In cases where the CloudEvent is delivered to an event consumer via multiple hops, it is possible that the value of this attribute might change, or even be removed, due to protocol semantics or business processing logic within each hop. Examples: The ID of the entity that the event is associated with Constraints: REQUIRED MUST be a non-empty string","title":"partitionkey"},{"location":"extensions/sampledrate/","text":"Sampled Rate Extension \u00b6 There are many cases in an Event's life when a system (either the system creating the event or a system transporting the event) might wish to only emit a portion of the events that actually happened. In a high throughput system where creating the event is costly, a system might wish to only create an event for 1/100 of the times that something happened. Additionally, during the transmission of an event from the source to the eventual recipient, any step along the way might choose to only pass along a fraction of the events it receives. In order for the system receiving the event to understand what is actually happening in the system that generated the event, information about how many similar events happened would need to be included in the event itself. This field provides a place for a system generating an event to indicate that the emitted event represents a given number of other similar events. It also provides a place for intermediary transport systems to modify the event when they impose additional sampling. Attributes \u00b6 sampledrate \u00b6 Type: Integer Description: The rate at which this event has already been sampled. Represents the number of similar events that happened but were not sent plus this event. For example, if a system sees 30 occurrences and emits a single event, sampledrate would be 30 (29 not sent and 1 sent). A value of 1 is the equivalent of this extension not being used at all. Constraints The rate MUST be greater than zero.","title":"\u62bd\u6837\u7387\u6269\u5c55"},{"location":"extensions/sampledrate/#sampled-rate-extension","text":"There are many cases in an Event's life when a system (either the system creating the event or a system transporting the event) might wish to only emit a portion of the events that actually happened. In a high throughput system where creating the event is costly, a system might wish to only create an event for 1/100 of the times that something happened. Additionally, during the transmission of an event from the source to the eventual recipient, any step along the way might choose to only pass along a fraction of the events it receives. In order for the system receiving the event to understand what is actually happening in the system that generated the event, information about how many similar events happened would need to be included in the event itself. This field provides a place for a system generating an event to indicate that the emitted event represents a given number of other similar events. It also provides a place for intermediary transport systems to modify the event when they impose additional sampling.","title":"Sampled Rate Extension"},{"location":"extensions/sampledrate/#attributes","text":"","title":"Attributes"},{"location":"extensions/sampledrate/#sampledrate","text":"Type: Integer Description: The rate at which this event has already been sampled. Represents the number of similar events that happened but were not sent plus this event. For example, if a system sees 30 occurrences and emits a single event, sampledrate would be 30 (29 not sent and 1 sent). A value of 1 is the equivalent of this extension not being used at all. Constraints The rate MUST be greater than zero.","title":"sampledrate"},{"location":"extensions/sequence/","text":"Sequence \u00b6 This extension defines an attribute that can be included within a CloudEvent to describe the position of an event in the ordered sequence of events produced by a unique event source. The sequence attribute represents the value of this event's order in the stream of events. This specification does not define the meaning or set of valid value of this attribute, rather it only mandates that the value be a string that can be lexicographically compared to other sequence values to determine which one comes first. The sequence with a lower lexicographical value comes first. Produces and consumers are free to define an out-of-band agreement on the semantic meaning, or valid values, for the attribute. Attributes \u00b6 sequence \u00b6 Type: String Description: Value expressing the relative order of the event. This enables interpretation of data supercedence. Constraints REQUIRED MUST be a non-empty lexicographically-orderable string RECOMMENDED as monotonically increasing and contiguous The entity creating the CloudEvent MUST ensure that the sequence values used are formatted such that across the entire set of values used a receiver can determine the order of the events via a simple string-compare type of operation. This means that it might be necessary for the value to include some kind of padding (e.g. leading zeros in the case of the value being the string representation of an integer).","title":"\u5e8f\u5217"},{"location":"extensions/sequence/#sequence","text":"This extension defines an attribute that can be included within a CloudEvent to describe the position of an event in the ordered sequence of events produced by a unique event source. The sequence attribute represents the value of this event's order in the stream of events. This specification does not define the meaning or set of valid value of this attribute, rather it only mandates that the value be a string that can be lexicographically compared to other sequence values to determine which one comes first. The sequence with a lower lexicographical value comes first. Produces and consumers are free to define an out-of-band agreement on the semantic meaning, or valid values, for the attribute.","title":"Sequence"},{"location":"extensions/sequence/#attributes","text":"","title":"Attributes"},{"location":"extensions/sequence/#sequence_1","text":"Type: String Description: Value expressing the relative order of the event. This enables interpretation of data supercedence. Constraints REQUIRED MUST be a non-empty lexicographically-orderable string RECOMMENDED as monotonically increasing and contiguous The entity creating the CloudEvent MUST ensure that the sequence values used are formatted such that across the entire set of values used a receiver can determine the order of the events via a simple string-compare type of operation. This means that it might be necessary for the value to include some kind of padding (e.g. leading zeros in the case of the value being the string representation of an integer).","title":"sequence"},{"location":"extensions/severity/","text":"Severity Extension \u00b6 Abstract \u00b6 This extension defines attributes that MAY be included within a CloudEvent to describe the \"severity\" or \"level\" of an event in relation to other events. Often systems produce events in form of logs, and these types of events usually share a common concept of \"log-level\". This extension aims to provide a standard way for describing this property in a language agnostic form. Sharing a common way to describe severity of events allows for better monitoring systems, tooling and general log consumption. This extension is heavily inspired by the OpenTelemetry Severity Fields and is intended to interoperate with them. Attributes \u00b6 When both attributes are used, all severitytext values which MAY be produced in a context of a source SHOULD be in a one-to-one and onto relationship with all severitynumber values which MAY be produced by the same source . severitytext \u00b6 Type: String Description: Human readable text representation of the event severity (also known as log level name). This is the original string representation of the severity as it is known at the source. If this field is missing and severitynumber is present then the short name that corresponds to the severitynumber MAY be used as a substitution. Constraints OPTIONAL if present, MUST be a non-empty string SHOULD be uppercase RECOMMENDED values are TRACE , DEBUG , INFO , WARN , ERROR , and FATAL , but others MAY be used. severitynumber \u00b6 Type: Integer Description: Numerical representation of the event severity (also known as log level number), normalized to values described in this document. Severity of all values MUST be numerically ascending from least-saver to most-saver. An event with a lower numerical value (such as a debug event) MUST be of less sever than an event with a higher numerical value (such as an error event). See OpenTelemetry for exact severity number meanings Constraints REQUIRED if present, MUST NOT be negative References \u00b6 Mapping of SeverityNumber Reverse Mapping Error Semantics Displaying Severity Comparing Severity Mapping of existing log formats to severity levels","title":"\u4e25\u91cd\u7a0b\u5ea6\u6269\u5c55"},{"location":"extensions/severity/#severity-extension","text":"","title":"Severity Extension"},{"location":"extensions/severity/#abstract","text":"This extension defines attributes that MAY be included within a CloudEvent to describe the \"severity\" or \"level\" of an event in relation to other events. Often systems produce events in form of logs, and these types of events usually share a common concept of \"log-level\". This extension aims to provide a standard way for describing this property in a language agnostic form. Sharing a common way to describe severity of events allows for better monitoring systems, tooling and general log consumption. This extension is heavily inspired by the OpenTelemetry Severity Fields and is intended to interoperate with them.","title":"Abstract"},{"location":"extensions/severity/#attributes","text":"When both attributes are used, all severitytext values which MAY be produced in a context of a source SHOULD be in a one-to-one and onto relationship with all severitynumber values which MAY be produced by the same source .","title":"Attributes"},{"location":"extensions/severity/#severitytext","text":"Type: String Description: Human readable text representation of the event severity (also known as log level name). This is the original string representation of the severity as it is known at the source. If this field is missing and severitynumber is present then the short name that corresponds to the severitynumber MAY be used as a substitution. Constraints OPTIONAL if present, MUST be a non-empty string SHOULD be uppercase RECOMMENDED values are TRACE , DEBUG , INFO , WARN , ERROR , and FATAL , but others MAY be used.","title":"severitytext"},{"location":"extensions/severity/#severitynumber","text":"Type: Integer Description: Numerical representation of the event severity (also known as log level number), normalized to values described in this document. Severity of all values MUST be numerically ascending from least-saver to most-saver. An event with a lower numerical value (such as a debug event) MUST be of less sever than an event with a higher numerical value (such as an error event). See OpenTelemetry for exact severity number meanings Constraints REQUIRED if present, MUST NOT be negative","title":"severitynumber"},{"location":"extensions/severity/#references","text":"Mapping of SeverityNumber Reverse Mapping Error Semantics Displaying Severity Comparing Severity Mapping of existing log formats to severity levels","title":"References"},{"location":"formats/avro-format/","text":"Avro Event Format for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The Avro Format for CloudEvents defines how events attributes are expressed in the Avro 1.9.0 Specification . Table of Contents \u00b6 Introduction Attributes Data Examples 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be represented in the Avro 1.9.0 . The Attributes section describes the naming conventions and data type mappings for CloudEvents attributes for use as Avro message properties. This specification does not define an envelope format. The Avro type system's intent is primarily to provide a consistent type system for Avro itself and not for message payloads. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 2. Attributes \u00b6 This section defines how CloudEvents attributes are mapped to the Avro type-system. This specification explicitly maps each attribute. 2.1 Type System Mapping \u00b6 The CloudEvents type system MUST be mapped to Avro types as follows. CloudEvents Avro Boolean boolean Integer int String string Binary bytes URI string following RFC 3986 \u00a74.3 URI-reference string following RFC 3986 \u00a74.1 Timestamp string following RFC 3339 (ISO 8601) Extension specifications MAY define secondary mapping rules for the values of attributes they define, but MUST also include the previously defined primary mapping. 2.3 OPTIONAL Attributes \u00b6 CloudEvents Spec defines OPTIONAL attributes. The Avro format defines that these fields MUST use the null type and the actual type through the union . Example: [ \"null\" , \"string\" ] 2.4 Definition \u00b6 Users of Avro MUST use a message whose binary encoding is identical to the one described by the CloudEvent Avro Schema : { \"namespace\" : \"io.cloudevents\" , \"type\" : \"record\" , \"name\" : \"CloudEvent\" , \"version\" : \"1.0\" , \"doc\" : \"Avro Event Format for CloudEvents\" , \"fields\" : [ { \"name\" : \"attribute\" , \"type\" : { \"type\" : \"map\" , \"values\" : [ \"null\" , \"boolean\" , \"int\" , \"string\" , \"bytes\" ] } }, { \"name\" : \"data\" , \"type\" : [ \"bytes\" , \"null\" , \"boolean\" , { \"type\" : \"map\" , \"values\" : [ \"null\" , \"boolean\" , { \"type\" : \"record\" , \"name\" : \"CloudEventData\" , \"doc\" : \"Representation of a JSON Value\" , \"fields\" : [ { \"name\" : \"value\" , \"type\" : { \"type\" : \"map\" , \"values\" : [ \"null\" , \"boolean\" , { \"type\" : \"map\" , \"values\" : \"CloudEventData\" }, { \"type\" : \"array\" , \"items\" : \"CloudEventData\" }, \"double\" , \"string\" ] } } ] }, \"double\" , \"string\" ] }, { \"type\" : \"array\" , \"items\" : \"CloudEventData\" }, \"double\" , \"string\" ] } ] } 3 Data \u00b6 Before encoding, the AVRO serializer MUST first determine the runtime data type of the content. This can be determined by examining the data for invalid UTF-8 sequences or by consulting the datacontenttype attribute. If the implementation determines that the type of the data is binary, the value MUST be stored in the data field using the bytes type. For other types (non-binary data without a datacontenttype attribute), the implementation MUST translate the data value into a representation of the JSON value using the union types described for the data record. 4 Examples \u00b6 The following table shows exemplary mappings: CloudEvents Type Exemplary Avro Value type string \"com.example.someevent\" specversion string \"1.0\" source string \"/mycontext\" id string \"7a0dc520-c870-4193c8\" time string \"2019-06-05T23:45:00Z\" dataschema string \"http://registry.com/schema/v1/much.json\" contenttype string \"application/json\" data bytes \"{\"much\":{\"wow\":\"json\"}}\" dataschema string \"http://registry.com/subjects/ce/versions/1\" contenttype string \"application/avro\" data bytes [avro-serialized-bytes] References \u00b6 Avro 1.9.0 Apache Avro\u2122 1.9.0 Specification","title":"Avro\u683c\u5f0f"},{"location":"formats/avro-format/#avro-event-format-for-cloudevents-version-103-wip","text":"","title":"Avro Event Format for CloudEvents - Version 1.0.3-wip"},{"location":"formats/avro-format/#abstract","text":"The Avro Format for CloudEvents defines how events attributes are expressed in the Avro 1.9.0 Specification .","title":"Abstract"},{"location":"formats/avro-format/#table-of-contents","text":"Introduction Attributes Data Examples","title":"Table of Contents"},{"location":"formats/avro-format/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be represented in the Avro 1.9.0 . The Attributes section describes the naming conventions and data type mappings for CloudEvents attributes for use as Avro message properties. This specification does not define an envelope format. The Avro type system's intent is primarily to provide a consistent type system for Avro itself and not for message payloads.","title":"1. Introduction"},{"location":"formats/avro-format/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"formats/avro-format/#2-attributes","text":"This section defines how CloudEvents attributes are mapped to the Avro type-system. This specification explicitly maps each attribute.","title":"2. Attributes"},{"location":"formats/avro-format/#21-type-system-mapping","text":"The CloudEvents type system MUST be mapped to Avro types as follows. CloudEvents Avro Boolean boolean Integer int String string Binary bytes URI string following RFC 3986 \u00a74.3 URI-reference string following RFC 3986 \u00a74.1 Timestamp string following RFC 3339 (ISO 8601) Extension specifications MAY define secondary mapping rules for the values of attributes they define, but MUST also include the previously defined primary mapping.","title":"2.1 Type System Mapping"},{"location":"formats/avro-format/#23-optional-attributes","text":"CloudEvents Spec defines OPTIONAL attributes. The Avro format defines that these fields MUST use the null type and the actual type through the union . Example: [ \"null\" , \"string\" ]","title":"2.3 OPTIONAL Attributes"},{"location":"formats/avro-format/#24-definition","text":"Users of Avro MUST use a message whose binary encoding is identical to the one described by the CloudEvent Avro Schema : { \"namespace\" : \"io.cloudevents\" , \"type\" : \"record\" , \"name\" : \"CloudEvent\" , \"version\" : \"1.0\" , \"doc\" : \"Avro Event Format for CloudEvents\" , \"fields\" : [ { \"name\" : \"attribute\" , \"type\" : { \"type\" : \"map\" , \"values\" : [ \"null\" , \"boolean\" , \"int\" , \"string\" , \"bytes\" ] } }, { \"name\" : \"data\" , \"type\" : [ \"bytes\" , \"null\" , \"boolean\" , { \"type\" : \"map\" , \"values\" : [ \"null\" , \"boolean\" , { \"type\" : \"record\" , \"name\" : \"CloudEventData\" , \"doc\" : \"Representation of a JSON Value\" , \"fields\" : [ { \"name\" : \"value\" , \"type\" : { \"type\" : \"map\" , \"values\" : [ \"null\" , \"boolean\" , { \"type\" : \"map\" , \"values\" : \"CloudEventData\" }, { \"type\" : \"array\" , \"items\" : \"CloudEventData\" }, \"double\" , \"string\" ] } } ] }, \"double\" , \"string\" ] }, { \"type\" : \"array\" , \"items\" : \"CloudEventData\" }, \"double\" , \"string\" ] } ] }","title":"2.4 Definition"},{"location":"formats/avro-format/#3-data","text":"Before encoding, the AVRO serializer MUST first determine the runtime data type of the content. This can be determined by examining the data for invalid UTF-8 sequences or by consulting the datacontenttype attribute. If the implementation determines that the type of the data is binary, the value MUST be stored in the data field using the bytes type. For other types (non-binary data without a datacontenttype attribute), the implementation MUST translate the data value into a representation of the JSON value using the union types described for the data record.","title":"3 Data"},{"location":"formats/avro-format/#4-examples","text":"The following table shows exemplary mappings: CloudEvents Type Exemplary Avro Value type string \"com.example.someevent\" specversion string \"1.0\" source string \"/mycontext\" id string \"7a0dc520-c870-4193c8\" time string \"2019-06-05T23:45:00Z\" dataschema string \"http://registry.com/schema/v1/much.json\" contenttype string \"application/json\" data bytes \"{\"much\":{\"wow\":\"json\"}}\" dataschema string \"http://registry.com/subjects/ce/versions/1\" contenttype string \"application/avro\" data bytes [avro-serialized-bytes]","title":"4 Examples"},{"location":"formats/avro-format/#references","text":"Avro 1.9.0 Apache Avro\u2122 1.9.0 Specification","title":"References"},{"location":"formats/json-format/","text":"JSON Event Format for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 The JSON Format for CloudEvents defines how events are expressed in JavaScript Object Notation (JSON) Data Interchange Format ( RFC8259 ). Table of Contents \u00b6 Introduction Attributes Envelope JSON Batch Format References 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be represented in the JavaScript Object Notation (JSON) Data Interchange Format ( RFC8259 ). The Attributes section describes the naming conventions and data type mappings for CloudEvents attributes. The Envelope section defines a JSON container for CloudEvents attributes and an associated media type. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 2. Attributes \u00b6 This section defines how CloudEvents attributes are mapped to JSON. This specification does not explicitly map each attribute, but provides a generic mapping model that applies to all current and future CloudEvents attributes, including extensions. For clarity, extension attributes are serialized using the same rules as core attributes. This includes their syntax and placement within the JSON object. In particular, extensions are placed as top-level JSON properties. Extensions MUST be serialized as a top-level JSON property. There were many reasons for this design decision and they are covered in more detail in the Primer . 2.1. Base Type System \u00b6 The core CloudEvents specification defines a minimal abstract type system, which this mapping leans on. 2.2. Type System Mapping \u00b6 The CloudEvents type system MUST be mapped to JSON types as follows, with exceptions noted below. CloudEvents JSON Boolean boolean Integer number , only the integer component optionally prefixed with a minus sign is permitted String string Binary string , Base64-encoded binary URI string following RFC 3986 URI-reference string following RFC 3986 Timestamp string following RFC 3339 (ISO 8601) Unset attributes MAY be encoded to the JSON value of null . When decoding attributes and a null value is encountered, it MUST be treated as the equivalent of unset or omitted. Extension specifications MAY define secondary mapping rules for the values of attributes they define, but MUST also include the previously defined primary mapping. For instance, the attribute value might be a data structure defined in a standard outside of CloudEvents, with a formal JSON mapping, and there might be risk of translation errors or information loss when the original format is not preserved. An extension specification that defines a secondary mapping rule for JSON, and any revision of such a specification, MUST also define explicit mapping rules for all other event formats that are part of the CloudEvents core at the time of the submission or revision. If necessary, the CloudEvents type can be determined by inference using the rules from the mapping table, whereby the only potentially ambiguous JSON data type is string . The value is compatible with the respective CloudEvents type when the mapping rules are fulfilled. 2.3. Examples \u00b6 The following table shows exemplary attribute mappings: CloudEvents Type Exemplary JSON Value type String \"com.example.someevent\" specversion String \"1.0\" source URI-reference \"/mycontext\" subject String \"larger-context\" subject String (null) null id String \"1234-1234-1234\" time Timestamp \"2018-04-05T17:31:00Z\" time Timestamp (null) null datacontenttype String \"application/json\" 2.4. JSONSchema Validation \u00b6 The CloudEvents JSONSchema for the spec is located here and contains the definitions for validating events in JSON. 3. Envelope \u00b6 Each CloudEvents event can be wholly represented as a JSON object. Such a representation MUST use the media type application/cloudevents+json . All REQUIRED and all not omitted OPTIONAL attributes in the given event MUST become members of the JSON object, with the respective JSON object member name matching the attribute name, and the member's type and value being mapped using the type system mapping . OPTIONAL not omitted attributes MAY be represented as a null JSON value. 3.1. Handling of \"data\" \u00b6 The JSON representation of the event \"data\" payload is determined by the runtime type of the data content and the value of the datacontenttype attribute . 3.1.1. Payload Serialization \u00b6 Before taking action, a JSON serializer MUST first determine the runtime data type of the data content. If the implementation determines that the type of data is Binary , the value MUST be represented as a JSON string expression containing the Base64 encoded binary value, and use the member name data_base64 to store it inside the JSON representation. If present, the datacontenttype MUST reflect the format of the original binary data. If a datacontenttype value is not provided, no assumptions can be made as to the format of the data and therefore the datacontenttype attribute MUST NOT be present in the resulting CloudEvent. Note: Definition of data_base64 is a JSON-specific marshaling rule and not part of the formal CloudEvents context attributes definition. This means the rules governing CloudEvent attributes names do not apply to this JSON member. If the type of data is not Binary , the implementation will next determine whether the value of the datacontenttype attribute declares the data to contain JSON-formatted content. Such a content type is defined as one having a media subtype equal to json or ending with a +json format extension. That is, a datacontenttype declares JSON-formatted content if its media type, when stripped of parameters, has the form */json or */*+json . If the datacontenttype is unspecified, processing SHOULD proceed as if the datacontenttype had been specified explicitly as application/json . If the datacontenttype declares the data to contain JSON-formatted content, a JSON serializer MUST translate the data value to a JSON value , and use the member name data to store it inside the JSON representation. The data value MUST be stored directly as a JSON value, rather than as an encoded JSON document represented as a string. An implementation MAY fail to serialize the event if it is unable to translate the runtime value to a JSON value. Otherwise, if the datacontenttype does not declare JSON-formatted data content, a JSON serializer MUST store a string representation of the data value, properly encoded according to the datacontenttype , in the data member of the JSON representation. An implementation MAY fail to serialize the event if it is unable to represent the runtime value as a properly encoded string. Out of this follows that the presence of the data and data_base64 members is mutually exclusive in a JSON serialized CloudEvent. Furthermore, unlike attributes, for which value types are restricted by the type-system mapping , the data member JSON value is unrestricted, and MAY contain any valid JSON if the datacontenttype declares the data to be JSON-formatted. In particular, the data member MAY have a value of null , representing an explicit null payload as distinct from the absence of the data member. 3.1.2. Payload Deserialization \u00b6 When a CloudEvents is deserialized from JSON, the presence of the data_base64 member clearly indicates that the value is a Base64 encoded binary data, which the deserializer MUST decode into a binary runtime data type. The deserializer MAY further interpret this binary data according to the datacontenttype . If the datacontenttype attribute is absent, the decoding MUST NOT make an assumption of JSON-formatted data (as described below for the data member). When a data member is present, the decoding behavior is dependent on the value of the datacontenttype attribute. If the datacontenttype declares the data to contain JSON-formatted content (that is, its subtype is json or has a +json format extension), then the data member MUST be treated directly as a JSON value and decoded using an appropriate JSON type mapping for the runtime. Note: if the data member is a string, a JSON deserializer MUST interpret it directly as a JSON String value; it MUST NOT further deserialize the string as a JSON document. If the datacontenttype does not declare JSON-formatted data content, then the data member SHOULD be treated as an encoded content string. An implementation MAY fail to deserialize the event if the data member is not a string, or if it is unable to interpret the data with the datacontenttype . When a data member is present, if the datacontenttype attribute is absent, a JSON deserializer SHOULD proceed as if it were set to application/json , which declares the data to contain JSON-formatted content. Thus, it SHOULD treat the data member directly as a JSON value as specified above. Furthermore, if a JSON-formatted event with no datacontenttype attribute, is deserialized and then re-serialized using a different format or protocol binding, the datacontenttype in the re-serialized event SHOULD be set explicitly to the implied application/json content type to preserve the semantics of the event. 3.2. Examples \u00b6 Example event with Binary -valued data: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"id\" : \"A234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/vnd.apache.thrift.binary\" , \"data_base64\" : \"... base64 encoded string ...\" } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: A234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/vnd.apache.thrift.binary ...raw binary bytes... Example event with a serialized XML document as the String (i.e. non- Binary ) valued data , and an XML (i.e. non-JSON-formatted) content type: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"id\" : \"B234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"unsetextension\" : null , \"datacontenttype\" : \"application/xml\" , \"data\" : \"<much wow=\\\"xml\\\"/>\" } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: B234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/xml <much wow=\"xml\"/> Example event with JSON Object -valued data and a content type declaring JSON-formatted data: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"subject\" : null , \"id\" : \"C234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/json\" , \"data\" : { \"appinfoA\" : \"abc\" , \"appinfoB\" : 123 , \"appinfoC\" : true } } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: C234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/json { \"appinfoA\" : \"abc\", \"appinfoB\" : 123, \"appinfoC\" : true } Example event with JSON Number -valued data and a content type declaring JSON-formatted data: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"subject\" : null , \"id\" : \"C234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/json\" , \"data\" : 1.5 } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: C234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/json 1.5 Example event with a literal JSON string as the non- Binary -valued data and no datacontenttype . The data is implicitly treated as if the datacontenttype were set to application/json : { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"subject\" : null , \"id\" : \"D234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"data\" : \"I'm just a string\" } The above example re-encoded using HTTP Binary Content Mode . Note that the Content Type is explicitly set to the application/json value that was implicit in JSON format. Note also that the content is quoted to indicate that it is a literal JSON string. If the quotes were missing, this would have been an invalid event because the content could not be decoded as application/json : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: D234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/json \"I'm just a string\" Example event with a Binary -valued data_base64 but no datacontenttype . Even though the data happens to be a valid JSON document when interpreted as text, no content type is inferred. { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"id\" : \"D234-1234-1234\" , \"data_base64\" : \"eyAieHl6IjogMTIzIH0=\" } The above example re-encoded using HTTP Binary Content Mode . Note that there is no content-type header present. ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: D234-1234-1234 { \"xyz\": 123 } 4. JSON Batch Format \u00b6 In the JSON Batch Format several CloudEvents are batched into a single JSON document. The document is a JSON array filled with CloudEvents in the JSON Event format . Although the JSON Batch Format builds ontop of the JSON Format , it is considered as a separate format: a valid implementation of the JSON Format doesn't need to support it. The JSON Batch Format MUST NOT be used when only support for the JSON Format is indicated. 4.1. Mapping CloudEvents \u00b6 This section defines how a batch of CloudEvents is mapped to JSON. The outermost JSON element is a JSON Array , which contains as elements CloudEvents rendered in accordance with the JSON event format specification. 4.2. Envelope \u00b6 A JSON Batch of CloudEvents MUST use the media type application/cloudevents-batch+json . 4.3. Examples \u00b6 An example containing two CloudEvents: The first with Binary -valued data, the second with JSON data. [ { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext/4\" , \"id\" : \"B234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/vnd.apache.thrift.binary\" , \"data_base64\" : \"... base64 encoded string ...\" }, { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someotherevent\" , \"source\" : \"/mycontext/9\" , \"id\" : \"C234-1234-1234\" , \"time\" : \"2018-04-05T17:31:05Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/json\" , \"data\" : { \"appinfoA\" : \"abc\" , \"appinfoB\" : 123 , \"appinfoC\" : true } } ] An example of an empty batch of CloudEvents (typically used in a response, but also valid in a request): [] 5. References \u00b6 RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC4648 The Base16, Base32, and Base64 Data Encodings RFC6839 Additional Media Type Structured Syntax Suffixes RFC8259 The JavaScript Object Notation (JSON) Data Interchange Format","title":"JSON\u683c\u5f0f"},{"location":"formats/json-format/#json-event-format-for-cloudevents-version-103-wip","text":"","title":"JSON Event Format for CloudEvents - Version 1.0.3-wip"},{"location":"formats/json-format/#abstract","text":"The JSON Format for CloudEvents defines how events are expressed in JavaScript Object Notation (JSON) Data Interchange Format ( RFC8259 ).","title":"Abstract"},{"location":"formats/json-format/#table-of-contents","text":"Introduction Attributes Envelope JSON Batch Format References","title":"Table of Contents"},{"location":"formats/json-format/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are to be represented in the JavaScript Object Notation (JSON) Data Interchange Format ( RFC8259 ). The Attributes section describes the naming conventions and data type mappings for CloudEvents attributes. The Envelope section defines a JSON container for CloudEvents attributes and an associated media type.","title":"1. Introduction"},{"location":"formats/json-format/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"formats/json-format/#2-attributes","text":"This section defines how CloudEvents attributes are mapped to JSON. This specification does not explicitly map each attribute, but provides a generic mapping model that applies to all current and future CloudEvents attributes, including extensions. For clarity, extension attributes are serialized using the same rules as core attributes. This includes their syntax and placement within the JSON object. In particular, extensions are placed as top-level JSON properties. Extensions MUST be serialized as a top-level JSON property. There were many reasons for this design decision and they are covered in more detail in the Primer .","title":"2. Attributes"},{"location":"formats/json-format/#21-base-type-system","text":"The core CloudEvents specification defines a minimal abstract type system, which this mapping leans on.","title":"2.1. Base Type System"},{"location":"formats/json-format/#22-type-system-mapping","text":"The CloudEvents type system MUST be mapped to JSON types as follows, with exceptions noted below. CloudEvents JSON Boolean boolean Integer number , only the integer component optionally prefixed with a minus sign is permitted String string Binary string , Base64-encoded binary URI string following RFC 3986 URI-reference string following RFC 3986 Timestamp string following RFC 3339 (ISO 8601) Unset attributes MAY be encoded to the JSON value of null . When decoding attributes and a null value is encountered, it MUST be treated as the equivalent of unset or omitted. Extension specifications MAY define secondary mapping rules for the values of attributes they define, but MUST also include the previously defined primary mapping. For instance, the attribute value might be a data structure defined in a standard outside of CloudEvents, with a formal JSON mapping, and there might be risk of translation errors or information loss when the original format is not preserved. An extension specification that defines a secondary mapping rule for JSON, and any revision of such a specification, MUST also define explicit mapping rules for all other event formats that are part of the CloudEvents core at the time of the submission or revision. If necessary, the CloudEvents type can be determined by inference using the rules from the mapping table, whereby the only potentially ambiguous JSON data type is string . The value is compatible with the respective CloudEvents type when the mapping rules are fulfilled.","title":"2.2. Type System Mapping"},{"location":"formats/json-format/#23-examples","text":"The following table shows exemplary attribute mappings: CloudEvents Type Exemplary JSON Value type String \"com.example.someevent\" specversion String \"1.0\" source URI-reference \"/mycontext\" subject String \"larger-context\" subject String (null) null id String \"1234-1234-1234\" time Timestamp \"2018-04-05T17:31:00Z\" time Timestamp (null) null datacontenttype String \"application/json\"","title":"2.3. Examples"},{"location":"formats/json-format/#24-jsonschema-validation","text":"The CloudEvents JSONSchema for the spec is located here and contains the definitions for validating events in JSON.","title":"2.4. JSONSchema Validation"},{"location":"formats/json-format/#3-envelope","text":"Each CloudEvents event can be wholly represented as a JSON object. Such a representation MUST use the media type application/cloudevents+json . All REQUIRED and all not omitted OPTIONAL attributes in the given event MUST become members of the JSON object, with the respective JSON object member name matching the attribute name, and the member's type and value being mapped using the type system mapping . OPTIONAL not omitted attributes MAY be represented as a null JSON value.","title":"3. Envelope"},{"location":"formats/json-format/#31-handling-of-data","text":"The JSON representation of the event \"data\" payload is determined by the runtime type of the data content and the value of the datacontenttype attribute .","title":"3.1. Handling of \"data\""},{"location":"formats/json-format/#311-payload-serialization","text":"Before taking action, a JSON serializer MUST first determine the runtime data type of the data content. If the implementation determines that the type of data is Binary , the value MUST be represented as a JSON string expression containing the Base64 encoded binary value, and use the member name data_base64 to store it inside the JSON representation. If present, the datacontenttype MUST reflect the format of the original binary data. If a datacontenttype value is not provided, no assumptions can be made as to the format of the data and therefore the datacontenttype attribute MUST NOT be present in the resulting CloudEvent. Note: Definition of data_base64 is a JSON-specific marshaling rule and not part of the formal CloudEvents context attributes definition. This means the rules governing CloudEvent attributes names do not apply to this JSON member. If the type of data is not Binary , the implementation will next determine whether the value of the datacontenttype attribute declares the data to contain JSON-formatted content. Such a content type is defined as one having a media subtype equal to json or ending with a +json format extension. That is, a datacontenttype declares JSON-formatted content if its media type, when stripped of parameters, has the form */json or */*+json . If the datacontenttype is unspecified, processing SHOULD proceed as if the datacontenttype had been specified explicitly as application/json . If the datacontenttype declares the data to contain JSON-formatted content, a JSON serializer MUST translate the data value to a JSON value , and use the member name data to store it inside the JSON representation. The data value MUST be stored directly as a JSON value, rather than as an encoded JSON document represented as a string. An implementation MAY fail to serialize the event if it is unable to translate the runtime value to a JSON value. Otherwise, if the datacontenttype does not declare JSON-formatted data content, a JSON serializer MUST store a string representation of the data value, properly encoded according to the datacontenttype , in the data member of the JSON representation. An implementation MAY fail to serialize the event if it is unable to represent the runtime value as a properly encoded string. Out of this follows that the presence of the data and data_base64 members is mutually exclusive in a JSON serialized CloudEvent. Furthermore, unlike attributes, for which value types are restricted by the type-system mapping , the data member JSON value is unrestricted, and MAY contain any valid JSON if the datacontenttype declares the data to be JSON-formatted. In particular, the data member MAY have a value of null , representing an explicit null payload as distinct from the absence of the data member.","title":"3.1.1. Payload Serialization"},{"location":"formats/json-format/#312-payload-deserialization","text":"When a CloudEvents is deserialized from JSON, the presence of the data_base64 member clearly indicates that the value is a Base64 encoded binary data, which the deserializer MUST decode into a binary runtime data type. The deserializer MAY further interpret this binary data according to the datacontenttype . If the datacontenttype attribute is absent, the decoding MUST NOT make an assumption of JSON-formatted data (as described below for the data member). When a data member is present, the decoding behavior is dependent on the value of the datacontenttype attribute. If the datacontenttype declares the data to contain JSON-formatted content (that is, its subtype is json or has a +json format extension), then the data member MUST be treated directly as a JSON value and decoded using an appropriate JSON type mapping for the runtime. Note: if the data member is a string, a JSON deserializer MUST interpret it directly as a JSON String value; it MUST NOT further deserialize the string as a JSON document. If the datacontenttype does not declare JSON-formatted data content, then the data member SHOULD be treated as an encoded content string. An implementation MAY fail to deserialize the event if the data member is not a string, or if it is unable to interpret the data with the datacontenttype . When a data member is present, if the datacontenttype attribute is absent, a JSON deserializer SHOULD proceed as if it were set to application/json , which declares the data to contain JSON-formatted content. Thus, it SHOULD treat the data member directly as a JSON value as specified above. Furthermore, if a JSON-formatted event with no datacontenttype attribute, is deserialized and then re-serialized using a different format or protocol binding, the datacontenttype in the re-serialized event SHOULD be set explicitly to the implied application/json content type to preserve the semantics of the event.","title":"3.1.2. Payload Deserialization"},{"location":"formats/json-format/#32-examples","text":"Example event with Binary -valued data: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"id\" : \"A234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/vnd.apache.thrift.binary\" , \"data_base64\" : \"... base64 encoded string ...\" } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: A234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/vnd.apache.thrift.binary ...raw binary bytes... Example event with a serialized XML document as the String (i.e. non- Binary ) valued data , and an XML (i.e. non-JSON-formatted) content type: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"id\" : \"B234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"unsetextension\" : null , \"datacontenttype\" : \"application/xml\" , \"data\" : \"<much wow=\\\"xml\\\"/>\" } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: B234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/xml <much wow=\"xml\"/> Example event with JSON Object -valued data and a content type declaring JSON-formatted data: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"subject\" : null , \"id\" : \"C234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/json\" , \"data\" : { \"appinfoA\" : \"abc\" , \"appinfoB\" : 123 , \"appinfoC\" : true } } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: C234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/json { \"appinfoA\" : \"abc\", \"appinfoB\" : 123, \"appinfoC\" : true } Example event with JSON Number -valued data and a content type declaring JSON-formatted data: { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"subject\" : null , \"id\" : \"C234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/json\" , \"data\" : 1.5 } The above example re-encoded using HTTP Binary Content Mode : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: C234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/json 1.5 Example event with a literal JSON string as the non- Binary -valued data and no datacontenttype . The data is implicitly treated as if the datacontenttype were set to application/json : { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"subject\" : null , \"id\" : \"D234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"data\" : \"I'm just a string\" } The above example re-encoded using HTTP Binary Content Mode . Note that the Content Type is explicitly set to the application/json value that was implicit in JSON format. Note also that the content is quoted to indicate that it is a literal JSON string. If the quotes were missing, this would have been an invalid event because the content could not be decoded as application/json : ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: D234-1234-1234 ce-time: 2018-04-05T17:31:00Z ce-comexampleextension1: value ce-comexampleothervalue: 5 content-type: application/json \"I'm just a string\" Example event with a Binary -valued data_base64 but no datacontenttype . Even though the data happens to be a valid JSON document when interpreted as text, no content type is inferred. { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext\" , \"id\" : \"D234-1234-1234\" , \"data_base64\" : \"eyAieHl6IjogMTIzIH0=\" } The above example re-encoded using HTTP Binary Content Mode . Note that there is no content-type header present. ce-specversion: 1.0 ce-type: com.example.someevent ce-source: /mycontext ce-id: D234-1234-1234 { \"xyz\": 123 }","title":"3.2. Examples"},{"location":"formats/json-format/#4-json-batch-format","text":"In the JSON Batch Format several CloudEvents are batched into a single JSON document. The document is a JSON array filled with CloudEvents in the JSON Event format . Although the JSON Batch Format builds ontop of the JSON Format , it is considered as a separate format: a valid implementation of the JSON Format doesn't need to support it. The JSON Batch Format MUST NOT be used when only support for the JSON Format is indicated.","title":"4. JSON Batch Format"},{"location":"formats/json-format/#41-mapping-cloudevents","text":"This section defines how a batch of CloudEvents is mapped to JSON. The outermost JSON element is a JSON Array , which contains as elements CloudEvents rendered in accordance with the JSON event format specification.","title":"4.1. Mapping CloudEvents"},{"location":"formats/json-format/#42-envelope","text":"A JSON Batch of CloudEvents MUST use the media type application/cloudevents-batch+json .","title":"4.2. Envelope"},{"location":"formats/json-format/#43-examples","text":"An example containing two CloudEvents: The first with Binary -valued data, the second with JSON data. [ { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someevent\" , \"source\" : \"/mycontext/4\" , \"id\" : \"B234-1234-1234\" , \"time\" : \"2018-04-05T17:31:00Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/vnd.apache.thrift.binary\" , \"data_base64\" : \"... base64 encoded string ...\" }, { \"specversion\" : \"1.0\" , \"type\" : \"com.example.someotherevent\" , \"source\" : \"/mycontext/9\" , \"id\" : \"C234-1234-1234\" , \"time\" : \"2018-04-05T17:31:05Z\" , \"comexampleextension1\" : \"value\" , \"comexampleothervalue\" : 5 , \"datacontenttype\" : \"application/json\" , \"data\" : { \"appinfoA\" : \"abc\" , \"appinfoB\" : 123 , \"appinfoC\" : true } } ] An example of an empty batch of CloudEvents (typically used in a response, but also valid in a request): []","title":"4.3. Examples"},{"location":"formats/json-format/#5-references","text":"RFC2046 Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types RFC2119 Key words for use in RFCs to Indicate Requirement Levels RFC4627 The application/json Media Type for JavaScript Object Notation (JSON) RFC4648 The Base16, Base32, and Base64 Data Encodings RFC6839 Additional Media Type Structured Syntax Suffixes RFC8259 The JavaScript Object Notation (JSON) Data Interchange Format","title":"5. References"},{"location":"formats/protobuf-format/","text":"Protobuf Event Format for CloudEvents - Version 1.0.3-wip \u00b6 Abstract \u00b6 Protocol Buffers is a mechanism for marshalling structured data, this document defines how CloudEvents are represented using version 3 of that specification. In this document the terms Protocol Buffers , protobuf , and proto are used interchangeably. Table of Contents \u00b6 Introduction Attributes Data Transport Batch Format Examples 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are are represented using a protobuf schema. The Attributes section describes the naming conventions and data type mappings for CloudEvent attributes for use as protobuf message properties. The Data section describes how the event payload is carried. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2 Content-Type \u00b6 There is no official IANA media-type designation for protobuf, as such this specification uses 'application/protobuf' to identify such content. 2. Attributes \u00b6 This section defines how CloudEvents attributes are represented in the protobuf schema . 2.1 Type System \u00b6 The CloudEvents type system is mapped to protobuf as follows : CloudEvents protobuf Boolean boolean Integer int32 String string Binary bytes URI string following RFC 3986 \u00a74.3 URI-reference string following RFC 3986 \u00a74.1 Timestamp Timestamp 2.3 REQUIRED Attributes \u00b6 REQUIRED attributes are represented explicitly as protobuf fields. 2.4 OPTIONAL Attributes & Extensions \u00b6 OPTIONAL and extension attributes are represented using a map construct enabling direct support of the CloudEvent type system . map < string , CloudEventAttributeValue > attributes = 1 ; message CloudEventAttributeValue { oneof attr { bool ce_boolean = 1 ; int32 ce_integer = 2 ; string ce_string = 3 ; bytes ce_binary = 4 ; string ce_uri = 5 ; string ce_uri_reference = 6 ; google.protobuf.Timestamp ce_timestamp = 7 ; } } In this model an attribute's name is used as the map key and is associated with its value stored in the appropriately typed property. This approach allows attributes to be represented and transported with no loss of type information. 3. Data \u00b6 The specification allows for data payloads of the following types to be explicitly represented: string bytes protobuf object/message oneof data { // Binary data bytes binary_data = 2 ; // String data string text_data = 3 ; // Protobuf Message data google.protobuf.Any proto_data = 4 ; } Where the data is a protobuf message it MUST be stored in the proto_data property. datacontenttype MAY be populated with application/protobuf dataschema SHOULD be populated with the type URL of the protobuf data message. When the type of the data is text, the value MUST be stored in the text_data property. datacontenttype SHOULD be populated with the appropriate media-type. When the type of the data is binary the value MUST be stored in the binary_data property. datacontenttype SHOULD be populated with the appropriate media-type. 4. Transport \u00b6 Transports that support content identification MUST use the following designation: application/cloudevents+protobuf 5. Batch Format \u00b6 Batch format allows for a set of CloudEvents to be represented, no relationship between those events is implied. Although the protobuf batch format builds on the protobuf format it is considered separate, that is to say that support of protobuf format does not indicate support of the batch representation. The batch format MUST only be used where supported. 5.1 Envelope \u00b6 The enveloping container is a CloudEventBatch protobuf message containing a repeating set of CloudEvent message(s): message CloudEventBatch { repeated CloudEvent events = 1 ; } 5.2 Batch Media Type \u00b6 A compliant protobuf batch representation is identifed using the following media-type application/cloudevents-batch+protobuf 6. Examples \u00b6 The following code-snippets show how proto representations might be constucted assuming the availability of some convenience methods. 6.1 Plain Text event data \u00b6 public static CloudEvent plainTextExample () { CloudEvent . Builder ceBuilder = CloudEvent . newBuilder (); ceBuilder //-- REQUIRED Attributes. . setId ( UUID . randomUUID (). toString ()) . setSpecVersion ( \"1.0\" ) . setType ( \"io.cloudevent.example\" ) . setSource ( \"producer-1\" ) //-- Data. . setTextData ( \"This is a plain text message\" ); //-- OPTIONAL Attributes withCurrentTime ( ceBuilder , \"time\" ); withAttribute ( ceBuilder , \"datacontenttype\" , \"text/plain\" ); // Build it. return ceBuilder . build (); } 6.2 Proto message as event data \u00b6 Where the event data payload is itself a protobuf message (with its own schema) a protocol buffer idiomatic method can be used to carry the data. private static Spec . CloudEvent protoExample () { //-- Build an event data protobuf object. Test . SomeData . Builder dataBuilder = Test . SomeData . newBuilder (); dataBuilder . setSomeText ( \"this is an important message\" ) . setIsImportant ( true ); //-- Build the CloudEvent. CloudEvent . Builder ceBuilder = Spec . CloudEvent . newBuilder (); ceBuilder . setId ( UUID . randomUUID (). toString ()) . setSpecVersion ( \"1.0\" ) . setType ( \"io.cloudevent.example\" ) . setSource ( \"producer-2\" ) // Add the proto data into the CloudEvent envelope. . setProtoData ( Any . pack ( dataBuilder . build ())); // Add the protto type URL withAttribute ( ceBuilder , \"dataschema\" , ceBuilder . getProtoData (). getTypeUrl ()); // Set Content-Type (OPTIONAL) withAttribute ( ceBuilder , \"datacontenttype\" , \"application/protobuf\" ); //-- Done. return ceBuilder . build (); } References \u00b6 Protocol Buffer 3 Specification CloudEvents Protocol Buffers format schema","title":"Protobuf\u683c\u5f0f"},{"location":"formats/protobuf-format/#protobuf-event-format-for-cloudevents-version-103-wip","text":"","title":"Protobuf Event Format for CloudEvents - Version 1.0.3-wip"},{"location":"formats/protobuf-format/#abstract","text":"Protocol Buffers is a mechanism for marshalling structured data, this document defines how CloudEvents are represented using version 3 of that specification. In this document the terms Protocol Buffers , protobuf , and proto are used interchangeably.","title":"Abstract"},{"location":"formats/protobuf-format/#table-of-contents","text":"Introduction Attributes Data Transport Batch Format Examples","title":"Table of Contents"},{"location":"formats/protobuf-format/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how the elements defined in the CloudEvents specification are are represented using a protobuf schema. The Attributes section describes the naming conventions and data type mappings for CloudEvent attributes for use as protobuf message properties. The Data section describes how the event payload is carried.","title":"1. Introduction"},{"location":"formats/protobuf-format/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"formats/protobuf-format/#12-content-type","text":"There is no official IANA media-type designation for protobuf, as such this specification uses 'application/protobuf' to identify such content.","title":"1.2 Content-Type"},{"location":"formats/protobuf-format/#2-attributes","text":"This section defines how CloudEvents attributes are represented in the protobuf schema .","title":"2. Attributes"},{"location":"formats/protobuf-format/#21-type-system","text":"The CloudEvents type system is mapped to protobuf as follows : CloudEvents protobuf Boolean boolean Integer int32 String string Binary bytes URI string following RFC 3986 \u00a74.3 URI-reference string following RFC 3986 \u00a74.1 Timestamp Timestamp","title":"2.1 Type System"},{"location":"formats/protobuf-format/#23-required-attributes","text":"REQUIRED attributes are represented explicitly as protobuf fields.","title":"2.3 REQUIRED Attributes"},{"location":"formats/protobuf-format/#24-optional-attributes-extensions","text":"OPTIONAL and extension attributes are represented using a map construct enabling direct support of the CloudEvent type system . map < string , CloudEventAttributeValue > attributes = 1 ; message CloudEventAttributeValue { oneof attr { bool ce_boolean = 1 ; int32 ce_integer = 2 ; string ce_string = 3 ; bytes ce_binary = 4 ; string ce_uri = 5 ; string ce_uri_reference = 6 ; google.protobuf.Timestamp ce_timestamp = 7 ; } } In this model an attribute's name is used as the map key and is associated with its value stored in the appropriately typed property. This approach allows attributes to be represented and transported with no loss of type information.","title":"2.4 OPTIONAL Attributes &amp; Extensions"},{"location":"formats/protobuf-format/#3-data","text":"The specification allows for data payloads of the following types to be explicitly represented: string bytes protobuf object/message oneof data { // Binary data bytes binary_data = 2 ; // String data string text_data = 3 ; // Protobuf Message data google.protobuf.Any proto_data = 4 ; } Where the data is a protobuf message it MUST be stored in the proto_data property. datacontenttype MAY be populated with application/protobuf dataschema SHOULD be populated with the type URL of the protobuf data message. When the type of the data is text, the value MUST be stored in the text_data property. datacontenttype SHOULD be populated with the appropriate media-type. When the type of the data is binary the value MUST be stored in the binary_data property. datacontenttype SHOULD be populated with the appropriate media-type.","title":"3. Data"},{"location":"formats/protobuf-format/#4-transport","text":"Transports that support content identification MUST use the following designation: application/cloudevents+protobuf","title":"4. Transport"},{"location":"formats/protobuf-format/#5-batch-format","text":"Batch format allows for a set of CloudEvents to be represented, no relationship between those events is implied. Although the protobuf batch format builds on the protobuf format it is considered separate, that is to say that support of protobuf format does not indicate support of the batch representation. The batch format MUST only be used where supported.","title":"5. Batch Format"},{"location":"formats/protobuf-format/#51-envelope","text":"The enveloping container is a CloudEventBatch protobuf message containing a repeating set of CloudEvent message(s): message CloudEventBatch { repeated CloudEvent events = 1 ; }","title":"5.1 Envelope"},{"location":"formats/protobuf-format/#52-batch-media-type","text":"A compliant protobuf batch representation is identifed using the following media-type application/cloudevents-batch+protobuf","title":"5.2 Batch Media Type"},{"location":"formats/protobuf-format/#6-examples","text":"The following code-snippets show how proto representations might be constucted assuming the availability of some convenience methods.","title":"6. Examples"},{"location":"formats/protobuf-format/#61-plain-text-event-data","text":"public static CloudEvent plainTextExample () { CloudEvent . Builder ceBuilder = CloudEvent . newBuilder (); ceBuilder //-- REQUIRED Attributes. . setId ( UUID . randomUUID (). toString ()) . setSpecVersion ( \"1.0\" ) . setType ( \"io.cloudevent.example\" ) . setSource ( \"producer-1\" ) //-- Data. . setTextData ( \"This is a plain text message\" ); //-- OPTIONAL Attributes withCurrentTime ( ceBuilder , \"time\" ); withAttribute ( ceBuilder , \"datacontenttype\" , \"text/plain\" ); // Build it. return ceBuilder . build (); }","title":"6.1 Plain Text event data"},{"location":"formats/protobuf-format/#62-proto-message-as-event-data","text":"Where the event data payload is itself a protobuf message (with its own schema) a protocol buffer idiomatic method can be used to carry the data. private static Spec . CloudEvent protoExample () { //-- Build an event data protobuf object. Test . SomeData . Builder dataBuilder = Test . SomeData . newBuilder (); dataBuilder . setSomeText ( \"this is an important message\" ) . setIsImportant ( true ); //-- Build the CloudEvent. CloudEvent . Builder ceBuilder = Spec . CloudEvent . newBuilder (); ceBuilder . setId ( UUID . randomUUID (). toString ()) . setSpecVersion ( \"1.0\" ) . setType ( \"io.cloudevent.example\" ) . setSource ( \"producer-2\" ) // Add the proto data into the CloudEvent envelope. . setProtoData ( Any . pack ( dataBuilder . build ())); // Add the protto type URL withAttribute ( ceBuilder , \"dataschema\" , ceBuilder . getProtoData (). getTypeUrl ()); // Set Content-Type (OPTIONAL) withAttribute ( ceBuilder , \"datacontenttype\" , \"application/protobuf\" ); //-- Done. return ceBuilder . build (); }","title":"6.2 Proto message as event data"},{"location":"formats/protobuf-format/#references","text":"Protocol Buffer 3 Specification CloudEvents Protocol Buffers format schema","title":"References"},{"location":"working-drafts/cbor-format/","text":"CBOR Event Format for CloudEvents - Version 1.0.3-wip \u00b6 \u6458\u8981 \u00b6 \u8be5\u89c4\u8303\u5b9a\u4e49\u4e86\u5982\u4f55\u4ee5\u7b80\u6d01 \u4e8c\u8fdb\u5236\u5bf9\u8c61\u8868\u793a(CBOR) \u6570\u636e\u683c\u5f0f\u5e8f\u5217\u5316 CloudEvents\u3002 Table of Contents \u00b6 Introduction Attributes Envelope 1. \u4ecb\u7ecd \u00b6 CloudEvents \u662f\u4e8b\u4ef6\u7684\u7ed3\u6784\u548c\u5143\u6570\u636e\u63cf\u8ff0\u7684\u6807\u51c6\u5316\u548c\u534f\u8bae\u65e0\u5173\u7684\u5b9a\u4e49\u3002 \u8be5\u89c4\u8303\u5b9a\u4e49\u4e86\u5982\u4f55\u7528\u7b80\u660e\u4e8c\u8fdb\u5236\u5bf9\u8c61\u8868\u793a(CBOR)\u6570\u636e\u4ea4\u6362\u683c\u5f0f([RFC 8949][cbor -spec])\u8868\u793a CloudEvents \u89c4\u8303\u4e2d\u5b9a\u4e49\u7684\u5143\u7d20\u3002 The Attributes section describes the naming conventions and data type mappings for CloudEvents attributes. The Envelope section defines a CBOR container for CloudEvents attributes and an associated media type. 1.1. \u4e00\u81f4\u6027 \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 2. \u5c5e\u6027 \u00b6 This section defines how CloudEvents attributes are mapped to CBOR. This specification does not explicitly map each attribute, but provides a generic mapping model that applies to all current and future CloudEvents attributes, including extensions. For clarity, extension attributes are encoded using the same rules as core attributes. This includes their syntax and placement within the CBOR data item. In particular, extensions are placed as top-level CBOR key-value pairs of a map. Extensions MUST be encoded as a top-level CBOR key-value pairs. 2.1. Base Type System \u00b6 The core CloudEvents specification defines a minimal abstract type system, which this mapping leans on. 2.2. Type System Mapping \u00b6 The CloudEvents type system MUST be mapped to CBOR types as follows, with exceptions noted below. CloudEvents CBOR Boolean CBOR simple value true (21) or CBOR simple value false (20) Integer Major type 0 for positive integers and Major type 1 for negative integers String Major type 3 Binary Major type 2 URI Major type 6 tagged as a URI (tag number 32 ) or a Major type 3 (string) following RFC 3986 URI-reference Major type 6 tagged as a URI (tag number 32 ) or a Major type 3 (string) following RFC 3986 Timestamp Major type 6 tagged as a Standard Date/Time String (tag number 0 ) or a Major type 3 (string) following RFC 3339 (ISO 8601) Unset attributes MAY be encoded to the CBOR simple value null (22). When decoding attributes and a null value is encountered, it MUST be treated as the equivalent of unset or omitted. The reason major types 0 and 1 were chosen to represent the Integer type is because CBOR does not have a single type for positive and negative numbers, but rather a type for positive numbers (0) and a type for negative numbers (1). Extension specifications MAY define secondary mapping rules for the values of attributes they define, but MUST also include the previously defined primary mapping. For instance, the attribute value might be a data structure defined in a standard outside of CloudEvents, with a formal CBOR mapping, and there might be risk of translation errors or information loss when the original format is not preserved. An extension specification that defines a secondary mapping rule for CBOR, and any revision of such a specification, MUST also define explicit mapping rules for all other event formats that are part of the CloudEvents core at the time of the submission or revision. If needed, the CloudEvents attribute type can be determined by inference using the rules from the mapping table. The value is compatible with the respective CloudEvents type when the mapping rules are fulfilled. 2.4. CDDL Schema Validation \u00b6 The CloudEvents CDDL for the spec is defined under cloudevents.cddl and contains the definitions for validating events in CBOR. 3. Envelope \u00b6 Each CloudEvent event MAY be wholly represented as a CBOR map ( major type 5 ). Such a representation MUST use the media type application/cloudevents+cbor . All REQUIRED and all not omitted OPTIONAL attributes in the given event MUST become key-value pairs of the CBOR map, with the respective CBOR item key acting as the attribute name and encoded as a CBOR text ( major type 3 ), and the items's type and value being mapped using the type system mapping . OPTIONAL not omitted attributes MAY be represented as a CBOR simple value null (22). 3.1. Handling of \"data\" \u00b6 The CBOR representation of the event \"data\" payload is determined by the runtime type of the data content and the value of the datacontenttype attribute . 3.1.1. Payload Encoding \u00b6 Before taking action, a CBOR encoder MUST first determine the runtime data type of the data content. If the implementation determines that the type of data is Binary , the value MUST be represented as a Major type 2 value. If present, the datacontenttype MUST reflect the format of the original binary data. If the type of data is not Binary , the implementation will next determine whether the value of the datacontenttype attribute declares the data to contain CBOR-formatted content. Such a content type is defined as one having a media subtype equal to cbor or ending with a +cbor format extension. That is, a datacontenttype declares CBOR-formatted content if its media type, when stripped of parameters, has the form */cbor or */*+cbor . If the datacontenttype is unspecified, processing SHOULD proceed as if the datacontenttype had been specified explicitly as application/cbor . If the datacontenttype declares the data to contain CBOR-formatted content, a CBOR encoder MUST translate the data value to a CBOR data item , and use the member name data to store it inside the CBOR representation. The data value MUST be stored directly as a CBOR data item, rather than as an encoded CBOR buffer (tagged or un-tagged). An implementation MAY fail to encode the event if it is unable to translate the runtime value to a CBOR data item . Otherwise, if the datacontenttype does not declare CBOR-formatted data content, a CBOR encoder MUST store the data value, properly encoded according to the datacontenttype , in the data member of the CBOR representation. An implementation MAY fail to encode the event if it is unable to represent the runtime value as a properly encoded CBOR data item. Furthermore, unlike attributes, for which value types are restricted by the type-system mapping , the data member CBOR data item is unrestricted, and MAY contain any valid CBOR if the datacontenttype declares the data to be CBOR-formatted. In particular, the data member MAY have a simple value of null , representing an explicit null payload as distinct from the absence of the data member. 3.1.2. Payload Decoding \u00b6 When a data member is present, the decoding behavior is dependent on the value of the datacontenttype attribute. If the datacontenttype declares the data to contain CBOR-formatted content (that is, its subtype is cbor or has a +cbor format extension), then the data member MUST be treated directly as a CBOR data item and decoded using an appropriate CBOR type mapping for the runtime. Note: if the data member is a string, bytes or encoded cbor data item , a CBOR decoder MUST interpret it directly as a the given value; it MUST NOT further decode the value as a CBOR data item . If the datacontenttype does not declare CBOR-formatted data content, then the data member SHOULD be treated as an encoded content string. An implementation MAY fail to decode the event if the data member is not a string or bytes value, or if it is unable to interpret the data with the datacontenttype . When a data member is present, if the datacontenttype attribute is absent, a CBOR decoder SHOULD proceed as if it were set to application/cbor , which declares the data to contain CBOR-formatted content. Thus, it SHOULD treat the data member directly as a CBOR data item as specified above. Furthermore, if a CBOR-formatted event with no datacontenttype attribute, is decoded and then re-encoded using a different format or protocol binding, the datacontenttype in the re-encoded event SHOULD be set explicitly to the implied application/cbor content type to preserve the semantics of the event. References \u00b6 RFC 8949 Concise Binary Object Representation (CBOR) RFC 8610 Concise Data Definition Language (CDDL) A Notational Convention to Express Concise Binary Object Representation (CBOR).","title":"cbor\u683c\u5f0f"},{"location":"working-drafts/cbor-format/#cbor-event-format-for-cloudevents-version-103-wip","text":"","title":"CBOR Event Format for CloudEvents - Version 1.0.3-wip"},{"location":"working-drafts/cbor-format/#_1","text":"\u8be5\u89c4\u8303\u5b9a\u4e49\u4e86\u5982\u4f55\u4ee5\u7b80\u6d01 \u4e8c\u8fdb\u5236\u5bf9\u8c61\u8868\u793a(CBOR) \u6570\u636e\u683c\u5f0f\u5e8f\u5217\u5316 CloudEvents\u3002","title":"\u6458\u8981"},{"location":"working-drafts/cbor-format/#table-of-contents","text":"Introduction Attributes Envelope","title":"Table of Contents"},{"location":"working-drafts/cbor-format/#1","text":"CloudEvents \u662f\u4e8b\u4ef6\u7684\u7ed3\u6784\u548c\u5143\u6570\u636e\u63cf\u8ff0\u7684\u6807\u51c6\u5316\u548c\u534f\u8bae\u65e0\u5173\u7684\u5b9a\u4e49\u3002 \u8be5\u89c4\u8303\u5b9a\u4e49\u4e86\u5982\u4f55\u7528\u7b80\u660e\u4e8c\u8fdb\u5236\u5bf9\u8c61\u8868\u793a(CBOR)\u6570\u636e\u4ea4\u6362\u683c\u5f0f([RFC 8949][cbor -spec])\u8868\u793a CloudEvents \u89c4\u8303\u4e2d\u5b9a\u4e49\u7684\u5143\u7d20\u3002 The Attributes section describes the naming conventions and data type mappings for CloudEvents attributes. The Envelope section defines a CBOR container for CloudEvents attributes and an associated media type.","title":"1. \u4ecb\u7ecd"},{"location":"working-drafts/cbor-format/#11","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. \u4e00\u81f4\u6027"},{"location":"working-drafts/cbor-format/#2","text":"This section defines how CloudEvents attributes are mapped to CBOR. This specification does not explicitly map each attribute, but provides a generic mapping model that applies to all current and future CloudEvents attributes, including extensions. For clarity, extension attributes are encoded using the same rules as core attributes. This includes their syntax and placement within the CBOR data item. In particular, extensions are placed as top-level CBOR key-value pairs of a map. Extensions MUST be encoded as a top-level CBOR key-value pairs.","title":"2. \u5c5e\u6027"},{"location":"working-drafts/cbor-format/#21-base-type-system","text":"The core CloudEvents specification defines a minimal abstract type system, which this mapping leans on.","title":"2.1. Base Type System"},{"location":"working-drafts/cbor-format/#22-type-system-mapping","text":"The CloudEvents type system MUST be mapped to CBOR types as follows, with exceptions noted below. CloudEvents CBOR Boolean CBOR simple value true (21) or CBOR simple value false (20) Integer Major type 0 for positive integers and Major type 1 for negative integers String Major type 3 Binary Major type 2 URI Major type 6 tagged as a URI (tag number 32 ) or a Major type 3 (string) following RFC 3986 URI-reference Major type 6 tagged as a URI (tag number 32 ) or a Major type 3 (string) following RFC 3986 Timestamp Major type 6 tagged as a Standard Date/Time String (tag number 0 ) or a Major type 3 (string) following RFC 3339 (ISO 8601) Unset attributes MAY be encoded to the CBOR simple value null (22). When decoding attributes and a null value is encountered, it MUST be treated as the equivalent of unset or omitted. The reason major types 0 and 1 were chosen to represent the Integer type is because CBOR does not have a single type for positive and negative numbers, but rather a type for positive numbers (0) and a type for negative numbers (1). Extension specifications MAY define secondary mapping rules for the values of attributes they define, but MUST also include the previously defined primary mapping. For instance, the attribute value might be a data structure defined in a standard outside of CloudEvents, with a formal CBOR mapping, and there might be risk of translation errors or information loss when the original format is not preserved. An extension specification that defines a secondary mapping rule for CBOR, and any revision of such a specification, MUST also define explicit mapping rules for all other event formats that are part of the CloudEvents core at the time of the submission or revision. If needed, the CloudEvents attribute type can be determined by inference using the rules from the mapping table. The value is compatible with the respective CloudEvents type when the mapping rules are fulfilled.","title":"2.2. Type System Mapping"},{"location":"working-drafts/cbor-format/#24-cddl-schema-validation","text":"The CloudEvents CDDL for the spec is defined under cloudevents.cddl and contains the definitions for validating events in CBOR.","title":"2.4. CDDL Schema Validation"},{"location":"working-drafts/cbor-format/#3-envelope","text":"Each CloudEvent event MAY be wholly represented as a CBOR map ( major type 5 ). Such a representation MUST use the media type application/cloudevents+cbor . All REQUIRED and all not omitted OPTIONAL attributes in the given event MUST become key-value pairs of the CBOR map, with the respective CBOR item key acting as the attribute name and encoded as a CBOR text ( major type 3 ), and the items's type and value being mapped using the type system mapping . OPTIONAL not omitted attributes MAY be represented as a CBOR simple value null (22).","title":"3. Envelope"},{"location":"working-drafts/cbor-format/#31-handling-of-data","text":"The CBOR representation of the event \"data\" payload is determined by the runtime type of the data content and the value of the datacontenttype attribute .","title":"3.1. Handling of \"data\""},{"location":"working-drafts/cbor-format/#311-payload-encoding","text":"Before taking action, a CBOR encoder MUST first determine the runtime data type of the data content. If the implementation determines that the type of data is Binary , the value MUST be represented as a Major type 2 value. If present, the datacontenttype MUST reflect the format of the original binary data. If the type of data is not Binary , the implementation will next determine whether the value of the datacontenttype attribute declares the data to contain CBOR-formatted content. Such a content type is defined as one having a media subtype equal to cbor or ending with a +cbor format extension. That is, a datacontenttype declares CBOR-formatted content if its media type, when stripped of parameters, has the form */cbor or */*+cbor . If the datacontenttype is unspecified, processing SHOULD proceed as if the datacontenttype had been specified explicitly as application/cbor . If the datacontenttype declares the data to contain CBOR-formatted content, a CBOR encoder MUST translate the data value to a CBOR data item , and use the member name data to store it inside the CBOR representation. The data value MUST be stored directly as a CBOR data item, rather than as an encoded CBOR buffer (tagged or un-tagged). An implementation MAY fail to encode the event if it is unable to translate the runtime value to a CBOR data item . Otherwise, if the datacontenttype does not declare CBOR-formatted data content, a CBOR encoder MUST store the data value, properly encoded according to the datacontenttype , in the data member of the CBOR representation. An implementation MAY fail to encode the event if it is unable to represent the runtime value as a properly encoded CBOR data item. Furthermore, unlike attributes, for which value types are restricted by the type-system mapping , the data member CBOR data item is unrestricted, and MAY contain any valid CBOR if the datacontenttype declares the data to be CBOR-formatted. In particular, the data member MAY have a simple value of null , representing an explicit null payload as distinct from the absence of the data member.","title":"3.1.1. Payload Encoding"},{"location":"working-drafts/cbor-format/#312-payload-decoding","text":"When a data member is present, the decoding behavior is dependent on the value of the datacontenttype attribute. If the datacontenttype declares the data to contain CBOR-formatted content (that is, its subtype is cbor or has a +cbor format extension), then the data member MUST be treated directly as a CBOR data item and decoded using an appropriate CBOR type mapping for the runtime. Note: if the data member is a string, bytes or encoded cbor data item , a CBOR decoder MUST interpret it directly as a the given value; it MUST NOT further decode the value as a CBOR data item . If the datacontenttype does not declare CBOR-formatted data content, then the data member SHOULD be treated as an encoded content string. An implementation MAY fail to decode the event if the data member is not a string or bytes value, or if it is unable to interpret the data with the datacontenttype . When a data member is present, if the datacontenttype attribute is absent, a CBOR decoder SHOULD proceed as if it were set to application/cbor , which declares the data to contain CBOR-formatted content. Thus, it SHOULD treat the data member directly as a CBOR data item as specified above. Furthermore, if a CBOR-formatted event with no datacontenttype attribute, is decoded and then re-encoded using a different format or protocol binding, the datacontenttype in the re-encoded event SHOULD be set explicitly to the implied application/cbor content type to preserve the semantics of the event.","title":"3.1.2. Payload Decoding"},{"location":"working-drafts/cbor-format/#references","text":"RFC 8949 Concise Binary Object Representation (CBOR) RFC 8610 Concise Data Definition Language (CDDL) A Notational Convention to Express Concise Binary Object Representation (CBOR).","title":"References"},{"location":"working-drafts/xml-format/","text":"XML Event Format for CloudEvents - Version 1.0.3-wip \u00b6 \u6458\u8981 \u00b6 \u8fd9\u4e2a CloudEvents \u7684\u683c\u5f0f\u89c4\u8303\u5b9a\u4e49\u4e86\u5982\u4f55\u5728 XML \u6587\u6863\u4e2d\u8868\u793a\u4e8b\u4ef6\u3002 Status of this document \u00b6 This document is a working draft. Table of Contents \u00b6 Introduction Attributes Data Envelope XML Batch Format Examples 1. Introduction \u00b6 CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how elements defined in the CloudEvents specification are to be represented using Extensible Markup Language (XML) elements. The Attributes section describes the representation and data type mappings for CloudEvents context attributes. The Data section defines the container for the data portion of a CloudEvent. The Envelope section defines an XML element to contain CloudEvent context attributes and data. The Batch section describes how multiple CloudEvents can be packaged into a single XML element. 1.1. Conformance \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 . 1.2 Approach \u00b6 The XML representation used is deliberately verbose in favor of readability and deterministic processing. Preservation of type information for CloudEvent attributes is supported allowing custom extensions to be communicated without type loss. A schema-less approach has been taken favoring convention over rigid document structure. The namespace http://cloudevents.io/xmlformat/V1 MUST be used. When namespace prefixes are used a prefix of ce is preferred but MUST NOT be expected from an XML document processing perspective. Where an event (or batch of events) is represented as a complete XML document, an XML document preamble SHOULD be included to ensure deterministic processing. XML comments are permitted anywhere within an XML representation of a CloudEvent or CloudEvent batch. Comments MUST be ignored during processing, except for the child element of a <data> element containing XML data , where all nodes MUST be preserved. 2. Attributes \u00b6 The CloudEvents type system is mapped to a set of CloudEvent specific type designators as follows : CloudEvents Type XML Format Type XML Schema Type Notes Boolean ce:boolean xs:boolean true or false Integer ce:integer xs:int String ce:string xs:string Binary ce:binary xs:base64Binary URI ce:uri xs:anyURI following RFC 3986 URI-reference ce:uriRef xs:anyURI following RFC 3986 Timestamp ce:timestamp xs:dateTime following RFC 3339 Each CloudEvent context attribute MUST be represented as an XML element whose local name exactly matches that of the attribute. See the envelope for special handing of the specversion context attribute. Extension context attributes MUST be decorated with the appropriate CloudEvent type format designators using an xsi:type XML attribute, this allows them to be exchanged without loss of type information. An XML element representing a core context attribute MAY be decorated with an xsi:type XML attribute. If present, this designator MUST match that of the type specified by the CloudEvent context attributes . An XML element representing a context attribute MUST NOT contain any child elements. No other XML element attributes are expected, if present they MUST be ignored during processing. ... <id> AAABBBCCCNNN0000 </id> .. <time> 2021-08-14T14:30:22-08:00 </time> .. <myextension xsi:type= \"ce:string\" > my extension value </myextension> <myboolean xsi:type= \"ce:boolean\" > false </myboolean> 3. Data \u00b6 The data portion of a CloudEvent follows a similar model to that employed by the JSON Format specification . A <data> element MUST be used to encapsulate the payload. An xsi:type is used to discrimate the payload type and MUST be present. The <data> element MUST NOT occur more than once within an <event> element. The following data representations are supported: 3.1 Binary Data \u00b6 Binary data MUST be carried in an element with a defined type of xs:base64Binary and encoded appropriately. The element MUST NOT contain any child elements. Example: <data xsi:type= \"xs:base64Binary\" > ......... </data> 3.2 Text Data \u00b6 Text MUST be carried in an element with a defined type of xs:string . The element MUST NOT contain any child elements. Example: <data xsi:type= \"xs:string\" > This is text </data> 3.3 XML Data \u00b6 XML data MUST be carried in an element with a defined type of xs:any with exactly one child XML element (with any mandatory namespace definitions). All XML nodes (including comments) within the child XML element MUST be preserved during processing. The <data> XML element MUST NOT contain any direct child text nodes with non-whitespace content. There are no restrictions on the content of the child XML element. Example: <data xsi:type= \"xs:any\" > <myData xmlns= \"http://my.org/namespace\" > .... </myData> </data> 4. Envelope \u00b6 Each CloudEvent is wholly represented as an <event> XML element that MUST carry the specversion as an XML attribute value. Such a representation MUST use the media type application/cloudevents+xml . The enveloping element contains: A set of CloudEvent context attribute XML elements. An OPTIONAL <data> XML element. The <event> element MUST NOT contain any direct child text nodes with non-whitespace content. Example (XML preamble and namespace definitions omitted for brevity) : <event specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> text/plain </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <myboolean xsi:type= \"ce:boolean\" > false </myboolean> <data xsi:type= \"xs:string\" > Now is the winter of our discount tents... </data> </event> 5. XML Batch Format \u00b6 In the XML Batch Format several CloudEvents are batched into a single XML <batch> element. The element comprises a list of elements in the XML Format. The <event> element MUST NOT contain any direct child text nodes with non-whitespace content. Although the XML Batch Format builds on top of the XML Format , it is considered as a separate format: a valid implementation of the XML Format doesn't need to support it. The XML Batch Format MUST NOT be used when only support for the XML Format is indicated. An XML Batch of CloudEvents MUST use the media type application/cloudevents-batch+xml . Example (XML preamble and namespace definitions omitted for brevity) : <batch> <event specversion= \"1.0\" > .... </event> <event specversion= \"1.0\" > .... </event> .... </batch> 6. Examples \u00b6 6.1 CloudEvent with PNG image data \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> image/png </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:base64Binary\" > ... Base64 encoded data... </data> </event> 6.2 CloudEvent with JSON event data \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> application/json </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:string\" > { \"salutation\": \"Good Morning\", \"text\": \"hello world\" } </data> </event> 6.3 CloudEvent with XML event data \u00b6 6.3.1 Locally namespaced event data \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> application/xml </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:any\" > <geo:Location xmlns:geo= \"http://someauthority.example/\" > <geo:Latitude> 51.509865 </geo:Latitude> <geo:Longitude> -0.118092 </geo:Longitude> </geo:Location> </data> </event> 6.3.2 Explicit namespacing \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <ce:event xmlns:ce= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:geo= \"http://someauthority.example/\" specversion= \"1.0\" > <ce:time> 2020-03-19T12:54:00-07:00 </ce:time> <ce:datacontenttype> application/xml </ce:datacontenttype> <ce:id> 000-1111-2222 </ce:id> <ce:source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </ce:source> <ce:type> SOME.EVENT.TYPE </ce:type> <ce:data xsi:type= \"xs:any\" > <geo:Location> <geo:Latitude> 51.509865 </geo:Latitude> <geo:Longitude> -0.118092 </geo:Longitude> </geo:Location> </ce:data> </ce:event> 6.3.3 ISO 20022 Usage Example \u00b6 ISO 20022 is an XML based messaging standard used in the financial industry; this is a non-normative example. <?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2022-02-22T15:12:00-08:00 </time> <datacontenttype> application/xml </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> com.mybank.pain.001.001.03 </type> <data xsi:type= \"xs:any\" > <Document xmlns= \"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\" > <CstmrCdtTrfInitn> <GrpHdr> <MsgId> ABC/060928/CCT001 </MsgId> <CreDtTm> 2022-02-22T14:07:00 </CreDtTm> <NbOfTxs> 3 </NbOfTxs> <CtrlSum> 2400.56 </CtrlSum> <InitgPty> <Nm> Cobelfac </Nm> <Id> <OrgId> <Othr> <Id> 0468651441 </Id> <Issr> KBO-BCE </Issr> </Othr> </OrgId> </Id> </InitgPty> </GrpHdr> <PmtInf> <PmtInfId> ABC/4560/2008-09-25 </PmtInfId> <PmtMtd> TRF </PmtMtd> <BtchBookg> false </BtchBookg> <!-- Content ommited for brevity --> </PmtInf> </Document> </data> </event> 6.3.4 Batch Example \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <batch xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <event specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> image/png </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:base64Binary\" > ... Base64 encoded data... </data> </event> <event specversion= \"1.0\" > <time> 2020-03-19T12:59:00-07:00 </time> <datacontenttype> image/png </datacontenttype> <id> 000-1111-3333 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:base64Binary\" > ... Base64 encoded data... </data> </event> ..... </batch>","title":"xml\u683c\u5f0f"},{"location":"working-drafts/xml-format/#xml-event-format-for-cloudevents-version-103-wip","text":"","title":"XML Event Format for CloudEvents - Version 1.0.3-wip"},{"location":"working-drafts/xml-format/#_1","text":"\u8fd9\u4e2a CloudEvents \u7684\u683c\u5f0f\u89c4\u8303\u5b9a\u4e49\u4e86\u5982\u4f55\u5728 XML \u6587\u6863\u4e2d\u8868\u793a\u4e8b\u4ef6\u3002","title":"\u6458\u8981"},{"location":"working-drafts/xml-format/#status-of-this-document","text":"This document is a working draft.","title":"Status of this document"},{"location":"working-drafts/xml-format/#table-of-contents","text":"Introduction Attributes Data Envelope XML Batch Format Examples","title":"Table of Contents"},{"location":"working-drafts/xml-format/#1-introduction","text":"CloudEvents is a standardized and protocol-agnostic definition of the structure and metadata description of events. This specification defines how elements defined in the CloudEvents specification are to be represented using Extensible Markup Language (XML) elements. The Attributes section describes the representation and data type mappings for CloudEvents context attributes. The Data section defines the container for the data portion of a CloudEvent. The Envelope section defines an XML element to contain CloudEvent context attributes and data. The Batch section describes how multiple CloudEvents can be packaged into a single XML element.","title":"1. Introduction"},{"location":"working-drafts/xml-format/#11-conformance","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this document are to be interpreted as described in RFC2119 .","title":"1.1. Conformance"},{"location":"working-drafts/xml-format/#12-approach","text":"The XML representation used is deliberately verbose in favor of readability and deterministic processing. Preservation of type information for CloudEvent attributes is supported allowing custom extensions to be communicated without type loss. A schema-less approach has been taken favoring convention over rigid document structure. The namespace http://cloudevents.io/xmlformat/V1 MUST be used. When namespace prefixes are used a prefix of ce is preferred but MUST NOT be expected from an XML document processing perspective. Where an event (or batch of events) is represented as a complete XML document, an XML document preamble SHOULD be included to ensure deterministic processing. XML comments are permitted anywhere within an XML representation of a CloudEvent or CloudEvent batch. Comments MUST be ignored during processing, except for the child element of a <data> element containing XML data , where all nodes MUST be preserved.","title":"1.2 Approach"},{"location":"working-drafts/xml-format/#2-attributes","text":"The CloudEvents type system is mapped to a set of CloudEvent specific type designators as follows : CloudEvents Type XML Format Type XML Schema Type Notes Boolean ce:boolean xs:boolean true or false Integer ce:integer xs:int String ce:string xs:string Binary ce:binary xs:base64Binary URI ce:uri xs:anyURI following RFC 3986 URI-reference ce:uriRef xs:anyURI following RFC 3986 Timestamp ce:timestamp xs:dateTime following RFC 3339 Each CloudEvent context attribute MUST be represented as an XML element whose local name exactly matches that of the attribute. See the envelope for special handing of the specversion context attribute. Extension context attributes MUST be decorated with the appropriate CloudEvent type format designators using an xsi:type XML attribute, this allows them to be exchanged without loss of type information. An XML element representing a core context attribute MAY be decorated with an xsi:type XML attribute. If present, this designator MUST match that of the type specified by the CloudEvent context attributes . An XML element representing a context attribute MUST NOT contain any child elements. No other XML element attributes are expected, if present they MUST be ignored during processing. ... <id> AAABBBCCCNNN0000 </id> .. <time> 2021-08-14T14:30:22-08:00 </time> .. <myextension xsi:type= \"ce:string\" > my extension value </myextension> <myboolean xsi:type= \"ce:boolean\" > false </myboolean>","title":"2. Attributes"},{"location":"working-drafts/xml-format/#3-data","text":"The data portion of a CloudEvent follows a similar model to that employed by the JSON Format specification . A <data> element MUST be used to encapsulate the payload. An xsi:type is used to discrimate the payload type and MUST be present. The <data> element MUST NOT occur more than once within an <event> element. The following data representations are supported:","title":"3. Data"},{"location":"working-drafts/xml-format/#31-binary-data","text":"Binary data MUST be carried in an element with a defined type of xs:base64Binary and encoded appropriately. The element MUST NOT contain any child elements. Example: <data xsi:type= \"xs:base64Binary\" > ......... </data>","title":"3.1 Binary Data"},{"location":"working-drafts/xml-format/#32-text-data","text":"Text MUST be carried in an element with a defined type of xs:string . The element MUST NOT contain any child elements. Example: <data xsi:type= \"xs:string\" > This is text </data>","title":"3.2 Text Data"},{"location":"working-drafts/xml-format/#33-xml-data","text":"XML data MUST be carried in an element with a defined type of xs:any with exactly one child XML element (with any mandatory namespace definitions). All XML nodes (including comments) within the child XML element MUST be preserved during processing. The <data> XML element MUST NOT contain any direct child text nodes with non-whitespace content. There are no restrictions on the content of the child XML element. Example: <data xsi:type= \"xs:any\" > <myData xmlns= \"http://my.org/namespace\" > .... </myData> </data>","title":"3.3 XML Data"},{"location":"working-drafts/xml-format/#4-envelope","text":"Each CloudEvent is wholly represented as an <event> XML element that MUST carry the specversion as an XML attribute value. Such a representation MUST use the media type application/cloudevents+xml . The enveloping element contains: A set of CloudEvent context attribute XML elements. An OPTIONAL <data> XML element. The <event> element MUST NOT contain any direct child text nodes with non-whitespace content. Example (XML preamble and namespace definitions omitted for brevity) : <event specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> text/plain </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <myboolean xsi:type= \"ce:boolean\" > false </myboolean> <data xsi:type= \"xs:string\" > Now is the winter of our discount tents... </data> </event>","title":"4. Envelope"},{"location":"working-drafts/xml-format/#5-xml-batch-format","text":"In the XML Batch Format several CloudEvents are batched into a single XML <batch> element. The element comprises a list of elements in the XML Format. The <event> element MUST NOT contain any direct child text nodes with non-whitespace content. Although the XML Batch Format builds on top of the XML Format , it is considered as a separate format: a valid implementation of the XML Format doesn't need to support it. The XML Batch Format MUST NOT be used when only support for the XML Format is indicated. An XML Batch of CloudEvents MUST use the media type application/cloudevents-batch+xml . Example (XML preamble and namespace definitions omitted for brevity) : <batch> <event specversion= \"1.0\" > .... </event> <event specversion= \"1.0\" > .... </event> .... </batch>","title":"5. XML Batch Format"},{"location":"working-drafts/xml-format/#6-examples","text":"","title":"6. Examples"},{"location":"working-drafts/xml-format/#61-cloudevent-with-png-image-data","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> image/png </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:base64Binary\" > ... Base64 encoded data... </data> </event>","title":"6.1 CloudEvent with PNG image data"},{"location":"working-drafts/xml-format/#62-cloudevent-with-json-event-data","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> application/json </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:string\" > { \"salutation\": \"Good Morning\", \"text\": \"hello world\" } </data> </event>","title":"6.2 CloudEvent with JSON event data"},{"location":"working-drafts/xml-format/#63-cloudevent-with-xml-event-data","text":"","title":"6.3 CloudEvent with XML event data"},{"location":"working-drafts/xml-format/#631-locally-namespaced-event-data","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> application/xml </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:any\" > <geo:Location xmlns:geo= \"http://someauthority.example/\" > <geo:Latitude> 51.509865 </geo:Latitude> <geo:Longitude> -0.118092 </geo:Longitude> </geo:Location> </data> </event>","title":"6.3.1 Locally namespaced event data"},{"location":"working-drafts/xml-format/#632-explicit-namespacing","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <ce:event xmlns:ce= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" xmlns:geo= \"http://someauthority.example/\" specversion= \"1.0\" > <ce:time> 2020-03-19T12:54:00-07:00 </ce:time> <ce:datacontenttype> application/xml </ce:datacontenttype> <ce:id> 000-1111-2222 </ce:id> <ce:source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </ce:source> <ce:type> SOME.EVENT.TYPE </ce:type> <ce:data xsi:type= \"xs:any\" > <geo:Location> <geo:Latitude> 51.509865 </geo:Latitude> <geo:Longitude> -0.118092 </geo:Longitude> </geo:Location> </ce:data> </ce:event>","title":"6.3.2 Explicit namespacing"},{"location":"working-drafts/xml-format/#633-iso-20022-usage-example","text":"ISO 20022 is an XML based messaging standard used in the financial industry; this is a non-normative example. <?xml version=\"1.0\" encoding=\"UTF-8\"?> <event xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" specversion= \"1.0\" > <time> 2022-02-22T15:12:00-08:00 </time> <datacontenttype> application/xml </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> com.mybank.pain.001.001.03 </type> <data xsi:type= \"xs:any\" > <Document xmlns= \"urn:iso:std:iso:20022:tech:xsd:pain.001.001.03\" > <CstmrCdtTrfInitn> <GrpHdr> <MsgId> ABC/060928/CCT001 </MsgId> <CreDtTm> 2022-02-22T14:07:00 </CreDtTm> <NbOfTxs> 3 </NbOfTxs> <CtrlSum> 2400.56 </CtrlSum> <InitgPty> <Nm> Cobelfac </Nm> <Id> <OrgId> <Othr> <Id> 0468651441 </Id> <Issr> KBO-BCE </Issr> </Othr> </OrgId> </Id> </InitgPty> </GrpHdr> <PmtInf> <PmtInfId> ABC/4560/2008-09-25 </PmtInfId> <PmtMtd> TRF </PmtMtd> <BtchBookg> false </BtchBookg> <!-- Content ommited for brevity --> </PmtInf> </Document> </data> </event>","title":"6.3.3 ISO 20022 Usage Example"},{"location":"working-drafts/xml-format/#634-batch-example","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <batch xmlns= \"http://cloudevents.io/xmlformat/V1\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <event specversion= \"1.0\" > <time> 2020-03-19T12:54:00-07:00 </time> <datacontenttype> image/png </datacontenttype> <id> 000-1111-2222 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:base64Binary\" > ... Base64 encoded data... </data> </event> <event specversion= \"1.0\" > <time> 2020-03-19T12:59:00-07:00 </time> <datacontenttype> image/png </datacontenttype> <id> 000-1111-3333 </id> <source> urn:uuid:123e4567-e89b-12d3-a456-426614174000 </source> <type> SOME.EVENT.TYPE </type> <data xsi:type= \"xs:base64Binary\" > ... Base64 encoded data... </data> </event> ..... </batch>","title":"6.3.4 Batch Example"}]}